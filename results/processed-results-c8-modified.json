{
  "promises": {
    "0": {
      "source": "/bin/c8.js:49:1:49:1",
      "startTime": "23377000095438",
      "endTime": "23377026614188",
      "elapsedTime": "26518750",
      "asyncId": 5,
      "triggerAsyncId": 1,
      "io": "",
      "userCode": false,
      "uniqueid": "0",
      "line": "\n}\n\nrun().catch((err) => {\n  console.error(err.stack)\n  process.exitCode = 1\n}",
      "startLine": 49,
      "startCol": 1,
      "endLine": 49,
      "endCol": 1,
      "file": "/bin/c8.js",
      "triggers": [
        9
      ]
    },
    "1": {
      "source": "(internal/util.js:296:12:296:12)",
      "startTime": "23377001010461",
      "endTime": "23377017324416",
      "elapsedTime": "16313955",
      "asyncId": 6,
      "triggerAsyncId": 1,
      "io": false,
      "userCode": false,
      "uniqueid": "1",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        8
      ]
    },
    "2": {
      "source": "/bin/c8.js:49:1:49:1",
      "startTime": "23377003624071",
      "endTime": "23377019496530",
      "elapsedTime": "15872459",
      "asyncId": 8,
      "triggerAsyncId": 6,
      "io": "",
      "userCode": false,
      "uniqueid": "2",
      "line": "\n}\n\nrun().catch((err) => {\n  console.error(err.stack)\n  process.exitCode = 1\n}",
      "startLine": 49,
      "startCol": 1,
      "endLine": 49,
      "endCol": 1,
      "file": "/bin/c8.js",
      "triggers": [
        93,
        94
      ]
    },
    "3": {
      "source": "/bin/c8.js:49:12:49:12",
      "startTime": "23377003986097",
      "endTime": "23377026903296",
      "elapsedTime": "22917199",
      "asyncId": 9,
      "triggerAsyncId": 5,
      "io": "",
      "userCode": false,
      "uniqueid": "3",
      "line": "\n}\n\nrun().catch((err) => {\n  console.error(err.stack)\n  process.exitCode = 1\n}",
      "startLine": 49,
      "startCol": 12,
      "endLine": 49,
      "endCol": 12,
      "file": "/bin/c8.js",
      "triggers": []
    },
    "4": {
      "source": "/bin/c8.js:35:20:35:20",
      "startTime": "23377017767861",
      "endTime": "23377020278050",
      "elapsedTime": "2510189",
      "asyncId": 93,
      "triggerAsyncId": 8,
      "io": false,
      "userCode": false,
      "uniqueid": "4",
      "line": "\n    }\n\n    await promises.mkdir(argv.tempDirectory, { recursive: true })\n    process.env.NODE_V8_COVERAGE = argv.tempDirectory\n    foreground(hideInstrumenterArgs(argv), async (done) => {\n      try ",
      "startLine": 35,
      "startCol": 20,
      "endLine": 35,
      "endCol": 20,
      "file": "/bin/c8.js",
      "triggers": []
    },
    "5": {
      "source": "/bin/c8.js:35:20:35:20",
      "startTime": "23377018003731",
      "endTime": "23377020063290",
      "elapsedTime": "2059559",
      "asyncId": 94,
      "triggerAsyncId": 8,
      "io": false,
      "userCode": false,
      "uniqueid": "5",
      "line": "\n    }\n\n    await promises.mkdir(argv.tempDirectory, { recursive: true })\n    process.env.NODE_V8_COVERAGE = argv.tempDirectory\n    foreground(hideInstrumenterArgs(argv), async (done) => {\n      try ",
      "startLine": 35,
      "startCol": 20,
      "endLine": 35,
      "endCol": 20,
      "file": "/bin/c8.js",
      "triggers": []
    },
    "6": {
      "source": "/bin/c8.js:39:15:39:15",
      "startTime": "23399263798942",
      "endTime": "23405468789815",
      "elapsedTime": "6204990873",
      "asyncId": 114,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "7",
      "line": "\n    foreground(hideInstrumenterArgs(argv), async (done) => {\n      try {\n        await outputReport(argv)\n      } catch (err) {\n        console.error(err.stack)\n        process.exitCode = ",
      "startLine": 39,
      "startCol": 15,
      "endLine": 39,
      "endCol": 15,
      "file": "/bin/c8.js",
      "triggers": []
    },
    "7": {
      "source": "/lib/commands/report.js:27:16:27:16",
      "startTime": "23399265893532",
      "endTime": "23405468452972",
      "elapsedTime": "6202559440",
      "asyncId": 115,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "8",
      "line": "\n    src: argv.src\n  })\n  await report.run()\n  if (argv.checkCoverage) await checkCoverages(argv, report)\n}",
      "startLine": 27,
      "startCol": 16,
      "endLine": 27,
      "endCol": 16,
      "file": "/lib/commands/report.js",
      "triggers": [
        211
      ]
    },
    "8": {
      "source": "/lib/report.js:61:31:61:31",
      "startTime": "23399266666166",
      "endTime": "23405429107646",
      "elapsedTime": "6162441480",
      "asyncId": 116,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "9",
      "line": "\n      dir: this.reportsDirectory,\n      watermarks: this.watermarks,\n      coverageMap: await this.getCoverageMapFromAllCoverageFiles()\n    })\n\n    this.reporter.forEach(function (_reporter) ",
      "startLine": 61,
      "startCol": 31,
      "endLine": 61,
      "endCol": 31,
      "file": "/lib/report.js",
      "triggers": [
        210
      ]
    },
    "9": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405304547542",
      "endTime": "23405406661721",
      "elapsedTime": "102114179",
      "asyncId": 118,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "11",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": [
        128
      ]
    },
    "10": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405305849787",
      "endTime": "23405404656749",
      "elapsedTime": "98806962",
      "asyncId": 119,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "12",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": [
        127
      ]
    },
    "11": {
      "source": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js:43:52:43:52",
      "startTime": "23405306586205",
      "endTime": "23405402465526",
      "elapsedTime": "95879321",
      "asyncId": 120,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "13",
      "line": "\n\n  async load () {\n    const rawSource = this.sources.source || await readFile(this.path, 'utf8')\n    this.rawSourceMap = this.sources.sourceMap ||\n      // if we find a source-map (either inline, or a .map file) we load\n      // both the transpiled and original source, both of which are used durin",
      "startLine": 43,
      "startCol": 52,
      "endLine": 43,
      "endCol": 52,
      "file": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js",
      "triggers": [
        126
      ]
    },
    "12": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405308533552",
      "endTime": "23405404819897",
      "elapsedTime": "96286345",
      "asyncId": 126,
      "triggerAsyncId": 120,
      "io": false,
      "userCode": false,
      "uniqueid": "18",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": []
    },
    "13": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405308832152",
      "endTime": "23405406895747",
      "elapsedTime": "98063595",
      "asyncId": 127,
      "triggerAsyncId": 119,
      "io": "",
      "userCode": false,
      "uniqueid": "19",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": []
    },
    "14": {
      "source": "(:0:0:0:0)",
      "startTime": "23405309115207",
      "endTime": "23405407222742",
      "elapsedTime": "98107535",
      "asyncId": 128,
      "triggerAsyncId": 118,
      "io": "",
      "userCode": "",
      "uniqueid": "20",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": []
    },
    "15": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405309669458",
      "endTime": "23405410284260",
      "elapsedTime": "100614802",
      "asyncId": 130,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "22",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": [
        140
      ]
    },
    "16": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405309996754",
      "endTime": "23405409274833",
      "elapsedTime": "99278079",
      "asyncId": 131,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "23",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": [
        139
      ]
    },
    "17": {
      "source": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js:43:52:43:52",
      "startTime": "23405310584289",
      "endTime": "23405408683617",
      "elapsedTime": "98099328",
      "asyncId": 132,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "24",
      "line": "\n\n  async load () {\n    const rawSource = this.sources.source || await readFile(this.path, 'utf8')\n    this.rawSourceMap = this.sources.sourceMap ||\n      // if we find a source-map (either inline, or a .map file) we load\n      // both the transpiled and original source, both of which are used durin",
      "startLine": 43,
      "startCol": 52,
      "endLine": 43,
      "endCol": 52,
      "file": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js",
      "triggers": [
        138
      ]
    },
    "18": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405312537163",
      "endTime": "23405409705872",
      "elapsedTime": "97168709",
      "asyncId": 138,
      "triggerAsyncId": 132,
      "io": false,
      "userCode": false,
      "uniqueid": "29",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": []
    },
    "19": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405312836451",
      "endTime": "23405410471918",
      "elapsedTime": "97635467",
      "asyncId": 139,
      "triggerAsyncId": 131,
      "io": "",
      "userCode": false,
      "uniqueid": "30",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": []
    },
    "20": {
      "source": "(:0:0:0:0)",
      "startTime": "23405313228392",
      "endTime": "23405410820507",
      "elapsedTime": "97592115",
      "asyncId": 140,
      "triggerAsyncId": 130,
      "io": "",
      "userCode": "",
      "uniqueid": "31",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": []
    },
    "21": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405313863251",
      "endTime": "23405413231894",
      "elapsedTime": "99368643",
      "asyncId": 142,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "33",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": [
        152
      ]
    },
    "22": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405314246482",
      "endTime": "23405412681766",
      "elapsedTime": "98435284",
      "asyncId": 143,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "34",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": [
        151
      ]
    },
    "23": {
      "source": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js:43:52:43:52",
      "startTime": "23405314590793",
      "endTime": "23405412093977",
      "elapsedTime": "97503184",
      "asyncId": 144,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "35",
      "line": "\n\n  async load () {\n    const rawSource = this.sources.source || await readFile(this.path, 'utf8')\n    this.rawSourceMap = this.sources.sourceMap ||\n      // if we find a source-map (either inline, or a .map file) we load\n      // both the transpiled and original source, both of which are used durin",
      "startLine": 43,
      "startCol": 52,
      "endLine": 43,
      "endCol": 52,
      "file": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js",
      "triggers": [
        150
      ]
    },
    "24": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405318088695",
      "endTime": "23405412877828",
      "elapsedTime": "94789133",
      "asyncId": 150,
      "triggerAsyncId": 144,
      "io": false,
      "userCode": false,
      "uniqueid": "40",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": []
    },
    "25": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405318642366",
      "endTime": "23405413454930",
      "elapsedTime": "94812564",
      "asyncId": 151,
      "triggerAsyncId": 143,
      "io": "",
      "userCode": false,
      "uniqueid": "41",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": []
    },
    "26": {
      "source": "(:0:0:0:0)",
      "startTime": "23405319010920",
      "endTime": "23405413803474",
      "elapsedTime": "94792554",
      "asyncId": 152,
      "triggerAsyncId": 142,
      "io": "",
      "userCode": "",
      "uniqueid": "42",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": []
    },
    "27": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405319737851",
      "endTime": "23405416243482",
      "elapsedTime": "96505631",
      "asyncId": 154,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "44",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": [
        164
      ]
    },
    "28": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405320096236",
      "endTime": "23405415712410",
      "elapsedTime": "95616174",
      "asyncId": 155,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "45",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": [
        163
      ]
    },
    "29": {
      "source": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js:43:52:43:52",
      "startTime": "23405320424008",
      "endTime": "23405415075491",
      "elapsedTime": "94651483",
      "asyncId": 156,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "46",
      "line": "\n\n  async load () {\n    const rawSource = this.sources.source || await readFile(this.path, 'utf8')\n    this.rawSourceMap = this.sources.sourceMap ||\n      // if we find a source-map (either inline, or a .map file) we load\n      // both the transpiled and original source, both of which are used durin",
      "startLine": 43,
      "startCol": 52,
      "endLine": 43,
      "endCol": 52,
      "file": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js",
      "triggers": [
        162
      ]
    },
    "30": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405322329096",
      "endTime": "23405415921803",
      "elapsedTime": "93592707",
      "asyncId": 162,
      "triggerAsyncId": 156,
      "io": false,
      "userCode": false,
      "uniqueid": "51",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": []
    },
    "31": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405322637966",
      "endTime": "23405416484236",
      "elapsedTime": "93846270",
      "asyncId": 163,
      "triggerAsyncId": 155,
      "io": "",
      "userCode": false,
      "uniqueid": "52",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": []
    },
    "32": {
      "source": "(:0:0:0:0)",
      "startTime": "23405322890158",
      "endTime": "23405416831812",
      "elapsedTime": "93941654",
      "asyncId": 164,
      "triggerAsyncId": 154,
      "io": "",
      "userCode": "",
      "uniqueid": "53",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": []
    },
    "33": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405323481045",
      "endTime": "23405420084188",
      "elapsedTime": "96603143",
      "asyncId": 166,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "55",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": [
        176
      ]
    },
    "34": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405323813487",
      "endTime": "23405418839294",
      "elapsedTime": "95025807",
      "asyncId": 167,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "56",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": [
        175
      ]
    },
    "35": {
      "source": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js:43:52:43:52",
      "startTime": "23405324120812",
      "endTime": "23405418061827",
      "elapsedTime": "93941015",
      "asyncId": 168,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "57",
      "line": "\n\n  async load () {\n    const rawSource = this.sources.source || await readFile(this.path, 'utf8')\n    this.rawSourceMap = this.sources.sourceMap ||\n      // if we find a source-map (either inline, or a .map file) we load\n      // both the transpiled and original source, both of which are used durin",
      "startLine": 43,
      "startCol": 52,
      "endLine": 43,
      "endCol": 52,
      "file": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js",
      "triggers": [
        174
      ]
    },
    "36": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405325779660",
      "endTime": "23405419377009",
      "elapsedTime": "93597349",
      "asyncId": 174,
      "triggerAsyncId": 168,
      "io": false,
      "userCode": false,
      "uniqueid": "62",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": []
    },
    "37": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405326067710",
      "endTime": "23405420285499",
      "elapsedTime": "94217789",
      "asyncId": 175,
      "triggerAsyncId": 167,
      "io": "",
      "userCode": false,
      "uniqueid": "63",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": []
    },
    "38": {
      "source": "(:0:0:0:0)",
      "startTime": "23405326303413",
      "endTime": "23405420672925",
      "elapsedTime": "94369512",
      "asyncId": 176,
      "triggerAsyncId": 166,
      "io": "",
      "userCode": "",
      "uniqueid": "64",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": []
    },
    "39": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405326878568",
      "endTime": "23405424736580",
      "elapsedTime": "97858012",
      "asyncId": 178,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "66",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": [
        188
      ]
    },
    "40": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405327191440",
      "endTime": "23405422697335",
      "elapsedTime": "95505895",
      "asyncId": 179,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "67",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": [
        187
      ]
    },
    "41": {
      "source": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js:43:52:43:52",
      "startTime": "23405327490671",
      "endTime": "23405421705018",
      "elapsedTime": "94214347",
      "asyncId": 180,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "68",
      "line": "\n\n  async load () {\n    const rawSource = this.sources.source || await readFile(this.path, 'utf8')\n    this.rawSourceMap = this.sources.sourceMap ||\n      // if we find a source-map (either inline, or a .map file) we load\n      // both the transpiled and original source, both of which are used durin",
      "startLine": 43,
      "startCol": 52,
      "endLine": 43,
      "endCol": 52,
      "file": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js",
      "triggers": [
        186
      ]
    },
    "42": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405329060125",
      "endTime": "23405422896215",
      "elapsedTime": "93836090",
      "asyncId": 186,
      "triggerAsyncId": 180,
      "io": false,
      "userCode": false,
      "uniqueid": "73",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": []
    },
    "43": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405329352071",
      "endTime": "23405424933666",
      "elapsedTime": "95581595",
      "asyncId": 187,
      "triggerAsyncId": 179,
      "io": "",
      "userCode": false,
      "uniqueid": "74",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": []
    },
    "44": {
      "source": "(:0:0:0:0)",
      "startTime": "23405329634748",
      "endTime": "23405425327432",
      "elapsedTime": "95692684",
      "asyncId": 188,
      "triggerAsyncId": 178,
      "io": "",
      "userCode": "",
      "uniqueid": "75",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": []
    },
    "45": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405330221395",
      "endTime": "23405427968656",
      "elapsedTime": "97747261",
      "asyncId": 190,
      "triggerAsyncId": 98,
      "io": "",
      "userCode": false,
      "uniqueid": "77",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": [
        200
      ]
    },
    "46": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405330551815",
      "endTime": "23405427369062",
      "elapsedTime": "96817247",
      "asyncId": 191,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "78",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": [
        199
      ]
    },
    "47": {
      "source": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js:43:52:43:52",
      "startTime": "23405330855362",
      "endTime": "23405426970571",
      "elapsedTime": "96115209",
      "asyncId": 192,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "79",
      "line": "\n\n  async load () {\n    const rawSource = this.sources.source || await readFile(this.path, 'utf8')\n    this.rawSourceMap = this.sources.sourceMap ||\n      // if we find a source-map (either inline, or a .map file) we load\n      // both the transpiled and original source, both of which are used durin",
      "startLine": 43,
      "startCol": 52,
      "endLine": 43,
      "endCol": 52,
      "file": "/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js",
      "triggers": [
        198
      ]
    },
    "48": {
      "source": "/lib/report.js:104:25:104:25",
      "startTime": "23405332405484",
      "endTime": "23405427576666",
      "elapsedTime": "95171182",
      "asyncId": 198,
      "triggerAsyncId": 192,
      "io": false,
      "userCode": false,
      "uniqueid": "84",
      "line": "\n        const path = resolve(this.resolve, v8ScriptCov.url)\n        const converter = v8toIstanbul(path, this.wrapperLength, sources)\n        await converter.load()\n\n        if (resultCountPerPath.has(path)) {\n          resultCountPerPath.set(path, resultCountPerPath.get(path) + 1",
      "startLine": 104,
      "startCol": 25,
      "endLine": 104,
      "endCol": 25,
      "file": "/lib/report.js",
      "triggers": []
    },
    "49": {
      "source": "/lib/report.js:127:17:127:17",
      "startTime": "23405332692330",
      "endTime": "23405428172842",
      "elapsedTime": "95480512",
      "asyncId": 199,
      "triggerAsyncId": 191,
      "io": "",
      "userCode": false,
      "uniqueid": "85",
      "line": "\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));\n\n    /*  ",
      "startLine": 127,
      "startCol": 17,
      "endLine": 127,
      "endCol": 17,
      "file": "/lib/report.js",
      "triggers": []
    },
    "50": {
      "source": "(:0:0:0:0)",
      "startTime": "23405332977991",
      "endTime": "23405428589725",
      "elapsedTime": "95611734",
      "asyncId": 200,
      "triggerAsyncId": 190,
      "io": "",
      "userCode": "",
      "uniqueid": "86",
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": []
    },
    "51": {
      "source": "/lib/report.js:126:19:126:19",
      "startTime": "23405333277659",
      "endTime": "23405428746103",
      "elapsedTime": "95468444",
      "asyncId": 201,
      "triggerAsyncId": 98,
      "io": false,
      "userCode": false,
      "uniqueid": "87",
      "line": "\n    }\n\n    await Promise.all(v8ProcessCov.result.map(async (e) => { \n      await tmp.apply(this, [e]);\n    }));",
      "startLine": 126,
      "startCol": 19,
      "endLine": 126,
      "endCol": 19,
      "file": "/lib/report.js",
      "triggers": [
        209
      ]
    },
    "52": {
      "source": "/lib/report.js:61:31:61:31",
      "startTime": "23405335923085",
      "endTime": "23405429345494",
      "elapsedTime": "93422409",
      "asyncId": 209,
      "triggerAsyncId": 201,
      "io": false,
      "userCode": false,
      "uniqueid": "95",
      "line": "\n      dir: this.reportsDirectory,\n      watermarks: this.watermarks,\n      coverageMap: await this.getCoverageMapFromAllCoverageFiles()\n    })\n\n    this.reporter.forEach(function (_reporter) ",
      "startLine": 61,
      "startCol": 31,
      "endLine": 61,
      "endCol": 31,
      "file": "/lib/report.js",
      "triggers": []
    },
    "53": {
      "source": "/lib/commands/report.js:27:16:27:16",
      "startTime": "23405336138857",
      "endTime": "23405468634668",
      "elapsedTime": "132495811",
      "asyncId": 210,
      "triggerAsyncId": 116,
      "io": false,
      "userCode": false,
      "uniqueid": "96",
      "line": "\n    src: argv.src\n  })\n  await report.run()\n  if (argv.checkCoverage) await checkCoverages(argv, report)\n}",
      "startLine": 27,
      "startCol": 16,
      "endLine": 27,
      "endCol": 16,
      "file": "/lib/commands/report.js",
      "triggers": []
    },
    "54": {
      "source": "/bin/c8.js:39:15:39:15",
      "startTime": "23405336402479",
      "endTime": "23405469645655",
      "elapsedTime": "133243176",
      "asyncId": 211,
      "triggerAsyncId": 115,
      "io": "",
      "userCode": false,
      "uniqueid": "97",
      "line": "\n    foreground(hideInstrumenterArgs(argv), async (done) => {\n      try {\n        await outputReport(argv)\n      } catch (err) {\n        console.error(err.stack)\n        process.exitCode = ",
      "startLine": 39,
      "startCol": 15,
      "endLine": 39,
      "endCol": 15,
      "file": "/bin/c8.js",
      "triggers": []
    }
  },
  "files": {}
}