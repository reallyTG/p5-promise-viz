{
  "promises": {
    "0": {
      "source": "test.js:76:11:76:11",
      "startTime": "7030681996823",
      "endTime": "7030685232356",
      "elapsedTime": "3235533",
      "asyncId": 48,
      "triggerAsyncId": 46,
      "io": "",
      "userCode": false,
      "line": "\n  it('reads directory', async () => {\n    const files = ['a.txt', 'b.txt', 'c.txt'];\n    await touch(files);\n    const res = await read();\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 76,
      "startCol": 11,
      "endLine": 76,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        52
      ],
      "uniqueid": 0
    },
    "1": {
      "source": "test.js:76:11:76:11",
      "startTime": "7030682680950",
      "endTime": "7030684180075",
      "elapsedTime": "1499125",
      "asyncId": 51,
      "triggerAsyncId": 49,
      "io": "",
      "userCode": false,
      "line": "\n  it('reads directory', async () => {\n    const files = ['a.txt', 'b.txt', 'c.txt'];\n    await touch(files);\n    const res = await read();\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 76,
      "startCol": 11,
      "endLine": 76,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        57
      ],
      "uniqueid": 1
    },
    "2": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030682967601",
      "endTime": "7030687545063",
      "elapsedTime": "4577462",
      "asyncId": 52,
      "triggerAsyncId": 48,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        67,
        68,
        69,
        70
      ],
      "uniqueid": 2
    },
    "3": {
      "source": "test.js:76:5:76:5",
      "startTime": "7030684099268",
      "endTime": "7030684928698",
      "elapsedTime": "829430",
      "asyncId": 59,
      "triggerAsyncId": 57,
      "io": "",
      "userCode": false,
      "line": "\n  it('reads directory', async () => {\n    const files = ['a.txt', 'b.txt', 'c.txt'];\n    await touch(files);\n    const res = await read();\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 76,
      "startCol": 5,
      "endLine": 76,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        62
      ],
      "uniqueid": 3
    },
    "4": {
      "source": "test.js:76:5:76:5",
      "startTime": "7030684849223",
      "endTime": "7030685306763",
      "elapsedTime": "457540",
      "asyncId": 64,
      "triggerAsyncId": 62,
      "io": "",
      "userCode": false,
      "line": "\n  it('reads directory', async () => {\n    const files = ['a.txt', 'b.txt', 'c.txt'];\n    await touch(files);\n    const res = await read();\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 76,
      "startCol": 5,
      "endLine": 76,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 4
    },
    "5": {
      "source": "test.js:77:23:77:23",
      "startTime": "7030685479051",
      "endTime": "7030696363236",
      "elapsedTime": "10884185",
      "asyncId": 67,
      "triggerAsyncId": 52,
      "io": "",
      "userCode": false,
      "line": "\n    const files = ['a.txt', 'b.txt', 'c.txt'];\n    await touch(files);\n    const res = await read();\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(files[index], currPath)",
      "startLine": 77,
      "startCol": 23,
      "endLine": 77,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 5
    },
    "6": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030685683308",
      "endTime": "7030696049719",
      "elapsedTime": "10366411",
      "asyncId": 68,
      "triggerAsyncId": 52,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 6
    },
    "7": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030686414789",
      "endTime": "7030689657353",
      "elapsedTime": "3242564",
      "asyncId": 69,
      "triggerAsyncId": 52,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        77
      ],
      "uniqueid": 7
    },
    "8": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030686925886",
      "endTime": "7030689764082",
      "elapsedTime": "2838196",
      "asyncId": 72,
      "triggerAsyncId": 70,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 8
    },
    "9": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030689029436",
      "endTime": "7030692001954",
      "elapsedTime": "2972518",
      "asyncId": 77,
      "triggerAsyncId": 69,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        78,
        79,
        80,
        81
      ],
      "uniqueid": 9
    },
    "10": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030690028824",
      "endTime": "7030690191996",
      "elapsedTime": "163172",
      "asyncId": 78,
      "triggerAsyncId": 77,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        82
      ],
      "uniqueid": 10
    },
    "11": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030690340737",
      "endTime": "7030690552374",
      "elapsedTime": "211637",
      "asyncId": 79,
      "triggerAsyncId": 77,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        83
      ],
      "uniqueid": 11
    },
    "12": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030690788463",
      "endTime": "7030690930200",
      "elapsedTime": "141737",
      "asyncId": 80,
      "triggerAsyncId": 77,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        84
      ],
      "uniqueid": 12
    },
    "13": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030691072682",
      "endTime": "7030692268547",
      "elapsedTime": "1195865",
      "asyncId": 81,
      "triggerAsyncId": 77,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 13
    },
    "14": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030692646912",
      "endTime": "7030692852895",
      "elapsedTime": "205983",
      "asyncId": 86,
      "triggerAsyncId": 85,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 14
    },
    "15": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030693846583",
      "endTime": "7030694010694",
      "elapsedTime": "164111",
      "asyncId": 89,
      "triggerAsyncId": 87,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 15
    },
    "16": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030694643291",
      "endTime": "7030694851050",
      "elapsedTime": "207759",
      "asyncId": 91,
      "triggerAsyncId": 90,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 16
    },
    "17": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030707597993",
      "endTime": "7030709479814",
      "elapsedTime": "1881821",
      "asyncId": 130,
      "triggerAsyncId": 128,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        133,
        134,
        135,
        136
      ],
      "uniqueid": 17
    },
    "18": {
      "source": "test.js:95:23:95:23",
      "startTime": "7030708115688",
      "endTime": "7030716857697",
      "elapsedTime": "8742009",
      "asyncId": 133,
      "triggerAsyncId": 130,
      "io": "",
      "userCode": false,
      "line": "\n    const newPath = sysPath.join(currPath, 'test-symlinked.js');\n    await symlink(sysPath.join(__dirname, 'test.js'), newPath);\n    const res = await read();\n    const first = res[0];\n    first.should.containSubset(formatEntry('test-symlinked.js', currPath));\n    const contents = await readFile(first.fullPath)",
      "startLine": 95,
      "startCol": 23,
      "endLine": 95,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 18
    },
    "19": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030708268036",
      "endTime": "7030716646919",
      "elapsedTime": "8378883",
      "asyncId": 134,
      "triggerAsyncId": 130,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 19
    },
    "20": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030708519861",
      "endTime": "7030710559312",
      "elapsedTime": "2039451",
      "asyncId": 135,
      "triggerAsyncId": 130,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        143
      ],
      "uniqueid": 20
    },
    "21": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030708932641",
      "endTime": "7030710640723",
      "elapsedTime": "1708082",
      "asyncId": 138,
      "triggerAsyncId": 136,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 21
    },
    "22": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030710220796",
      "endTime": "7030711800975",
      "elapsedTime": "1580179",
      "asyncId": 143,
      "triggerAsyncId": 135,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        144,
        145
      ],
      "uniqueid": 22
    },
    "23": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030710821913",
      "endTime": "7030711031353",
      "elapsedTime": "209440",
      "asyncId": 144,
      "triggerAsyncId": 143,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        146
      ],
      "uniqueid": 23
    },
    "24": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030711205775",
      "endTime": "7030712005435",
      "elapsedTime": "799660",
      "asyncId": 145,
      "triggerAsyncId": 143,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 24
    },
    "25": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030712273074",
      "endTime": "7030715918365",
      "elapsedTime": "3645291",
      "asyncId": 148,
      "triggerAsyncId": 147,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 25
    },
    "26": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030712838466",
      "endTime": "7030715616812",
      "elapsedTime": "2778346",
      "asyncId": 151,
      "triggerAsyncId": 149,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [
        181
      ],
      "uniqueid": 26
    },
    "27": {
      "source": "test.js:107:23:107:23",
      "startTime": "7030725884938",
      "endTime": "7030740073922",
      "elapsedTime": "14188984",
      "asyncId": 227,
      "triggerAsyncId": 226,
      "io": "",
      "userCode": false,
      "line": "\n    const newPath = sysPath.join(currPath, 'examples');\n    await symlink(originalPath, newPath);\n    const res = await read();\n    const symlinkedFiles = res.map(entry => entry.basename);\n    symlinkedFiles.should.eql(originalFiles);\n  })",
      "startLine": 107,
      "startCol": 23,
      "endLine": 107,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 27
    },
    "28": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030726071941",
      "endTime": "7030739963416",
      "elapsedTime": "13891475",
      "asyncId": 228,
      "triggerAsyncId": 226,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 28
    },
    "29": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030726547261",
      "endTime": "7030728920488",
      "elapsedTime": "2373227",
      "asyncId": 229,
      "triggerAsyncId": 226,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        237
      ],
      "uniqueid": 29
    },
    "30": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030727198347",
      "endTime": "7030729003564",
      "elapsedTime": "1805217",
      "asyncId": 232,
      "triggerAsyncId": 230,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 30
    },
    "31": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030728593508",
      "endTime": "7030730152965",
      "elapsedTime": "1559457",
      "asyncId": 237,
      "triggerAsyncId": 229,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        238,
        239
      ],
      "uniqueid": 31
    },
    "32": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030729200508",
      "endTime": "7030729365293",
      "elapsedTime": "164785",
      "asyncId": 238,
      "triggerAsyncId": 237,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        240
      ],
      "uniqueid": 32
    },
    "33": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030729503211",
      "endTime": "7030730238594",
      "elapsedTime": "735383",
      "asyncId": 239,
      "triggerAsyncId": 237,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 33
    },
    "34": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030730454826",
      "endTime": "7030732979487",
      "elapsedTime": "2524661",
      "asyncId": 242,
      "triggerAsyncId": 241,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 34
    },
    "35": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030730833033",
      "endTime": "7030732707141",
      "elapsedTime": "1874108",
      "asyncId": 245,
      "triggerAsyncId": 243,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [
        275
      ],
      "uniqueid": 35
    },
    "36": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030733267932",
      "endTime": "7030734183360",
      "elapsedTime": "915428",
      "asyncId": 278,
      "triggerAsyncId": 246,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 36
    },
    "37": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030733618707",
      "endTime": "7030734254756",
      "elapsedTime": "636049",
      "asyncId": 281,
      "triggerAsyncId": 279,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 37
    },
    "38": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030734391878",
      "endTime": "7030734571285",
      "elapsedTime": "179407",
      "asyncId": 283,
      "triggerAsyncId": 282,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        288
      ],
      "uniqueid": 38
    },
    "39": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030734724054",
      "endTime": "7030734868136",
      "elapsedTime": "144082",
      "asyncId": 284,
      "triggerAsyncId": 282,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        289
      ],
      "uniqueid": 39
    },
    "40": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030735046282",
      "endTime": "7030735163865",
      "elapsedTime": "117583",
      "asyncId": 285,
      "triggerAsyncId": 282,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        290
      ],
      "uniqueid": 40
    },
    "41": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030735294594",
      "endTime": "7030735450195",
      "elapsedTime": "155601",
      "asyncId": 286,
      "triggerAsyncId": 282,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        291
      ],
      "uniqueid": 41
    },
    "42": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030735586326",
      "endTime": "7030736886908",
      "elapsedTime": "1300582",
      "asyncId": 287,
      "triggerAsyncId": 282,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 42
    },
    "43": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030737149815",
      "endTime": "7030737236719",
      "elapsedTime": "86904",
      "asyncId": 293,
      "triggerAsyncId": 292,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 43
    },
    "44": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030737750846",
      "endTime": "7030737921344",
      "elapsedTime": "170498",
      "asyncId": 296,
      "triggerAsyncId": 294,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 44
    },
    "45": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030738507104",
      "endTime": "7030738594957",
      "elapsedTime": "87853",
      "asyncId": 298,
      "triggerAsyncId": 297,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 45
    },
    "46": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030739054283",
      "endTime": "7030739203473",
      "elapsedTime": "149190",
      "asyncId": 300,
      "triggerAsyncId": 299,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 46
    },
    "47": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030746691563",
      "endTime": "7030747950106",
      "elapsedTime": "1258543",
      "asyncId": 332,
      "triggerAsyncId": 330,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        335,
        336
      ],
      "uniqueid": 47
    },
    "48": {
      "source": "test.js:117:11:117:11",
      "startTime": "7030747238745",
      "endTime": "7030749744152",
      "elapsedTime": "2505407",
      "asyncId": 335,
      "triggerAsyncId": 332,
      "io": "",
      "userCode": false,
      "line": "\n    const newPath = sysPath.join(currPath, symlinkName);\n    await symlink(sysPath.join(__dirname, 'test.js'), newPath);\n    await touch(files);\n    const expect = [...files, symlinkName];\n    const res = await read({lstat: true, alwaysStat: true});\n    res.should.have.lengthOf(expect.length)",
      "startLine": 117,
      "startCol": 11,
      "endLine": 117,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 48
    },
    "49": {
      "source": "test.js:117:11:117:11",
      "startTime": "7030747634185",
      "endTime": "7030748668628",
      "elapsedTime": "1034443",
      "asyncId": 338,
      "triggerAsyncId": 336,
      "io": "",
      "userCode": false,
      "line": "\n    const newPath = sysPath.join(currPath, symlinkName);\n    await symlink(sysPath.join(__dirname, 'test.js'), newPath);\n    await touch(files);\n    const expect = [...files, symlinkName];\n    const res = await read({lstat: true, alwaysStat: true});\n    res.should.have.lengthOf(expect.length)",
      "startLine": 117,
      "startCol": 11,
      "endLine": 117,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        342
      ],
      "uniqueid": 49
    },
    "50": {
      "source": "test.js:117:5:117:5",
      "startTime": "7030748582011",
      "endTime": "7030749392016",
      "elapsedTime": "810005",
      "asyncId": 344,
      "triggerAsyncId": 342,
      "io": "",
      "userCode": false,
      "line": "\n    const newPath = sysPath.join(currPath, symlinkName);\n    await symlink(sysPath.join(__dirname, 'test.js'), newPath);\n    await touch(files);\n    const expect = [...files, symlinkName];\n    const res = await read({lstat: true, alwaysStat: true});\n    res.should.have.lengthOf(expect.length)",
      "startLine": 117,
      "startCol": 5,
      "endLine": 117,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        347
      ],
      "uniqueid": 50
    },
    "51": {
      "source": "test.js:117:5:117:5",
      "startTime": "7030749309615",
      "endTime": "7030749819214",
      "elapsedTime": "509599",
      "asyncId": 349,
      "triggerAsyncId": 347,
      "io": "",
      "userCode": false,
      "line": "\n    const newPath = sysPath.join(currPath, symlinkName);\n    await symlink(sysPath.join(__dirname, 'test.js'), newPath);\n    await touch(files);\n    const expect = [...files, symlinkName];\n    const res = await read({lstat: true, alwaysStat: true});\n    res.should.have.lengthOf(expect.length)",
      "startLine": 117,
      "startCol": 5,
      "endLine": 117,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 51
    },
    "52": {
      "source": "test.js:119:23:119:23",
      "startTime": "7030749962122",
      "endTime": "7030763768993",
      "elapsedTime": "13806871",
      "asyncId": 352,
      "triggerAsyncId": 339,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(files);\n    const expect = [...files, symlinkName];\n    const res = await read({lstat: true, alwaysStat: true});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) => {\n      entry.should.containSubset(formatEntry(expect[index], currPath, false))",
      "startLine": 119,
      "startCol": 23,
      "endLine": 119,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 52
    },
    "53": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030750120200",
      "endTime": "7030763670052",
      "elapsedTime": "13549852",
      "asyncId": 353,
      "triggerAsyncId": 339,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 53
    },
    "54": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030750418552",
      "endTime": "7030752945300",
      "elapsedTime": "2526748",
      "asyncId": 354,
      "triggerAsyncId": 339,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        362
      ],
      "uniqueid": 54
    },
    "55": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030750835376",
      "endTime": "7030753024119",
      "elapsedTime": "2188743",
      "asyncId": 357,
      "triggerAsyncId": 355,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 55
    },
    "56": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030752604824",
      "endTime": "7030756395587",
      "elapsedTime": "3790763",
      "asyncId": 362,
      "triggerAsyncId": 354,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        363,
        364,
        367,
        368,
        371,
        372,
        375,
        376,
        379
      ],
      "uniqueid": 56
    },
    "57": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030753180548",
      "endTime": "7030756601337",
      "elapsedTime": "3420789",
      "asyncId": 363,
      "triggerAsyncId": 362,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        380
      ],
      "uniqueid": 57
    },
    "58": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030753530390",
      "endTime": "7030756673839",
      "elapsedTime": "3143449",
      "asyncId": 366,
      "triggerAsyncId": 364,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 58
    },
    "59": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030753741746",
      "endTime": "7030756991843",
      "elapsedTime": "3250097",
      "asyncId": 367,
      "triggerAsyncId": 362,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        381
      ],
      "uniqueid": 59
    },
    "60": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030754116173",
      "endTime": "7030757160483",
      "elapsedTime": "3044310",
      "asyncId": 370,
      "triggerAsyncId": 368,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 60
    },
    "61": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030754353077",
      "endTime": "7030757519193",
      "elapsedTime": "3166116",
      "asyncId": 371,
      "triggerAsyncId": 362,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        382
      ],
      "uniqueid": 61
    },
    "62": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030754697282",
      "endTime": "7030757603208",
      "elapsedTime": "2905926",
      "asyncId": 374,
      "triggerAsyncId": 372,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 62
    },
    "63": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030754879737",
      "endTime": "7030757861540",
      "elapsedTime": "2981803",
      "asyncId": 375,
      "triggerAsyncId": 362,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        383
      ],
      "uniqueid": 63
    },
    "64": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030755200780",
      "endTime": "7030757935829",
      "elapsedTime": "2735049",
      "asyncId": 378,
      "triggerAsyncId": 376,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 64
    },
    "65": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030755320075",
      "endTime": "7030758013196",
      "elapsedTime": "2693121",
      "asyncId": 379,
      "triggerAsyncId": 362,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 65
    },
    "66": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030758249320",
      "endTime": "7030758453132",
      "elapsedTime": "203812",
      "asyncId": 385,
      "triggerAsyncId": 384,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 66
    },
    "67": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030759125681",
      "endTime": "7030759234542",
      "elapsedTime": "108861",
      "asyncId": 388,
      "triggerAsyncId": 386,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 67
    },
    "68": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030759813693",
      "endTime": "7030759990873",
      "elapsedTime": "177180",
      "asyncId": 390,
      "triggerAsyncId": 389,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 68
    },
    "69": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030760516221",
      "endTime": "7030763329055",
      "elapsedTime": "2812834",
      "asyncId": 392,
      "triggerAsyncId": 391,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 69
    },
    "70": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030760840273",
      "endTime": "7030763137457",
      "elapsedTime": "2297184",
      "asyncId": 395,
      "triggerAsyncId": 393,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [
        426
      ],
      "uniqueid": 70
    },
    "71": {
      "source": "test.js:136:11:136:11",
      "startTime": "7030771265554",
      "endTime": "7030776980692",
      "elapsedTime": "5715138",
      "asyncId": 467,
      "triggerAsyncId": 465,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 11,
      "endLine": 136,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        471
      ],
      "uniqueid": 71
    },
    "72": {
      "source": "test.js:136:11:136:11",
      "startTime": "7030771805168",
      "endTime": "7030773268725",
      "elapsedTime": "1463557",
      "asyncId": 470,
      "triggerAsyncId": 468,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 11,
      "endLine": 136,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        476
      ],
      "uniqueid": 72
    },
    "73": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030772033006",
      "endTime": "7030778606756",
      "elapsedTime": "6573750",
      "asyncId": 471,
      "triggerAsyncId": 467,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        498,
        499,
        500,
        501
      ],
      "uniqueid": 73
    },
    "74": {
      "source": "test.js:136:5:136:5",
      "startTime": "7030773079645",
      "endTime": "7030773979685",
      "elapsedTime": "900040",
      "asyncId": 478,
      "triggerAsyncId": 476,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 5,
      "endLine": 136,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        481
      ],
      "uniqueid": 74
    },
    "75": {
      "source": "test.js:136:5:136:5",
      "startTime": "7030773898419",
      "endTime": "7030774610600",
      "elapsedTime": "712181",
      "asyncId": 483,
      "triggerAsyncId": 481,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 5,
      "endLine": 136,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        486
      ],
      "uniqueid": 75
    },
    "76": {
      "source": "test.js:136:5:136:5",
      "startTime": "7030774526082",
      "endTime": "7030775255374",
      "elapsedTime": "729292",
      "asyncId": 488,
      "triggerAsyncId": 486,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 5,
      "endLine": 136,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        489
      ],
      "uniqueid": 76
    },
    "77": {
      "source": "test.js:136:5:136:5",
      "startTime": "7030775029100",
      "endTime": "7030776036671",
      "elapsedTime": "1007571",
      "asyncId": 491,
      "triggerAsyncId": 489,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 5,
      "endLine": 136,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        492
      ],
      "uniqueid": 77
    },
    "78": {
      "source": "test.js:136:5:136:5",
      "startTime": "7030775834959",
      "endTime": "7030776726901",
      "elapsedTime": "891942",
      "asyncId": 494,
      "triggerAsyncId": 492,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 5,
      "endLine": 136,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        495
      ],
      "uniqueid": 78
    },
    "79": {
      "source": "test.js:136:5:136:5",
      "startTime": "7030776479523",
      "endTime": "7030777057838",
      "elapsedTime": "578315",
      "asyncId": 497,
      "triggerAsyncId": 495,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =",
      "startLine": 136,
      "startCol": 5,
      "endLine": 136,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 79
    },
    "80": {
      "source": "test.js:137:23:137:23",
      "startTime": "7030777209250",
      "endTime": "7030793932155",
      "elapsedTime": "16722905",
      "asyncId": 498,
      "triggerAsyncId": 471,
      "io": "",
      "userCode": false,
      "line": "\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(files[index], currPath)",
      "startLine": 137,
      "startCol": 23,
      "endLine": 137,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 80
    },
    "81": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030777445783",
      "endTime": "7030793769174",
      "elapsedTime": "16323391",
      "asyncId": 499,
      "triggerAsyncId": 471,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 81
    },
    "82": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030777698543",
      "endTime": "7030779509332",
      "elapsedTime": "1810789",
      "asyncId": 500,
      "triggerAsyncId": 471,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        508
      ],
      "uniqueid": 82
    },
    "83": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030778163077",
      "endTime": "7030779604489",
      "elapsedTime": "1441412",
      "asyncId": 503,
      "triggerAsyncId": 501,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 83
    },
    "84": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030779170438",
      "endTime": "7030783358952",
      "elapsedTime": "4188514",
      "asyncId": 508,
      "triggerAsyncId": 500,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        509,
        510,
        511,
        512,
        513,
        514,
        515,
        516
      ],
      "uniqueid": 84
    },
    "85": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030779763779",
      "endTime": "7030779955949",
      "elapsedTime": "192170",
      "asyncId": 509,
      "triggerAsyncId": 508,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        517
      ],
      "uniqueid": 85
    },
    "86": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030780187046",
      "endTime": "7030780302482",
      "elapsedTime": "115436",
      "asyncId": 510,
      "triggerAsyncId": 508,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        518
      ],
      "uniqueid": 86
    },
    "87": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030780445973",
      "endTime": "7030780605996",
      "elapsedTime": "160023",
      "asyncId": 511,
      "triggerAsyncId": 508,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        519
      ],
      "uniqueid": 87
    },
    "88": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030780758135",
      "endTime": "7030780934269",
      "elapsedTime": "176134",
      "asyncId": 512,
      "triggerAsyncId": 508,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        520
      ],
      "uniqueid": 88
    },
    "89": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030781069564",
      "endTime": "7030781241138",
      "elapsedTime": "171574",
      "asyncId": 513,
      "triggerAsyncId": 508,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        521
      ],
      "uniqueid": 89
    },
    "90": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030781438938",
      "endTime": "7030781591773",
      "elapsedTime": "152835",
      "asyncId": 514,
      "triggerAsyncId": 508,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        522
      ],
      "uniqueid": 90
    },
    "91": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030781760653",
      "endTime": "7030781920486",
      "elapsedTime": "159833",
      "asyncId": 515,
      "triggerAsyncId": 508,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        523
      ],
      "uniqueid": 91
    },
    "92": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030782054063",
      "endTime": "7030784001117",
      "elapsedTime": "1947054",
      "asyncId": 516,
      "triggerAsyncId": 508,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 92
    },
    "93": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030784311253",
      "endTime": "7030784425469",
      "elapsedTime": "114216",
      "asyncId": 525,
      "triggerAsyncId": 524,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 93
    },
    "94": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030784940587",
      "endTime": "7030785121929",
      "elapsedTime": "181342",
      "asyncId": 528,
      "triggerAsyncId": 526,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 94
    },
    "95": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030785511618",
      "endTime": "7030785623522",
      "elapsedTime": "111904",
      "asyncId": 530,
      "triggerAsyncId": 529,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 95
    },
    "96": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030786135186",
      "endTime": "7030786313854",
      "elapsedTime": "178668",
      "asyncId": 532,
      "triggerAsyncId": 531,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 96
    },
    "97": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030786699932",
      "endTime": "7030791412355",
      "elapsedTime": "4712423",
      "asyncId": 534,
      "triggerAsyncId": 533,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 97
    },
    "98": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030787055260",
      "endTime": "7030791492705",
      "elapsedTime": "4437445",
      "asyncId": 537,
      "triggerAsyncId": 535,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 98
    },
    "99": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030787203987",
      "endTime": "7030787386181",
      "elapsedTime": "182194",
      "asyncId": 538,
      "triggerAsyncId": 533,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 99
    },
    "100": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030788037861",
      "endTime": "7030791746496",
      "elapsedTime": "3708635",
      "asyncId": 540,
      "triggerAsyncId": 539,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 100
    },
    "101": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030788328381",
      "endTime": "7030791856283",
      "elapsedTime": "3527902",
      "asyncId": 543,
      "triggerAsyncId": 541,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 101
    },
    "102": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030788453283",
      "endTime": "7030788634079",
      "elapsedTime": "180796",
      "asyncId": 544,
      "triggerAsyncId": 539,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 102
    },
    "103": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030789160910",
      "endTime": "7030792072824",
      "elapsedTime": "2911914",
      "asyncId": 546,
      "triggerAsyncId": 545,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 103
    },
    "104": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030789499743",
      "endTime": "7030792145240",
      "elapsedTime": "2645497",
      "asyncId": 549,
      "triggerAsyncId": 547,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 104
    },
    "105": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030789666101",
      "endTime": "7030789769594",
      "elapsedTime": "103493",
      "asyncId": 550,
      "triggerAsyncId": 545,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 105
    },
    "106": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030790207490",
      "endTime": "7030792309398",
      "elapsedTime": "2101908",
      "asyncId": 552,
      "triggerAsyncId": 551,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 106
    },
    "107": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030790551352",
      "endTime": "7030792410912",
      "elapsedTime": "1859560",
      "asyncId": 555,
      "triggerAsyncId": 553,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 107
    },
    "108": {
      "source": "test.js:145:11:145:11",
      "startTime": "7030801214832",
      "endTime": "7030807545886",
      "elapsedTime": "6331054",
      "asyncId": 601,
      "triggerAsyncId": 599,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 11,
      "endLine": 145,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        605
      ],
      "uniqueid": 108
    },
    "109": {
      "source": "test.js:145:11:145:11",
      "startTime": "7030801925688",
      "endTime": "7030803722912",
      "elapsedTime": "1797224",
      "asyncId": 604,
      "triggerAsyncId": 602,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 11,
      "endLine": 145,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        610
      ],
      "uniqueid": 109
    },
    "110": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030802177127",
      "endTime": "7030809385356",
      "elapsedTime": "7208229",
      "asyncId": 605,
      "triggerAsyncId": 601,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        632,
        633,
        634,
        635
      ],
      "uniqueid": 110
    },
    "111": {
      "source": "test.js:145:5:145:5",
      "startTime": "7030803633370",
      "endTime": "7030804485290",
      "elapsedTime": "851920",
      "asyncId": 612,
      "triggerAsyncId": 610,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 5,
      "endLine": 145,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        615
      ],
      "uniqueid": 111
    },
    "112": {
      "source": "test.js:145:5:145:5",
      "startTime": "7030804402367",
      "endTime": "7030805299678",
      "elapsedTime": "897311",
      "asyncId": 617,
      "triggerAsyncId": 615,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 5,
      "endLine": 145,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        620
      ],
      "uniqueid": 112
    },
    "113": {
      "source": "test.js:145:5:145:5",
      "startTime": "7030805215329",
      "endTime": "7030805791277",
      "elapsedTime": "575948",
      "asyncId": 622,
      "triggerAsyncId": 620,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 5,
      "endLine": 145,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        623
      ],
      "uniqueid": 113
    },
    "114": {
      "source": "test.js:145:5:145:5",
      "startTime": "7030805711009",
      "endTime": "7030806528256",
      "elapsedTime": "817247",
      "asyncId": 625,
      "triggerAsyncId": 623,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 5,
      "endLine": 145,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        626
      ],
      "uniqueid": 114
    },
    "115": {
      "source": "test.js:145:5:145:5",
      "startTime": "7030806346033",
      "endTime": "7030807238908",
      "elapsedTime": "892875",
      "asyncId": 628,
      "triggerAsyncId": 626,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 5,
      "endLine": 145,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        629
      ],
      "uniqueid": 115
    },
    "116": {
      "source": "test.js:145:5:145:5",
      "startTime": "7030807058028",
      "endTime": "7030807630270",
      "elapsedTime": "572242",
      "asyncId": 631,
      "triggerAsyncId": 629,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =",
      "startLine": 145,
      "startCol": 5,
      "endLine": 145,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 116
    },
    "117": {
      "source": "test.js:146:23:146:23",
      "startTime": "7030807785220",
      "endTime": "7030826712587",
      "elapsedTime": "18927367",
      "asyncId": 632,
      "triggerAsyncId": 605,
      "io": "",
      "userCode": false,
      "line": "\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(dirs[index], currPath)",
      "startLine": 146,
      "startCol": 23,
      "endLine": 146,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 117
    },
    "118": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030807995959",
      "endTime": "7030826556363",
      "elapsedTime": "18560404",
      "asyncId": 633,
      "triggerAsyncId": 605,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 118
    },
    "119": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030808297903",
      "endTime": "7030810502400",
      "elapsedTime": "2204497",
      "asyncId": 634,
      "triggerAsyncId": 605,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        642
      ],
      "uniqueid": 119
    },
    "120": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030808710048",
      "endTime": "7030810581645",
      "elapsedTime": "1871597",
      "asyncId": 637,
      "triggerAsyncId": 635,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 120
    },
    "121": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030810229392",
      "endTime": "7030814925961",
      "elapsedTime": "4696569",
      "asyncId": 642,
      "triggerAsyncId": 634,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        643,
        644,
        645,
        646,
        647,
        648,
        649,
        650
      ],
      "uniqueid": 121
    },
    "122": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030810820430",
      "endTime": "7030810980313",
      "elapsedTime": "159883",
      "asyncId": 643,
      "triggerAsyncId": 642,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        651
      ],
      "uniqueid": 122
    },
    "123": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030811186228",
      "endTime": "7030811319230",
      "elapsedTime": "133002",
      "asyncId": 644,
      "triggerAsyncId": 642,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        652
      ],
      "uniqueid": 123
    },
    "124": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030811464361",
      "endTime": "7030811633294",
      "elapsedTime": "168933",
      "asyncId": 645,
      "triggerAsyncId": 642,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        653
      ],
      "uniqueid": 124
    },
    "125": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030811776759",
      "endTime": "7030811978701",
      "elapsedTime": "201942",
      "asyncId": 646,
      "triggerAsyncId": 642,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        654
      ],
      "uniqueid": 125
    },
    "126": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030812137236",
      "endTime": "7030812333829",
      "elapsedTime": "196593",
      "asyncId": 647,
      "triggerAsyncId": 642,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        655
      ],
      "uniqueid": 126
    },
    "127": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030812577537",
      "endTime": "7030812709966",
      "elapsedTime": "132429",
      "asyncId": 648,
      "triggerAsyncId": 642,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        656
      ],
      "uniqueid": 127
    },
    "128": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030812853401",
      "endTime": "7030813066503",
      "elapsedTime": "213102",
      "asyncId": 649,
      "triggerAsyncId": 642,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        657
      ],
      "uniqueid": 128
    },
    "129": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030813225930",
      "endTime": "7030815483226",
      "elapsedTime": "2257296",
      "asyncId": 650,
      "triggerAsyncId": 642,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 129
    },
    "130": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030815701911",
      "endTime": "7030815888907",
      "elapsedTime": "186996",
      "asyncId": 659,
      "triggerAsyncId": 658,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 130
    },
    "131": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030816506109",
      "endTime": "7030816654847",
      "elapsedTime": "148738",
      "asyncId": 661,
      "triggerAsyncId": 660,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 131
    },
    "132": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030817221285",
      "endTime": "7030817403358",
      "elapsedTime": "182073",
      "asyncId": 663,
      "triggerAsyncId": 662,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 132
    },
    "133": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030817919170",
      "endTime": "7030818100610",
      "elapsedTime": "181440",
      "asyncId": 665,
      "triggerAsyncId": 664,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 133
    },
    "134": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030818708348",
      "endTime": "7030824069718",
      "elapsedTime": "5361370",
      "asyncId": 667,
      "triggerAsyncId": 666,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 134
    },
    "135": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030819048978",
      "endTime": "7030824146145",
      "elapsedTime": "5097167",
      "asyncId": 670,
      "triggerAsyncId": 668,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 135
    },
    "136": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030819258354",
      "endTime": "7030819396797",
      "elapsedTime": "138443",
      "asyncId": 672,
      "triggerAsyncId": 666,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 136
    },
    "137": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030819909226",
      "endTime": "7030824320598",
      "elapsedTime": "4411372",
      "asyncId": 674,
      "triggerAsyncId": 673,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 137
    },
    "138": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030820235723",
      "endTime": "7030824394955",
      "elapsedTime": "4159232",
      "asyncId": 677,
      "triggerAsyncId": 675,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 138
    },
    "139": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030820782760",
      "endTime": "7030820936828",
      "elapsedTime": "154068",
      "asyncId": 678,
      "triggerAsyncId": 673,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 139
    },
    "140": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030821464238",
      "endTime": "7030824664440",
      "elapsedTime": "3200202",
      "asyncId": 680,
      "triggerAsyncId": 679,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 140
    },
    "141": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030821833664",
      "endTime": "7030824762725",
      "elapsedTime": "2929061",
      "asyncId": 683,
      "triggerAsyncId": 681,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 141
    },
    "142": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030822023125",
      "endTime": "7030822125228",
      "elapsedTime": "102103",
      "asyncId": 684,
      "triggerAsyncId": 679,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 142
    },
    "143": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030822733068",
      "endTime": "7030824977780",
      "elapsedTime": "2244712",
      "asyncId": 686,
      "triggerAsyncId": 685,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 143
    },
    "144": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030823152027",
      "endTime": "7030825149786",
      "elapsedTime": "1997759",
      "asyncId": 689,
      "triggerAsyncId": 687,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 144
    },
    "145": {
      "source": "test.js:154:11:154:11",
      "startTime": "7030833381178",
      "endTime": "7030838405531",
      "elapsedTime": "5024353",
      "asyncId": 735,
      "triggerAsyncId": 733,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 11,
      "endLine": 154,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        739
      ],
      "uniqueid": 145
    },
    "146": {
      "source": "test.js:154:11:154:11",
      "startTime": "7030833884506",
      "endTime": "7030835109846",
      "elapsedTime": "1225340",
      "asyncId": 738,
      "triggerAsyncId": 736,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 11,
      "endLine": 154,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        744
      ],
      "uniqueid": 146
    },
    "147": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030834096003",
      "endTime": "7030840108720",
      "elapsedTime": "6012717",
      "asyncId": 739,
      "triggerAsyncId": 735,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        766,
        767,
        768,
        769
      ],
      "uniqueid": 147
    },
    "148": {
      "source": "test.js:154:5:154:5",
      "startTime": "7030835028152",
      "endTime": "7030835721777",
      "elapsedTime": "693625",
      "asyncId": 746,
      "triggerAsyncId": 744,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 5,
      "endLine": 154,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        749
      ],
      "uniqueid": 148
    },
    "149": {
      "source": "test.js:154:5:154:5",
      "startTime": "7030835643489",
      "endTime": "7030836534921",
      "elapsedTime": "891432",
      "asyncId": 751,
      "triggerAsyncId": 749,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 5,
      "endLine": 154,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        754
      ],
      "uniqueid": 149
    },
    "150": {
      "source": "test.js:154:5:154:5",
      "startTime": "7030836329735",
      "endTime": "7030837189429",
      "elapsedTime": "859694",
      "asyncId": 756,
      "triggerAsyncId": 754,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 5,
      "endLine": 154,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        757
      ],
      "uniqueid": 150
    },
    "151": {
      "source": "test.js:154:5:154:5",
      "startTime": "7030837026903",
      "endTime": "7030837716250",
      "elapsedTime": "689347",
      "asyncId": 759,
      "triggerAsyncId": 757,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 5,
      "endLine": 154,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        760
      ],
      "uniqueid": 151
    },
    "152": {
      "source": "test.js:154:5:154:5",
      "startTime": "7030837633797",
      "endTime": "7030838240205",
      "elapsedTime": "606408",
      "asyncId": 762,
      "triggerAsyncId": 760,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 5,
      "endLine": 154,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        763
      ],
      "uniqueid": 152
    },
    "153": {
      "source": "test.js:154:5:154:5",
      "startTime": "7030838163535",
      "endTime": "7030838479826",
      "elapsedTime": "316291",
      "asyncId": 765,
      "triggerAsyncId": 763,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length)",
      "startLine": 154,
      "startCol": 5,
      "endLine": 154,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 153
    },
    "154": {
      "source": "test.js:155:23:155:23",
      "startTime": "7030838606628",
      "endTime": "7030856073256",
      "elapsedTime": "17466628",
      "asyncId": 766,
      "triggerAsyncId": 739,
      "io": "",
      "userCode": false,
      "line": "\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length);\n    res.forEach((entry, index) =",
      "startLine": 155,
      "startCol": 23,
      "endLine": 155,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 154
    },
    "155": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030838751219",
      "endTime": "7030855939574",
      "elapsedTime": "17188355",
      "asyncId": 767,
      "triggerAsyncId": 739,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 155
    },
    "156": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030838997565",
      "endTime": "7030841001005",
      "elapsedTime": "2003440",
      "asyncId": 768,
      "triggerAsyncId": 739,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        776
      ],
      "uniqueid": 156
    },
    "157": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030839429121",
      "endTime": "7030841088204",
      "elapsedTime": "1659083",
      "asyncId": 771,
      "triggerAsyncId": 769,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 157
    },
    "158": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030840677886",
      "endTime": "7030845177099",
      "elapsedTime": "4499213",
      "asyncId": 776,
      "triggerAsyncId": 768,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        777,
        778,
        779,
        780,
        781,
        782,
        783,
        784
      ],
      "uniqueid": 158
    },
    "159": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030841234379",
      "endTime": "7030841424571",
      "elapsedTime": "190192",
      "asyncId": 777,
      "triggerAsyncId": 776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        785
      ],
      "uniqueid": 159
    },
    "160": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030841557616",
      "endTime": "7030841737197",
      "elapsedTime": "179581",
      "asyncId": 778,
      "triggerAsyncId": 776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        786
      ],
      "uniqueid": 160
    },
    "161": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030841957380",
      "endTime": "7030842097967",
      "elapsedTime": "140587",
      "asyncId": 779,
      "triggerAsyncId": 776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        787
      ],
      "uniqueid": 161
    },
    "162": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030842254163",
      "endTime": "7030842456407",
      "elapsedTime": "202244",
      "asyncId": 780,
      "triggerAsyncId": 776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        788
      ],
      "uniqueid": 162
    },
    "163": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030842636293",
      "endTime": "7030842823825",
      "elapsedTime": "187532",
      "asyncId": 781,
      "triggerAsyncId": 776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        789
      ],
      "uniqueid": 163
    },
    "164": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030842985401",
      "endTime": "7030843161936",
      "elapsedTime": "176535",
      "asyncId": 782,
      "triggerAsyncId": 776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        790
      ],
      "uniqueid": 164
    },
    "165": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030843377259",
      "endTime": "7030843508761",
      "elapsedTime": "131502",
      "asyncId": 783,
      "triggerAsyncId": 776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        791
      ],
      "uniqueid": 165
    },
    "166": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030843645885",
      "endTime": "7030845879521",
      "elapsedTime": "2233636",
      "asyncId": 784,
      "triggerAsyncId": 776,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 166
    },
    "167": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030846110290",
      "endTime": "7030846306215",
      "elapsedTime": "195925",
      "asyncId": 793,
      "triggerAsyncId": 792,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 167
    },
    "168": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030846956817",
      "endTime": "7030847153428",
      "elapsedTime": "196611",
      "asyncId": 796,
      "triggerAsyncId": 794,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 168
    },
    "169": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030847783973",
      "endTime": "7030847870310",
      "elapsedTime": "86337",
      "asyncId": 798,
      "triggerAsyncId": 797,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 169
    },
    "170": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030848415666",
      "endTime": "7030848500143",
      "elapsedTime": "84477",
      "asyncId": 800,
      "triggerAsyncId": 799,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 170
    },
    "171": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030848987870",
      "endTime": "7030853446358",
      "elapsedTime": "4458488",
      "asyncId": 802,
      "triggerAsyncId": 801,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 171
    },
    "172": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030849322166",
      "endTime": "7030853517019",
      "elapsedTime": "4194853",
      "asyncId": 805,
      "triggerAsyncId": 803,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 172
    },
    "173": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030849485312",
      "endTime": "7030849573195",
      "elapsedTime": "87883",
      "asyncId": 806,
      "triggerAsyncId": 801,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 173
    },
    "174": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030850056460",
      "endTime": "7030853675726",
      "elapsedTime": "3619266",
      "asyncId": 808,
      "triggerAsyncId": 807,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 174
    },
    "175": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030850333601",
      "endTime": "7030853744800",
      "elapsedTime": "3411199",
      "asyncId": 811,
      "triggerAsyncId": 809,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 175
    },
    "176": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030850518349",
      "endTime": "7030850599852",
      "elapsedTime": "81503",
      "asyncId": 812,
      "triggerAsyncId": 807,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 176
    },
    "177": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030851073326",
      "endTime": "7030853991383",
      "elapsedTime": "2918057",
      "asyncId": 814,
      "triggerAsyncId": 813,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 177
    },
    "178": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030851429445",
      "endTime": "7030854092470",
      "elapsedTime": "2663025",
      "asyncId": 817,
      "triggerAsyncId": 815,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 178
    },
    "179": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030851567087",
      "endTime": "7030851718926",
      "elapsedTime": "151839",
      "asyncId": 818,
      "triggerAsyncId": 813,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 179
    },
    "180": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030852204702",
      "endTime": "7030854334550",
      "elapsedTime": "2129848",
      "asyncId": 820,
      "triggerAsyncId": 819,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 180
    },
    "181": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030852485770",
      "endTime": "7030854486193",
      "elapsedTime": "2000423",
      "asyncId": 823,
      "triggerAsyncId": 821,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 181
    },
    "182": {
      "source": "test.js:164:11:164:11",
      "startTime": "7030863428577",
      "endTime": "7030869679372",
      "elapsedTime": "6250795",
      "asyncId": 869,
      "triggerAsyncId": 867,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 11,
      "endLine": 164,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        873
      ],
      "uniqueid": 182
    },
    "183": {
      "source": "test.js:164:11:164:11",
      "startTime": "7030864045695",
      "endTime": "7030865429261",
      "elapsedTime": "1383566",
      "asyncId": 872,
      "triggerAsyncId": 870,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 11,
      "endLine": 164,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        878
      ],
      "uniqueid": 183
    },
    "184": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030864279219",
      "endTime": "7030871534430",
      "elapsedTime": "7255211",
      "asyncId": 873,
      "triggerAsyncId": 869,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        900,
        901,
        902,
        903
      ],
      "uniqueid": 184
    },
    "185": {
      "source": "test.js:164:5:164:5",
      "startTime": "7030865260523",
      "endTime": "7030866203385",
      "elapsedTime": "942862",
      "asyncId": 880,
      "triggerAsyncId": 878,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 5,
      "endLine": 164,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        883
      ],
      "uniqueid": 185
    },
    "186": {
      "source": "test.js:164:5:164:5",
      "startTime": "7030866124948",
      "endTime": "7030866897552",
      "elapsedTime": "772604",
      "asyncId": 885,
      "triggerAsyncId": 883,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 5,
      "endLine": 164,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        888
      ],
      "uniqueid": 186
    },
    "187": {
      "source": "test.js:164:5:164:5",
      "startTime": "7030866812021",
      "endTime": "7030867990682",
      "elapsedTime": "1178661",
      "asyncId": 890,
      "triggerAsyncId": 888,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 5,
      "endLine": 164,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        891
      ],
      "uniqueid": 187
    },
    "188": {
      "source": "test.js:164:5:164:5",
      "startTime": "7030867497817",
      "endTime": "7030868715711",
      "elapsedTime": "1217894",
      "asyncId": 893,
      "triggerAsyncId": 891,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 5,
      "endLine": 164,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        894
      ],
      "uniqueid": 188
    },
    "189": {
      "source": "test.js:164:5:164:5",
      "startTime": "7030868590334",
      "endTime": "7030869407782",
      "elapsedTime": "817448",
      "asyncId": 896,
      "triggerAsyncId": 894,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 5,
      "endLine": 164,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        897
      ],
      "uniqueid": 189
    },
    "190": {
      "source": "test.js:164:5:164:5",
      "startTime": "7030869325254",
      "endTime": "7030869823042",
      "elapsedTime": "497788",
      "asyncId": 899,
      "triggerAsyncId": 897,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length)",
      "startLine": 164,
      "startCol": 5,
      "endLine": 164,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 190
    },
    "191": {
      "source": "test.js:165:23:165:23",
      "startTime": "7030869979645",
      "endTime": "7030890898475",
      "elapsedTime": "20918830",
      "asyncId": 900,
      "triggerAsyncId": 873,
      "io": "",
      "userCode": false,
      "line": "\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length);\n    res.forEach((entry, index) =",
      "startLine": 165,
      "startCol": 23,
      "endLine": 165,
      "endCol": 23,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 191
    },
    "192": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030870120391",
      "endTime": "7030890799714",
      "elapsedTime": "20679323",
      "asyncId": 901,
      "triggerAsyncId": 873,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 192
    },
    "193": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030870393344",
      "endTime": "7030872757356",
      "elapsedTime": "2364012",
      "asyncId": 902,
      "triggerAsyncId": 873,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        910
      ],
      "uniqueid": 193
    },
    "194": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030870906844",
      "endTime": "7030872860606",
      "elapsedTime": "1953762",
      "asyncId": 905,
      "triggerAsyncId": 903,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 194
    },
    "195": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030872333104",
      "endTime": "7030878669157",
      "elapsedTime": "6336053",
      "asyncId": 910,
      "triggerAsyncId": 902,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        911,
        912,
        913,
        914,
        915,
        916,
        917,
        918
      ],
      "uniqueid": 195
    },
    "196": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030873036890",
      "endTime": "7030873155160",
      "elapsedTime": "118270",
      "asyncId": 911,
      "triggerAsyncId": 910,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        919
      ],
      "uniqueid": 196
    },
    "197": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030873338753",
      "endTime": "7030873472874",
      "elapsedTime": "134121",
      "asyncId": 912,
      "triggerAsyncId": 910,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        920
      ],
      "uniqueid": 197
    },
    "198": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030873689543",
      "endTime": "7030873799219",
      "elapsedTime": "109676",
      "asyncId": 913,
      "triggerAsyncId": 910,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        921
      ],
      "uniqueid": 198
    },
    "199": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030874011662",
      "endTime": "7030874339814",
      "elapsedTime": "328152",
      "asyncId": 914,
      "triggerAsyncId": 910,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        922
      ],
      "uniqueid": 199
    },
    "200": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030875056102",
      "endTime": "7030875344767",
      "elapsedTime": "288665",
      "asyncId": 915,
      "triggerAsyncId": 910,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        923
      ],
      "uniqueid": 200
    },
    "201": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030875531900",
      "endTime": "7030875757121",
      "elapsedTime": "225221",
      "asyncId": 916,
      "triggerAsyncId": 910,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        924
      ],
      "uniqueid": 201
    },
    "202": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030876229663",
      "endTime": "7030876369710",
      "elapsedTime": "140047",
      "asyncId": 917,
      "triggerAsyncId": 910,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        925
      ],
      "uniqueid": 202
    },
    "203": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030876524316",
      "endTime": "7030879716967",
      "elapsedTime": "3192651",
      "asyncId": 918,
      "triggerAsyncId": 910,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 203
    },
    "204": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030880071475",
      "endTime": "7030880276120",
      "elapsedTime": "204645",
      "asyncId": 927,
      "triggerAsyncId": 926,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 204
    },
    "205": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030880987304",
      "endTime": "7030881076142",
      "elapsedTime": "88838",
      "asyncId": 930,
      "triggerAsyncId": 928,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 205
    },
    "206": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030881585642",
      "endTime": "7030881798124",
      "elapsedTime": "212482",
      "asyncId": 932,
      "triggerAsyncId": 931,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 206
    },
    "207": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030882478344",
      "endTime": "7030882683580",
      "elapsedTime": "205236",
      "asyncId": 934,
      "triggerAsyncId": 933,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 207
    },
    "208": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030883277695",
      "endTime": "7030888276987",
      "elapsedTime": "4999292",
      "asyncId": 936,
      "triggerAsyncId": 935,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 208
    },
    "209": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030883615766",
      "endTime": "7030888387282",
      "elapsedTime": "4771516",
      "asyncId": 939,
      "triggerAsyncId": 937,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 209
    },
    "210": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030883768986",
      "endTime": "7030883850601",
      "elapsedTime": "81615",
      "asyncId": 940,
      "triggerAsyncId": 935,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 210
    },
    "211": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030884311749",
      "endTime": "7030888689515",
      "elapsedTime": "4377766",
      "asyncId": 942,
      "triggerAsyncId": 941,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 211
    },
    "212": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030884750392",
      "endTime": "7030888798037",
      "elapsedTime": "4047645",
      "asyncId": 945,
      "triggerAsyncId": 943,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 212
    },
    "213": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030884916511",
      "endTime": "7030885003103",
      "elapsedTime": "86592",
      "asyncId": 946,
      "triggerAsyncId": 941,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 213
    },
    "214": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030885650329",
      "endTime": "7030889097109",
      "elapsedTime": "3446780",
      "asyncId": 948,
      "triggerAsyncId": 947,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 214
    },
    "215": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030886023427",
      "endTime": "7030889172168",
      "elapsedTime": "3148741",
      "asyncId": 951,
      "triggerAsyncId": 949,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 215
    },
    "216": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030886245297",
      "endTime": "7030886371993",
      "elapsedTime": "126696",
      "asyncId": 952,
      "triggerAsyncId": 947,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 216
    },
    "217": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030886929886",
      "endTime": "7030889330641",
      "elapsedTime": "2400755",
      "asyncId": 954,
      "triggerAsyncId": 953,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 217
    },
    "218": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030887315701",
      "endTime": "7030889400116",
      "elapsedTime": "2084415",
      "asyncId": 957,
      "triggerAsyncId": 955,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 218
    },
    "219": {
      "source": "test.js:175:13:175:13",
      "startTime": "7030897328962",
      "endTime": "7030898856060",
      "elapsedTime": "1527098",
      "asyncId": 1003,
      "triggerAsyncId": 1001,
      "io": "",
      "userCode": false,
      "line": "\n  it('invalid', async () => {\n    try {\n      await read({type: 'bogus'});\n    } catch (error) {\n      error.message.should.match(/Invalid type/);\n    ",
      "startLine": 175,
      "startCol": 13,
      "endLine": 175,
      "endCol": 13,
      "file": "test.js",
      "triggers": [
        1005
      ],
      "uniqueid": 219
    },
    "220": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030897578066",
      "endTime": "7030897734999",
      "elapsedTime": "156933",
      "asyncId": 1004,
      "triggerAsyncId": 1001,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 220
    },
    "221": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030898217692",
      "endTime": "7030899391574",
      "elapsedTime": "1173882",
      "asyncId": 1005,
      "triggerAsyncId": 1003,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 221
    },
    "222": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030904229600",
      "endTime": "7030914971854",
      "elapsedTime": "10742254",
      "asyncId": 1033,
      "triggerAsyncId": 1032,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1040
      ],
      "uniqueid": 222
    },
    "223": {
      "source": "test.js:190:11:190:11",
      "startTime": "7030904455073",
      "endTime": "7030908148918",
      "elapsedTime": "3693845",
      "asyncId": 1034,
      "triggerAsyncId": 1032,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1038
      ],
      "uniqueid": 223
    },
    "224": {
      "source": "test.js:190:11:190:11",
      "startTime": "7030904889155",
      "endTime": "7030905915891",
      "elapsedTime": "1026736",
      "asyncId": 1037,
      "triggerAsyncId": 1035,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1043
      ],
      "uniqueid": 224
    },
    "225": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030905093278",
      "endTime": "7030909033422",
      "elapsedTime": "3940144",
      "asyncId": 1038,
      "triggerAsyncId": 1034,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1059,
        1060
      ],
      "uniqueid": 225
    },
    "226": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7030905274212",
      "endTime": "7030917652908",
      "elapsedTime": "12378696",
      "asyncId": 1040,
      "triggerAsyncId": 1033,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1095,
        1096,
        1097,
        1098,
        1099
      ],
      "uniqueid": 226
    },
    "227": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030905832790",
      "endTime": "7030906762375",
      "elapsedTime": "929585",
      "asyncId": 1045,
      "triggerAsyncId": 1043,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1048
      ],
      "uniqueid": 227
    },
    "228": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030906590921",
      "endTime": "7030907402833",
      "elapsedTime": "811912",
      "asyncId": 1050,
      "triggerAsyncId": 1048,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1053
      ],
      "uniqueid": 228
    },
    "229": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030907324971",
      "endTime": "7030907944109",
      "elapsedTime": "619138",
      "asyncId": 1055,
      "triggerAsyncId": 1053,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1056
      ],
      "uniqueid": 229
    },
    "230": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030907857996",
      "endTime": "7030908249874",
      "elapsedTime": "391878",
      "asyncId": 1058,
      "triggerAsyncId": 1056,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 230
    },
    "231": {
      "source": "test.js:191:11:191:11",
      "startTime": "7030908400053",
      "endTime": "7030912770496",
      "elapsedTime": "4370443",
      "asyncId": 1059,
      "triggerAsyncId": 1038,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 231
    },
    "232": {
      "source": "test.js:191:11:191:11",
      "startTime": "7030908713588",
      "endTime": "7030909682814",
      "elapsedTime": "969226",
      "asyncId": 1062,
      "triggerAsyncId": 1060,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1066
      ],
      "uniqueid": 232
    },
    "233": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030909590403",
      "endTime": "7030910703871",
      "elapsedTime": "1113468",
      "asyncId": 1068,
      "triggerAsyncId": 1066,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1071
      ],
      "uniqueid": 233
    },
    "234": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030910519382",
      "endTime": "7030911308945",
      "elapsedTime": "789563",
      "asyncId": 1073,
      "triggerAsyncId": 1071,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1074
      ],
      "uniqueid": 234
    },
    "235": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030911224151",
      "endTime": "7030911878826",
      "elapsedTime": "654675",
      "asyncId": 1076,
      "triggerAsyncId": 1074,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1077
      ],
      "uniqueid": 235
    },
    "236": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030911760218",
      "endTime": "7030912566001",
      "elapsedTime": "805783",
      "asyncId": 1079,
      "triggerAsyncId": 1077,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1080
      ],
      "uniqueid": 236
    },
    "237": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030912368876",
      "endTime": "7030912852885",
      "elapsedTime": "484009",
      "asyncId": 1082,
      "triggerAsyncId": 1080,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 237
    },
    "238": {
      "source": "test.js:192:11:192:11",
      "startTime": "7030912993969",
      "endTime": "7030914742037",
      "elapsedTime": "1748068",
      "asyncId": 1083,
      "triggerAsyncId": 1063,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 238
    },
    "239": {
      "source": "test.js:192:11:192:11",
      "startTime": "7030913349336",
      "endTime": "7030914391101",
      "elapsedTime": "1041765",
      "asyncId": 1086,
      "triggerAsyncId": 1084,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1090
      ],
      "uniqueid": 239
    },
    "240": {
      "source": "test.js:192:5:192:5",
      "startTime": "7030914291444",
      "endTime": "7030914891572",
      "elapsedTime": "600128",
      "asyncId": 1092,
      "triggerAsyncId": 1090,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 5,
      "endLine": 192,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 240
    },
    "241": {
      "source": "test.js:196:23:196:23",
      "startTime": "7030915681491",
      "endTime": "7030927318976",
      "elapsedTime": "11637485",
      "asyncId": 1096,
      "triggerAsyncId": 1040,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('0', async () => {\n    const res = await read({depth: 0});\n    res.should.have.lengthOf(depth0.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(depth0[index], currPath)",
      "startLine": 196,
      "startCol": 23,
      "endLine": 196,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        1103
      ],
      "uniqueid": 241
    },
    "242": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030915919378",
      "endTime": "7030927176854",
      "elapsedTime": "11257476",
      "asyncId": 1097,
      "triggerAsyncId": 1040,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 242
    },
    "243": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030916253193",
      "endTime": "7030918777896",
      "elapsedTime": "2524703",
      "asyncId": 1098,
      "triggerAsyncId": 1040,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        1108
      ],
      "uniqueid": 243
    },
    "244": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030916803815",
      "endTime": "7030918891390",
      "elapsedTime": "2087575",
      "asyncId": 1101,
      "triggerAsyncId": 1099,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 244
    },
    "245": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030917235647",
      "endTime": "7030928134226",
      "elapsedTime": "10898579",
      "asyncId": 1103,
      "triggerAsyncId": 1096,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 245
    },
    "246": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030918403121",
      "endTime": "7030921993324",
      "elapsedTime": "3590203",
      "asyncId": 1108,
      "triggerAsyncId": 1098,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1109,
        1110,
        1111,
        1112,
        1113,
        1114
      ],
      "uniqueid": 246
    },
    "247": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030919071502",
      "endTime": "7030919191371",
      "elapsedTime": "119869",
      "asyncId": 1109,
      "triggerAsyncId": 1108,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1115
      ],
      "uniqueid": 247
    },
    "248": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030919405896",
      "endTime": "7030919516585",
      "elapsedTime": "110689",
      "asyncId": 1110,
      "triggerAsyncId": 1108,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1116
      ],
      "uniqueid": 248
    },
    "249": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030919672659",
      "endTime": "7030919776605",
      "elapsedTime": "103946",
      "asyncId": 1111,
      "triggerAsyncId": 1108,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1117
      ],
      "uniqueid": 249
    },
    "250": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030919909602",
      "endTime": "7030920114139",
      "elapsedTime": "204537",
      "asyncId": 1112,
      "triggerAsyncId": 1108,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1118
      ],
      "uniqueid": 250
    },
    "251": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030920278276",
      "endTime": "7030920483876",
      "elapsedTime": "205600",
      "asyncId": 1113,
      "triggerAsyncId": 1108,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1119
      ],
      "uniqueid": 251
    },
    "252": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030920702961",
      "endTime": "7030922623200",
      "elapsedTime": "1920239",
      "asyncId": 1114,
      "triggerAsyncId": 1108,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 252
    },
    "253": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030922859594",
      "endTime": "7030923062352",
      "elapsedTime": "202758",
      "asyncId": 1121,
      "triggerAsyncId": 1120,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 253
    },
    "254": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030923622980",
      "endTime": "7030923814579",
      "elapsedTime": "191599",
      "asyncId": 1124,
      "triggerAsyncId": 1122,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 254
    },
    "255": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030924239072",
      "endTime": "7030924366348",
      "elapsedTime": "127276",
      "asyncId": 1126,
      "triggerAsyncId": 1125,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 255
    },
    "256": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030924773130",
      "endTime": "7030924981246",
      "elapsedTime": "208116",
      "asyncId": 1128,
      "triggerAsyncId": 1127,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 256
    },
    "257": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030925603133",
      "endTime": "7030925805023",
      "elapsedTime": "201890",
      "asyncId": 1130,
      "triggerAsyncId": 1129,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 257
    },
    "258": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030939157637",
      "endTime": "7030951200874",
      "elapsedTime": "12043237",
      "asyncId": 1191,
      "triggerAsyncId": 1190,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1198
      ],
      "uniqueid": 258
    },
    "259": {
      "source": "test.js:190:11:190:11",
      "startTime": "7030939382954",
      "endTime": "7030943670337",
      "elapsedTime": "4287383",
      "asyncId": 1192,
      "triggerAsyncId": 1190,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1196
      ],
      "uniqueid": 259
    },
    "260": {
      "source": "test.js:190:11:190:11",
      "startTime": "7030939867094",
      "endTime": "7030941004267",
      "elapsedTime": "1137173",
      "asyncId": 1195,
      "triggerAsyncId": 1193,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1201
      ],
      "uniqueid": 260
    },
    "261": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030940029800",
      "endTime": "7030944798195",
      "elapsedTime": "4768395",
      "asyncId": 1196,
      "triggerAsyncId": 1192,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1217,
        1218
      ],
      "uniqueid": 261
    },
    "262": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7030940246165",
      "endTime": "7030954065977",
      "elapsedTime": "13819812",
      "asyncId": 1198,
      "triggerAsyncId": 1191,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1253,
        1254,
        1255,
        1256,
        1257
      ],
      "uniqueid": 262
    },
    "263": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030940876463",
      "endTime": "7030941930455",
      "elapsedTime": "1053992",
      "asyncId": 1203,
      "triggerAsyncId": 1201,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1206
      ],
      "uniqueid": 263
    },
    "264": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030941750363",
      "endTime": "7030942700559",
      "elapsedTime": "950196",
      "asyncId": 1208,
      "triggerAsyncId": 1206,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1211
      ],
      "uniqueid": 264
    },
    "265": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030942615745",
      "endTime": "7030943304295",
      "elapsedTime": "688550",
      "asyncId": 1213,
      "triggerAsyncId": 1211,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1214
      ],
      "uniqueid": 265
    },
    "266": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030943213985",
      "endTime": "7030943860148",
      "elapsedTime": "646163",
      "asyncId": 1216,
      "triggerAsyncId": 1214,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 266
    },
    "267": {
      "source": "test.js:191:11:191:11",
      "startTime": "7030944091365",
      "endTime": "7030948775345",
      "elapsedTime": "4683980",
      "asyncId": 1217,
      "triggerAsyncId": 1196,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 267
    },
    "268": {
      "source": "test.js:191:11:191:11",
      "startTime": "7030944422790",
      "endTime": "7030945474767",
      "elapsedTime": "1051977",
      "asyncId": 1220,
      "triggerAsyncId": 1218,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1224
      ],
      "uniqueid": 268
    },
    "269": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030945395550",
      "endTime": "7030946417631",
      "elapsedTime": "1022081",
      "asyncId": 1226,
      "triggerAsyncId": 1224,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1229
      ],
      "uniqueid": 269
    },
    "270": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030946201694",
      "endTime": "7030947083411",
      "elapsedTime": "881717",
      "asyncId": 1231,
      "triggerAsyncId": 1229,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1232
      ],
      "uniqueid": 270
    },
    "271": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030946881107",
      "endTime": "7030947747870",
      "elapsedTime": "866763",
      "asyncId": 1234,
      "triggerAsyncId": 1232,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1235
      ],
      "uniqueid": 271
    },
    "272": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030947547881",
      "endTime": "7030948432011",
      "elapsedTime": "884130",
      "asyncId": 1237,
      "triggerAsyncId": 1235,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1238
      ],
      "uniqueid": 272
    },
    "273": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030948253302",
      "endTime": "7030948875157",
      "elapsedTime": "621855",
      "asyncId": 1240,
      "triggerAsyncId": 1238,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 273
    },
    "274": {
      "source": "test.js:192:11:192:11",
      "startTime": "7030949060759",
      "endTime": "7030950975638",
      "elapsedTime": "1914879",
      "asyncId": 1241,
      "triggerAsyncId": 1221,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 274
    },
    "275": {
      "source": "test.js:192:11:192:11",
      "startTime": "7030949386168",
      "endTime": "7030950601102",
      "elapsedTime": "1214934",
      "asyncId": 1244,
      "triggerAsyncId": 1242,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1248
      ],
      "uniqueid": 275
    },
    "276": {
      "source": "test.js:192:5:192:5",
      "startTime": "7030950515405",
      "endTime": "7030951093797",
      "elapsedTime": "578392",
      "asyncId": 1250,
      "triggerAsyncId": 1248,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 5,
      "endLine": 192,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 276
    },
    "277": {
      "source": "test.js:204:23:204:23",
      "startTime": "7030952076495",
      "endTime": "7030979989692",
      "elapsedTime": "27913197",
      "asyncId": 1254,
      "triggerAsyncId": 1198,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('1', async () => {\n    const res = await read({depth: 1});\n    const expect = [...depth0, ...depth1];\n    res.should.have.lengthOf(expect.length);\n    re",
      "startLine": 204,
      "startCol": 23,
      "endLine": 204,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        1261
      ],
      "uniqueid": 277
    },
    "278": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030952337851",
      "endTime": "7030979872151",
      "elapsedTime": "27534300",
      "asyncId": 1255,
      "triggerAsyncId": 1198,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 278
    },
    "279": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030952632853",
      "endTime": "7030955125766",
      "elapsedTime": "2492913",
      "asyncId": 1256,
      "triggerAsyncId": 1198,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        1266
      ],
      "uniqueid": 279
    },
    "280": {
      "source": "index.js:113:26:113:26",
      "startTime": "7030953291314",
      "endTime": "7030955232303",
      "elapsedTime": "1940989",
      "asyncId": 1259,
      "triggerAsyncId": 1257,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 280
    },
    "281": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030953672825",
      "endTime": "7030980757668",
      "elapsedTime": "27084843",
      "asyncId": 1261,
      "triggerAsyncId": 1254,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 281
    },
    "282": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7030954797508",
      "endTime": "7030960418150",
      "elapsedTime": "5620642",
      "asyncId": 1266,
      "triggerAsyncId": 1256,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1267,
        1268,
        1269,
        1270,
        1271,
        1272
      ],
      "uniqueid": 282
    },
    "283": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030955404834",
      "endTime": "7030955515957",
      "elapsedTime": "111123",
      "asyncId": 1267,
      "triggerAsyncId": 1266,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1273
      ],
      "uniqueid": 283
    },
    "284": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030955714228",
      "endTime": "7030955822752",
      "elapsedTime": "108524",
      "asyncId": 1268,
      "triggerAsyncId": 1266,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1274
      ],
      "uniqueid": 284
    },
    "285": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030956037531",
      "endTime": "7030956168336",
      "elapsedTime": "130805",
      "asyncId": 1269,
      "triggerAsyncId": 1266,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1275
      ],
      "uniqueid": 285
    },
    "286": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030956351280",
      "endTime": "7030956462037",
      "elapsedTime": "110757",
      "asyncId": 1270,
      "triggerAsyncId": 1266,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1276
      ],
      "uniqueid": 286
    },
    "287": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030956603141",
      "endTime": "7030956813861",
      "elapsedTime": "210720",
      "asyncId": 1271,
      "triggerAsyncId": 1266,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1277
      ],
      "uniqueid": 287
    },
    "288": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030956980856",
      "endTime": "7030961132065",
      "elapsedTime": "4151209",
      "asyncId": 1272,
      "triggerAsyncId": 1266,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 288
    },
    "289": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030961577354",
      "endTime": "7030961714820",
      "elapsedTime": "137466",
      "asyncId": 1279,
      "triggerAsyncId": 1278,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 289
    },
    "290": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030962287464",
      "endTime": "7030962497188",
      "elapsedTime": "209724",
      "asyncId": 1282,
      "triggerAsyncId": 1280,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 290
    },
    "291": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030963082210",
      "endTime": "7030963168237",
      "elapsedTime": "86027",
      "asyncId": 1284,
      "triggerAsyncId": 1283,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 291
    },
    "292": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030965040492",
      "endTime": "7030965250301",
      "elapsedTime": "209809",
      "asyncId": 1286,
      "triggerAsyncId": 1285,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 292
    },
    "293": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030965857883",
      "endTime": "7030968672329",
      "elapsedTime": "2814446",
      "asyncId": 1288,
      "triggerAsyncId": 1287,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 293
    },
    "294": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030966246653",
      "endTime": "7030968773350",
      "elapsedTime": "2526697",
      "asyncId": 1291,
      "triggerAsyncId": 1289,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 294
    },
    "295": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030966413253",
      "endTime": "7030966519957",
      "elapsedTime": "106704",
      "asyncId": 1292,
      "triggerAsyncId": 1287,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 295
    },
    "296": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030967153210",
      "endTime": "7030968981721",
      "elapsedTime": "1828511",
      "asyncId": 1294,
      "triggerAsyncId": 1293,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 296
    },
    "297": {
      "source": "index.js:135:40:135:40",
      "startTime": "7030967482633",
      "endTime": "7030969061448",
      "elapsedTime": "1578815",
      "asyncId": 1297,
      "triggerAsyncId": 1295,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 297
    },
    "298": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030969215026",
      "endTime": "7030969373789",
      "elapsedTime": "158763",
      "asyncId": 1300,
      "triggerAsyncId": 1298,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1304
      ],
      "uniqueid": 298
    },
    "299": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030969516255",
      "endTime": "7030969725839",
      "elapsedTime": "209584",
      "asyncId": 1301,
      "triggerAsyncId": 1298,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1305
      ],
      "uniqueid": 299
    },
    "300": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030969898628",
      "endTime": "7030970103282",
      "elapsedTime": "204654",
      "asyncId": 1302,
      "triggerAsyncId": 1298,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1306
      ],
      "uniqueid": 300
    },
    "301": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030970258946",
      "endTime": "7030971378830",
      "elapsedTime": "1119884",
      "asyncId": 1303,
      "triggerAsyncId": 1298,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 301
    },
    "302": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030971567577",
      "endTime": "7030971756887",
      "elapsedTime": "189310",
      "asyncId": 1308,
      "triggerAsyncId": 1307,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 302
    },
    "303": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030972320717",
      "endTime": "7030972541003",
      "elapsedTime": "220286",
      "asyncId": 1311,
      "triggerAsyncId": 1309,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 303
    },
    "304": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030973831184",
      "endTime": "7030973923611",
      "elapsedTime": "92427",
      "asyncId": 1313,
      "triggerAsyncId": 1312,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 304
    },
    "305": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030974801302",
      "endTime": "7030974972501",
      "elapsedTime": "171199",
      "asyncId": 1316,
      "triggerAsyncId": 1315,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1320
      ],
      "uniqueid": 305
    },
    "306": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030975155435",
      "endTime": "7030975363038",
      "elapsedTime": "207603",
      "asyncId": 1317,
      "triggerAsyncId": 1315,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1321
      ],
      "uniqueid": 306
    },
    "307": {
      "source": "index.js:127:67:127:67",
      "startTime": "7030975530412",
      "endTime": "7030975729905",
      "elapsedTime": "199493",
      "asyncId": 1318,
      "triggerAsyncId": 1315,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1322
      ],
      "uniqueid": 307
    },
    "308": {
      "source": "index.js:128:45:128:45",
      "startTime": "7030975971179",
      "endTime": "7030977135288",
      "elapsedTime": "1164109",
      "asyncId": 1319,
      "triggerAsyncId": 1315,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 308
    },
    "309": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030977391018",
      "endTime": "7030977572447",
      "elapsedTime": "181429",
      "asyncId": 1324,
      "triggerAsyncId": 1323,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 309
    },
    "310": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030978114200",
      "endTime": "7030978324630",
      "elapsedTime": "210430",
      "asyncId": 1326,
      "triggerAsyncId": 1325,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 310
    },
    "311": {
      "source": "index.js:132:42:132:42",
      "startTime": "7030978959692",
      "endTime": "7030979043366",
      "elapsedTime": "83674",
      "asyncId": 1328,
      "triggerAsyncId": 1327,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 311
    },
    "312": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030987327218",
      "endTime": "7030998970470",
      "elapsedTime": "11643252",
      "asyncId": 1389,
      "triggerAsyncId": 1388,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1396
      ],
      "uniqueid": 312
    },
    "313": {
      "source": "test.js:190:11:190:11",
      "startTime": "7030987550617",
      "endTime": "7030991107178",
      "elapsedTime": "3556561",
      "asyncId": 1390,
      "triggerAsyncId": 1388,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1394
      ],
      "uniqueid": 313
    },
    "314": {
      "source": "test.js:190:11:190:11",
      "startTime": "7030987969716",
      "endTime": "7030989122589",
      "elapsedTime": "1152873",
      "asyncId": 1393,
      "triggerAsyncId": 1391,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1399
      ],
      "uniqueid": 314
    },
    "315": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7030988195191",
      "endTime": "7030992218356",
      "elapsedTime": "4023165",
      "asyncId": 1394,
      "triggerAsyncId": 1390,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1415,
        1416
      ],
      "uniqueid": 315
    },
    "316": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7030988359053",
      "endTime": "7031001523094",
      "elapsedTime": "13164041",
      "asyncId": 1396,
      "triggerAsyncId": 1389,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1451,
        1452,
        1453,
        1454,
        1455
      ],
      "uniqueid": 316
    },
    "317": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030988968238",
      "endTime": "7030989743462",
      "elapsedTime": "775224",
      "asyncId": 1401,
      "triggerAsyncId": 1399,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1404
      ],
      "uniqueid": 317
    },
    "318": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030989662126",
      "endTime": "7030990395570",
      "elapsedTime": "733444",
      "asyncId": 1406,
      "triggerAsyncId": 1404,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1409
      ],
      "uniqueid": 318
    },
    "319": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030990317624",
      "endTime": "7030990902624",
      "elapsedTime": "585000",
      "asyncId": 1411,
      "triggerAsyncId": 1409,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1412
      ],
      "uniqueid": 319
    },
    "320": {
      "source": "test.js:190:5:190:5",
      "startTime": "7030990824364",
      "endTime": "7030991210287",
      "elapsedTime": "385923",
      "asyncId": 1414,
      "triggerAsyncId": 1412,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 320
    },
    "321": {
      "source": "test.js:191:11:191:11",
      "startTime": "7030991356836",
      "endTime": "7030995610139",
      "elapsedTime": "4253303",
      "asyncId": 1415,
      "triggerAsyncId": 1394,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 321
    },
    "322": {
      "source": "test.js:191:11:191:11",
      "startTime": "7030991686337",
      "endTime": "7030992978781",
      "elapsedTime": "1292444",
      "asyncId": 1418,
      "triggerAsyncId": 1416,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1422
      ],
      "uniqueid": 322
    },
    "323": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030992893269",
      "endTime": "7030993750561",
      "elapsedTime": "857292",
      "asyncId": 1424,
      "triggerAsyncId": 1422,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1427
      ],
      "uniqueid": 323
    },
    "324": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030993656971",
      "endTime": "7030994271851",
      "elapsedTime": "614880",
      "asyncId": 1429,
      "triggerAsyncId": 1427,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1430
      ],
      "uniqueid": 324
    },
    "325": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030994183196",
      "endTime": "7030994939297",
      "elapsedTime": "756101",
      "asyncId": 1432,
      "triggerAsyncId": 1430,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1433
      ],
      "uniqueid": 325
    },
    "326": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030994853905",
      "endTime": "7030995429003",
      "elapsedTime": "575098",
      "asyncId": 1435,
      "triggerAsyncId": 1433,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1436
      ],
      "uniqueid": 326
    },
    "327": {
      "source": "test.js:191:5:191:5",
      "startTime": "7030995346847",
      "endTime": "7030995709800",
      "elapsedTime": "362953",
      "asyncId": 1438,
      "triggerAsyncId": 1436,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 327
    },
    "328": {
      "source": "test.js:192:11:192:11",
      "startTime": "7030995852142",
      "endTime": "7030998814615",
      "elapsedTime": "2962473",
      "asyncId": 1439,
      "triggerAsyncId": 1419,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 328
    },
    "329": {
      "source": "test.js:192:11:192:11",
      "startTime": "7030996221883",
      "endTime": "7030998355219",
      "elapsedTime": "2133336",
      "asyncId": 1442,
      "triggerAsyncId": 1440,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1446
      ],
      "uniqueid": 329
    },
    "330": {
      "source": "test.js:192:5:192:5",
      "startTime": "7030997122803",
      "endTime": "7030998893427",
      "elapsedTime": "1770624",
      "asyncId": 1448,
      "triggerAsyncId": 1446,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 5,
      "endLine": 192,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 330
    },
    "331": {
      "source": "test.js:215:23:215:23",
      "startTime": "7030999712128",
      "endTime": "7031031783999",
      "elapsedTime": "32071871",
      "asyncId": 1452,
      "triggerAsyncId": 1396,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('2', async () => {\n    const res = await read({depth: 2});\n    const expect = [...depth0, ...depth1, ...depth2];\n    res.should.have.lengthOf(expect.length);\n    re",
      "startLine": 215,
      "startCol": 23,
      "endLine": 215,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        1459
      ],
      "uniqueid": 331
    },
    "332": {
      "source": "index.js:275:10:275:10",
      "startTime": "7030999964952",
      "endTime": "7031031665006",
      "elapsedTime": "31700054",
      "asyncId": 1453,
      "triggerAsyncId": 1396,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 332
    },
    "333": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031000265157",
      "endTime": "7031002535051",
      "elapsedTime": "2269894",
      "asyncId": 1454,
      "triggerAsyncId": 1396,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        1464
      ],
      "uniqueid": 333
    },
    "334": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031000777904",
      "endTime": "7031002636323",
      "elapsedTime": "1858419",
      "asyncId": 1457,
      "triggerAsyncId": 1455,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 334
    },
    "335": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031001137203",
      "endTime": "7031032461366",
      "elapsedTime": "31324163",
      "asyncId": 1459,
      "triggerAsyncId": 1452,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 335
    },
    "336": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031002193361",
      "endTime": "7031005677913",
      "elapsedTime": "3484552",
      "asyncId": 1464,
      "triggerAsyncId": 1454,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1465,
        1466,
        1467,
        1468,
        1469,
        1470
      ],
      "uniqueid": 336
    },
    "337": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031002868048",
      "endTime": "7031002982348",
      "elapsedTime": "114300",
      "asyncId": 1465,
      "triggerAsyncId": 1464,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1471
      ],
      "uniqueid": 337
    },
    "338": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031003171473",
      "endTime": "7031003313307",
      "elapsedTime": "141834",
      "asyncId": 1466,
      "triggerAsyncId": 1464,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1472
      ],
      "uniqueid": 338
    },
    "339": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031003469623",
      "endTime": "7031003575850",
      "elapsedTime": "106227",
      "asyncId": 1467,
      "triggerAsyncId": 1464,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1473
      ],
      "uniqueid": 339
    },
    "340": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031003773742",
      "endTime": "7031003896516",
      "elapsedTime": "122774",
      "asyncId": 1468,
      "triggerAsyncId": 1464,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1474
      ],
      "uniqueid": 340
    },
    "341": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031004109280",
      "endTime": "7031004218122",
      "elapsedTime": "108842",
      "asyncId": 1469,
      "triggerAsyncId": 1464,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1475
      ],
      "uniqueid": 341
    },
    "342": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031004416656",
      "endTime": "7031006082720",
      "elapsedTime": "1666064",
      "asyncId": 1470,
      "triggerAsyncId": 1464,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 342
    },
    "343": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031006283891",
      "endTime": "7031006490186",
      "elapsedTime": "206295",
      "asyncId": 1477,
      "triggerAsyncId": 1476,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 343
    },
    "344": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031007123315",
      "endTime": "7031007211519",
      "elapsedTime": "88204",
      "asyncId": 1480,
      "triggerAsyncId": 1478,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 344
    },
    "345": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031007732601",
      "endTime": "7031007810824",
      "elapsedTime": "78223",
      "asyncId": 1482,
      "triggerAsyncId": 1481,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 345
    },
    "346": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031008225777",
      "endTime": "7031008314445",
      "elapsedTime": "88668",
      "asyncId": 1484,
      "triggerAsyncId": 1483,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 346
    },
    "347": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031008684374",
      "endTime": "7031011254415",
      "elapsedTime": "2570041",
      "asyncId": 1486,
      "triggerAsyncId": 1485,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 347
    },
    "348": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031009037165",
      "endTime": "7031011337354",
      "elapsedTime": "2300189",
      "asyncId": 1489,
      "triggerAsyncId": 1487,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 348
    },
    "349": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031009190320",
      "endTime": "7031009272103",
      "elapsedTime": "81783",
      "asyncId": 1490,
      "triggerAsyncId": 1485,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 349
    },
    "350": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031009823988",
      "endTime": "7031011509504",
      "elapsedTime": "1685516",
      "asyncId": 1492,
      "triggerAsyncId": 1491,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 350
    },
    "351": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031010189755",
      "endTime": "7031011579499",
      "elapsedTime": "1389744",
      "asyncId": 1495,
      "triggerAsyncId": 1493,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 351
    },
    "352": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031011722084",
      "endTime": "7031011929495",
      "elapsedTime": "207411",
      "asyncId": 1498,
      "triggerAsyncId": 1496,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1502
      ],
      "uniqueid": 352
    },
    "353": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031012083613",
      "endTime": "7031012283287",
      "elapsedTime": "199674",
      "asyncId": 1499,
      "triggerAsyncId": 1496,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1503
      ],
      "uniqueid": 353
    },
    "354": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031012504776",
      "endTime": "7031012637716",
      "elapsedTime": "132940",
      "asyncId": 1500,
      "triggerAsyncId": 1496,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1504
      ],
      "uniqueid": 354
    },
    "355": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031012769975",
      "endTime": "7031014053940",
      "elapsedTime": "1283965",
      "asyncId": 1501,
      "triggerAsyncId": 1496,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 355
    },
    "356": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031014265614",
      "endTime": "7031014494423",
      "elapsedTime": "228809",
      "asyncId": 1506,
      "triggerAsyncId": 1505,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 356
    },
    "357": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031015146188",
      "endTime": "7031015301948",
      "elapsedTime": "155760",
      "asyncId": 1509,
      "triggerAsyncId": 1507,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 357
    },
    "358": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031015659336",
      "endTime": "7031017938965",
      "elapsedTime": "2279629",
      "asyncId": 1511,
      "triggerAsyncId": 1510,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 358
    },
    "359": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031016026225",
      "endTime": "7031018012397",
      "elapsedTime": "1986172",
      "asyncId": 1514,
      "triggerAsyncId": 1512,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 359
    },
    "360": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031016218591",
      "endTime": "7031016293772",
      "elapsedTime": "75181",
      "asyncId": 1515,
      "triggerAsyncId": 1510,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 360
    },
    "361": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031016646901",
      "endTime": "7031018170509",
      "elapsedTime": "1523608",
      "asyncId": 1517,
      "triggerAsyncId": 1516,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 361
    },
    "362": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031017026216",
      "endTime": "7031018238682",
      "elapsedTime": "1212466",
      "asyncId": 1520,
      "triggerAsyncId": 1518,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 362
    },
    "363": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031018771018",
      "endTime": "7031018937388",
      "elapsedTime": "166370",
      "asyncId": 1524,
      "triggerAsyncId": 1523,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1526
      ],
      "uniqueid": 363
    },
    "364": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031019150195",
      "endTime": "7031020261217",
      "elapsedTime": "1111022",
      "asyncId": 1525,
      "triggerAsyncId": 1523,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 364
    },
    "365": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031020550726",
      "endTime": "7031020731728",
      "elapsedTime": "181002",
      "asyncId": 1528,
      "triggerAsyncId": 1527,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 365
    },
    "366": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031021637749",
      "endTime": "7031021812739",
      "elapsedTime": "174990",
      "asyncId": 1532,
      "triggerAsyncId": 1531,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1536
      ],
      "uniqueid": 366
    },
    "367": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031022032515",
      "endTime": "7031022142302",
      "elapsedTime": "109787",
      "asyncId": 1533,
      "triggerAsyncId": 1531,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1537
      ],
      "uniqueid": 367
    },
    "368": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031022273273",
      "endTime": "7031022454200",
      "elapsedTime": "180927",
      "asyncId": 1534,
      "triggerAsyncId": 1531,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1538
      ],
      "uniqueid": 368
    },
    "369": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031022649550",
      "endTime": "7031024020802",
      "elapsedTime": "1371252",
      "asyncId": 1535,
      "triggerAsyncId": 1531,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 369
    },
    "370": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031024233895",
      "endTime": "7031024425759",
      "elapsedTime": "191864",
      "asyncId": 1540,
      "triggerAsyncId": 1539,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 370
    },
    "371": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031024934076",
      "endTime": "7031028129030",
      "elapsedTime": "3194954",
      "asyncId": 1542,
      "triggerAsyncId": 1541,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 371
    },
    "372": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031025286698",
      "endTime": "7031028231593",
      "elapsedTime": "2944895",
      "asyncId": 1545,
      "triggerAsyncId": 1543,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 372
    },
    "373": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031025437978",
      "endTime": "7031025568702",
      "elapsedTime": "130724",
      "asyncId": 1546,
      "triggerAsyncId": 1541,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 373
    },
    "374": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031026037802",
      "endTime": "7031028526068",
      "elapsedTime": "2488266",
      "asyncId": 1548,
      "triggerAsyncId": 1547,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 374
    },
    "375": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031026380060",
      "endTime": "7031028683503",
      "elapsedTime": "2303443",
      "asyncId": 1551,
      "triggerAsyncId": 1549,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 375
    },
    "376": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031026578303",
      "endTime": "7031026662205",
      "elapsedTime": "83902",
      "asyncId": 1552,
      "triggerAsyncId": 1547,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 376
    },
    "377": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031029360018",
      "endTime": "7031029489052",
      "elapsedTime": "129034",
      "asyncId": 1557,
      "triggerAsyncId": 1556,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1559
      ],
      "uniqueid": 377
    },
    "378": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031029654924",
      "endTime": "7031030380047",
      "elapsedTime": "725123",
      "asyncId": 1558,
      "triggerAsyncId": 1556,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 378
    },
    "379": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031030591153",
      "endTime": "7031030788425",
      "elapsedTime": "197272",
      "asyncId": 1561,
      "triggerAsyncId": 1560,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 379
    },
    "380": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031038563097",
      "endTime": "7031048896883",
      "elapsedTime": "10333786",
      "asyncId": 1623,
      "triggerAsyncId": 1622,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1630
      ],
      "uniqueid": 380
    },
    "381": {
      "source": "test.js:190:11:190:11",
      "startTime": "7031038718933",
      "endTime": "7031042375687",
      "elapsedTime": "3656754",
      "asyncId": 1624,
      "triggerAsyncId": 1622,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1628
      ],
      "uniqueid": 381
    },
    "382": {
      "source": "test.js:190:11:190:11",
      "startTime": "7031039161794",
      "endTime": "7031040324954",
      "elapsedTime": "1163160",
      "asyncId": 1627,
      "triggerAsyncId": 1625,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 11,
      "endLine": 190,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1633
      ],
      "uniqueid": 382
    },
    "383": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031039308473",
      "endTime": "7031043266686",
      "elapsedTime": "3958213",
      "asyncId": 1628,
      "triggerAsyncId": 1624,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1649,
        1650
      ],
      "uniqueid": 383
    },
    "384": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031039506602",
      "endTime": "7031051314871",
      "elapsedTime": "11808269",
      "asyncId": 1630,
      "triggerAsyncId": 1623,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1685,
        1686,
        1687,
        1688,
        1689
      ],
      "uniqueid": 384
    },
    "385": {
      "source": "test.js:190:5:190:5",
      "startTime": "7031040132019",
      "endTime": "7031040937894",
      "elapsedTime": "805875",
      "asyncId": 1635,
      "triggerAsyncId": 1633,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1638
      ],
      "uniqueid": 385
    },
    "386": {
      "source": "test.js:190:5:190:5",
      "startTime": "7031040862014",
      "endTime": "7031041564374",
      "elapsedTime": "702360",
      "asyncId": 1640,
      "triggerAsyncId": 1638,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1643
      ],
      "uniqueid": 386
    },
    "387": {
      "source": "test.js:190:5:190:5",
      "startTime": "7031041488421",
      "endTime": "7031042104907",
      "elapsedTime": "616486",
      "asyncId": 1645,
      "triggerAsyncId": 1643,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1646
      ],
      "uniqueid": 387
    },
    "388": {
      "source": "test.js:190:5:190:5",
      "startTime": "7031042004639",
      "endTime": "7031042457503",
      "elapsedTime": "452864",
      "asyncId": 1648,
      "triggerAsyncId": 1646,
      "io": "",
      "userCode": false,
      "line": "\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  })",
      "startLine": 190,
      "startCol": 5,
      "endLine": 190,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 388
    },
    "389": {
      "source": "test.js:191:11:191:11",
      "startTime": "7031042598307",
      "endTime": "7031046797349",
      "elapsedTime": "4199042",
      "asyncId": 1649,
      "triggerAsyncId": 1628,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 389
    },
    "390": {
      "source": "test.js:191:11:191:11",
      "startTime": "7031042963426",
      "endTime": "7031044049102",
      "elapsedTime": "1085676",
      "asyncId": 1652,
      "triggerAsyncId": 1650,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 11,
      "endLine": 191,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1656
      ],
      "uniqueid": 390
    },
    "391": {
      "source": "test.js:191:5:191:5",
      "startTime": "7031043955238",
      "endTime": "7031044732305",
      "elapsedTime": "777067",
      "asyncId": 1658,
      "triggerAsyncId": 1656,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1661
      ],
      "uniqueid": 391
    },
    "392": {
      "source": "test.js:191:5:191:5",
      "startTime": "7031044648097",
      "endTime": "7031045291063",
      "elapsedTime": "642966",
      "asyncId": 1663,
      "triggerAsyncId": 1661,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1664
      ],
      "uniqueid": 392
    },
    "393": {
      "source": "test.js:191:5:191:5",
      "startTime": "7031045179850",
      "endTime": "7031045903439",
      "elapsedTime": "723589",
      "asyncId": 1666,
      "triggerAsyncId": 1664,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1667
      ],
      "uniqueid": 393
    },
    "394": {
      "source": "test.js:191:5:191:5",
      "startTime": "7031045824572",
      "endTime": "7031046608109",
      "elapsedTime": "783537",
      "asyncId": 1669,
      "triggerAsyncId": 1667,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1670
      ],
      "uniqueid": 394
    },
    "395": {
      "source": "test.js:191:5:191:5",
      "startTime": "7031046429496",
      "endTime": "7031046868564",
      "elapsedTime": "439068",
      "asyncId": 1672,
      "triggerAsyncId": 1670,
      "io": "",
      "userCode": false,
      "line": "\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });",
      "startLine": 191,
      "startCol": 5,
      "endLine": 191,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 395
    },
    "396": {
      "source": "test.js:192:11:192:11",
      "startTime": "7031046994256",
      "endTime": "7031048759444",
      "elapsedTime": "1765188",
      "asyncId": 1673,
      "triggerAsyncId": 1653,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 396
    },
    "397": {
      "source": "test.js:192:11:192:11",
      "startTime": "7031047343115",
      "endTime": "7031048460187",
      "elapsedTime": "1117072",
      "asyncId": 1676,
      "triggerAsyncId": 1674,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 11,
      "endLine": 192,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1680
      ],
      "uniqueid": 397
    },
    "398": {
      "source": "test.js:192:5:192:5",
      "startTime": "7031048381535",
      "endTime": "7031048826843",
      "elapsedTime": "445308",
      "asyncId": 1682,
      "triggerAsyncId": 1680,
      "io": "",
      "userCode": false,
      "line": "\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => ",
      "startLine": 192,
      "startCol": 5,
      "endLine": 192,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 398
    },
    "399": {
      "source": "test.js:226:23:226:23",
      "startTime": "7031049556134",
      "endTime": "7031081157995",
      "elapsedTime": "31601861",
      "asyncId": 1686,
      "triggerAsyncId": 1630,
      "io": "",
      "userCode": false,
      "line": "\n\n  it('default', async () => {\n    const res = await read();\n    const expect = [...depth0, ...depth1, ...depth2];\n    res.should.have.lengthOf(expect.length);\n    re",
      "startLine": 226,
      "startCol": 23,
      "endLine": 226,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        1693
      ],
      "uniqueid": 399
    },
    "400": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031049783562",
      "endTime": "7031080982474",
      "elapsedTime": "31198912",
      "asyncId": 1687,
      "triggerAsyncId": 1630,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 400
    },
    "401": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031050059949",
      "endTime": "7031052298519",
      "elapsedTime": "2238570",
      "asyncId": 1688,
      "triggerAsyncId": 1630,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        1698
      ],
      "uniqueid": 401
    },
    "402": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031050571949",
      "endTime": "7031052381617",
      "elapsedTime": "1809668",
      "asyncId": 1691,
      "triggerAsyncId": 1689,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 402
    },
    "403": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031050908865",
      "endTime": "7031081925383",
      "elapsedTime": "31016518",
      "asyncId": 1693,
      "triggerAsyncId": 1686,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 403
    },
    "404": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031052005169",
      "endTime": "7031055320874",
      "elapsedTime": "3315705",
      "asyncId": 1698,
      "triggerAsyncId": 1688,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1699,
        1700,
        1701,
        1702,
        1703,
        1704
      ],
      "uniqueid": 404
    },
    "405": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031052522249",
      "endTime": "7031052693068",
      "elapsedTime": "170819",
      "asyncId": 1699,
      "triggerAsyncId": 1698,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1705
      ],
      "uniqueid": 405
    },
    "406": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031052853496",
      "endTime": "7031053008580",
      "elapsedTime": "155084",
      "asyncId": 1700,
      "triggerAsyncId": 1698,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1706
      ],
      "uniqueid": 406
    },
    "407": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031053191594",
      "endTime": "7031053312076",
      "elapsedTime": "120482",
      "asyncId": 1701,
      "triggerAsyncId": 1698,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1707
      ],
      "uniqueid": 407
    },
    "408": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031053443238",
      "endTime": "7031053598136",
      "elapsedTime": "154898",
      "asyncId": 1702,
      "triggerAsyncId": 1698,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1708
      ],
      "uniqueid": 408
    },
    "409": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031053726776",
      "endTime": "7031053880649",
      "elapsedTime": "153873",
      "asyncId": 1703,
      "triggerAsyncId": 1698,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1709
      ],
      "uniqueid": 409
    },
    "410": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031054010289",
      "endTime": "7031055684709",
      "elapsedTime": "1674420",
      "asyncId": 1704,
      "triggerAsyncId": 1698,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 410
    },
    "411": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031055878946",
      "endTime": "7031056072686",
      "elapsedTime": "193740",
      "asyncId": 1711,
      "triggerAsyncId": 1710,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 411
    },
    "412": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031056655106",
      "endTime": "7031056812392",
      "elapsedTime": "157286",
      "asyncId": 1714,
      "triggerAsyncId": 1712,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 412
    },
    "413": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031057355755",
      "endTime": "7031057431323",
      "elapsedTime": "75568",
      "asyncId": 1716,
      "triggerAsyncId": 1715,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 413
    },
    "414": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031057908481",
      "endTime": "7031058084435",
      "elapsedTime": "175954",
      "asyncId": 1718,
      "triggerAsyncId": 1717,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 414
    },
    "415": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031058528361",
      "endTime": "7031060516489",
      "elapsedTime": "1988128",
      "asyncId": 1720,
      "triggerAsyncId": 1719,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 415
    },
    "416": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031058816915",
      "endTime": "7031060582764",
      "elapsedTime": "1765849",
      "asyncId": 1723,
      "triggerAsyncId": 1721,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 416
    },
    "417": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031058966002",
      "endTime": "7031059044462",
      "elapsedTime": "78460",
      "asyncId": 1724,
      "triggerAsyncId": 1719,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 417
    },
    "418": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031059452501",
      "endTime": "7031060735475",
      "elapsedTime": "1282974",
      "asyncId": 1726,
      "triggerAsyncId": 1725,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 418
    },
    "419": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031059731208",
      "endTime": "7031060801552",
      "elapsedTime": "1070344",
      "asyncId": 1729,
      "triggerAsyncId": 1727,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 419
    },
    "420": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031060978999",
      "endTime": "7031061092408",
      "elapsedTime": "113409",
      "asyncId": 1732,
      "triggerAsyncId": 1730,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1736
      ],
      "uniqueid": 420
    },
    "421": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031061213017",
      "endTime": "7031061370306",
      "elapsedTime": "157289",
      "asyncId": 1733,
      "triggerAsyncId": 1730,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1737
      ],
      "uniqueid": 421
    },
    "422": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031061512080",
      "endTime": "7031061654988",
      "elapsedTime": "142908",
      "asyncId": 1734,
      "triggerAsyncId": 1730,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1738
      ],
      "uniqueid": 422
    },
    "423": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031061771136",
      "endTime": "7031062718925",
      "elapsedTime": "947789",
      "asyncId": 1735,
      "triggerAsyncId": 1730,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 423
    },
    "424": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031062901722",
      "endTime": "7031063063549",
      "elapsedTime": "161827",
      "asyncId": 1740,
      "triggerAsyncId": 1739,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 424
    },
    "425": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031063445063",
      "endTime": "7031063586450",
      "elapsedTime": "141387",
      "asyncId": 1743,
      "triggerAsyncId": 1741,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 425
    },
    "426": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031064008854",
      "endTime": "7031066250402",
      "elapsedTime": "2241548",
      "asyncId": 1745,
      "triggerAsyncId": 1744,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 426
    },
    "427": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031064383129",
      "endTime": "7031066360080",
      "elapsedTime": "1976951",
      "asyncId": 1748,
      "triggerAsyncId": 1746,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 427
    },
    "428": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031064530462",
      "endTime": "7031064608595",
      "elapsedTime": "78133",
      "asyncId": 1749,
      "triggerAsyncId": 1744,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 428
    },
    "429": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031065061648",
      "endTime": "7031066663680",
      "elapsedTime": "1602032",
      "asyncId": 1751,
      "triggerAsyncId": 1750,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 429
    },
    "430": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031065341697",
      "endTime": "7031066751966",
      "elapsedTime": "1410269",
      "asyncId": 1754,
      "triggerAsyncId": 1752,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 430
    },
    "431": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031067297909",
      "endTime": "7031067526660",
      "elapsedTime": "228751",
      "asyncId": 1758,
      "triggerAsyncId": 1757,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1760
      ],
      "uniqueid": 431
    },
    "432": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031067872273",
      "endTime": "7031069025402",
      "elapsedTime": "1153129",
      "asyncId": 1759,
      "triggerAsyncId": 1757,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 432
    },
    "433": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031069320550",
      "endTime": "7031069540033",
      "elapsedTime": "219483",
      "asyncId": 1762,
      "triggerAsyncId": 1761,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 433
    },
    "434": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031070694279",
      "endTime": "7031070898737",
      "elapsedTime": "204458",
      "asyncId": 1766,
      "triggerAsyncId": 1765,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1770
      ],
      "uniqueid": 434
    },
    "435": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031071066573",
      "endTime": "7031071261627",
      "elapsedTime": "195054",
      "asyncId": 1767,
      "triggerAsyncId": 1765,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1771
      ],
      "uniqueid": 435
    },
    "436": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031071406689",
      "endTime": "7031071579980",
      "elapsedTime": "173291",
      "asyncId": 1768,
      "triggerAsyncId": 1765,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1772
      ],
      "uniqueid": 436
    },
    "437": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031071730391",
      "endTime": "7031073219766",
      "elapsedTime": "1489375",
      "asyncId": 1769,
      "triggerAsyncId": 1765,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 437
    },
    "438": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031073490227",
      "endTime": "7031073589061",
      "elapsedTime": "98834",
      "asyncId": 1774,
      "triggerAsyncId": 1773,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 438
    },
    "439": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031074105195",
      "endTime": "7031077762521",
      "elapsedTime": "3657326",
      "asyncId": 1776,
      "triggerAsyncId": 1775,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 439
    },
    "440": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031074474114",
      "endTime": "7031077858845",
      "elapsedTime": "3384731",
      "asyncId": 1779,
      "triggerAsyncId": 1777,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 440
    },
    "441": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031074686570",
      "endTime": "7031074867238",
      "elapsedTime": "180668",
      "asyncId": 1780,
      "triggerAsyncId": 1775,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 441
    },
    "442": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031075458448",
      "endTime": "7031078037323",
      "elapsedTime": "2578875",
      "asyncId": 1782,
      "triggerAsyncId": 1781,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 442
    },
    "443": {
      "source": "index.js:135:40:135:40",
      "startTime": "7031075840742",
      "endTime": "7031078144745",
      "elapsedTime": "2304003",
      "asyncId": 1785,
      "triggerAsyncId": 1783,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 443
    },
    "444": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031075994465",
      "endTime": "7031076076430",
      "elapsedTime": "81965",
      "asyncId": 1786,
      "triggerAsyncId": 1781,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 444
    },
    "445": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031078785413",
      "endTime": "7031078900954",
      "elapsedTime": "115541",
      "asyncId": 1791,
      "triggerAsyncId": 1790,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1793
      ],
      "uniqueid": 445
    },
    "446": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031079110839",
      "endTime": "7031079723475",
      "elapsedTime": "612636",
      "asyncId": 1792,
      "triggerAsyncId": 1790,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 446
    },
    "447": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031080023063",
      "endTime": "7031080193104",
      "elapsedTime": "170041",
      "asyncId": 1795,
      "triggerAsyncId": 1794,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 447
    },
    "448": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031088633151",
      "endTime": "7031093040953",
      "elapsedTime": "4407802",
      "asyncId": 1860,
      "triggerAsyncId": 1859,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1867
      ],
      "uniqueid": 448
    },
    "449": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031088844959",
      "endTime": "7031092806048",
      "elapsedTime": "3961089",
      "asyncId": 1861,
      "triggerAsyncId": 1859,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1865
      ],
      "uniqueid": 449
    },
    "450": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031089242333",
      "endTime": "7031090371443",
      "elapsedTime": "1129110",
      "asyncId": 1864,
      "triggerAsyncId": 1862,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        1870
      ],
      "uniqueid": 450
    },
    "451": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031089436578",
      "endTime": "7031093111781",
      "elapsedTime": "3675203",
      "asyncId": 1865,
      "triggerAsyncId": 1861,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 451
    },
    "452": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031089599364",
      "endTime": "7031096347113",
      "elapsedTime": "6747749",
      "asyncId": 1867,
      "triggerAsyncId": 1860,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1890,
        1891,
        1892,
        1893,
        1894
      ],
      "uniqueid": 452
    },
    "453": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031090242453",
      "endTime": "7031090987931",
      "elapsedTime": "745478",
      "asyncId": 1872,
      "triggerAsyncId": 1870,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1875
      ],
      "uniqueid": 453
    },
    "454": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031090912749",
      "endTime": "7031091584671",
      "elapsedTime": "671922",
      "asyncId": 1877,
      "triggerAsyncId": 1875,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1880
      ],
      "uniqueid": 454
    },
    "455": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031091503726",
      "endTime": "7031092443961",
      "elapsedTime": "940235",
      "asyncId": 1882,
      "triggerAsyncId": 1880,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        1885
      ],
      "uniqueid": 455
    },
    "456": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031092271048",
      "endTime": "7031092958756",
      "elapsedTime": "687708",
      "asyncId": 1887,
      "triggerAsyncId": 1885,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 456
    },
    "457": {
      "source": "test.js:243:23:243:23",
      "startTime": "7031093900387",
      "endTime": "7031104876246",
      "elapsedTime": "10975859",
      "asyncId": 1891,
      "triggerAsyncId": 1867,
      "io": "",
      "userCode": false,
      "line": "\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js'];\n    const res = await read({fileFilter: '*.js'});\n    res.should.have.lengthOf(expect1.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect1[index], currPath)",
      "startLine": 243,
      "startCol": 23,
      "endLine": 243,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        1898
      ],
      "uniqueid": 457
    },
    "458": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031094146364",
      "endTime": "7031104772276",
      "elapsedTime": "10625912",
      "asyncId": 1892,
      "triggerAsyncId": 1867,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 458
    },
    "459": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031095107699",
      "endTime": "7031097207104",
      "elapsedTime": "2099405",
      "asyncId": 1893,
      "triggerAsyncId": 1867,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        1903
      ],
      "uniqueid": 459
    },
    "460": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031095684473",
      "endTime": "7031097288303",
      "elapsedTime": "1603830",
      "asyncId": 1896,
      "triggerAsyncId": 1894,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 460
    },
    "461": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031096027075",
      "endTime": "7031106949466",
      "elapsedTime": "10922391",
      "asyncId": 1898,
      "triggerAsyncId": 1891,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        1929,
        1930,
        1931,
        1932
      ],
      "uniqueid": 461
    },
    "462": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031096893807",
      "endTime": "7031100308352",
      "elapsedTime": "3414545",
      "asyncId": 1903,
      "triggerAsyncId": 1893,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1904,
        1905,
        1906,
        1907,
        1908,
        1909
      ],
      "uniqueid": 462
    },
    "463": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031097426604",
      "endTime": "7031097629040",
      "elapsedTime": "202436",
      "asyncId": 1904,
      "triggerAsyncId": 1903,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1910
      ],
      "uniqueid": 463
    },
    "464": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031097765606",
      "endTime": "7031097948397",
      "elapsedTime": "182791",
      "asyncId": 1905,
      "triggerAsyncId": 1903,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1911
      ],
      "uniqueid": 464
    },
    "465": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031098124076",
      "endTime": "7031098286019",
      "elapsedTime": "161943",
      "asyncId": 1906,
      "triggerAsyncId": 1903,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1912
      ],
      "uniqueid": 465
    },
    "466": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031098455298",
      "endTime": "7031098625671",
      "elapsedTime": "170373",
      "asyncId": 1907,
      "triggerAsyncId": 1903,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1913
      ],
      "uniqueid": 466
    },
    "467": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031098751861",
      "endTime": "7031098935675",
      "elapsedTime": "183814",
      "asyncId": 1908,
      "triggerAsyncId": 1903,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1914
      ],
      "uniqueid": 467
    },
    "468": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031099085477",
      "endTime": "7031100703496",
      "elapsedTime": "1618019",
      "asyncId": 1909,
      "triggerAsyncId": 1903,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 468
    },
    "469": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031100956785",
      "endTime": "7031101104519",
      "elapsedTime": "147734",
      "asyncId": 1916,
      "triggerAsyncId": 1915,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 469
    },
    "470": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031101915707",
      "endTime": "7031102085269",
      "elapsedTime": "169562",
      "asyncId": 1919,
      "triggerAsyncId": 1917,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 470
    },
    "471": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031102541347",
      "endTime": "7031102723629",
      "elapsedTime": "182282",
      "asyncId": 1921,
      "triggerAsyncId": 1920,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 471
    },
    "472": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031103258418",
      "endTime": "7031103427969",
      "elapsedTime": "169551",
      "asyncId": 1923,
      "triggerAsyncId": 1922,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 472
    },
    "473": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031103848561",
      "endTime": "7031104023284",
      "elapsedTime": "174723",
      "asyncId": 1925,
      "triggerAsyncId": 1924,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 473
    },
    "474": {
      "source": "test.js:249:24:249:24",
      "startTime": "7031105449688",
      "endTime": "7031115537432",
      "elapsedTime": "10087744",
      "asyncId": 1929,
      "triggerAsyncId": 1898,
      "io": "",
      "userCode": false,
      "line": "\n    );\n\n    const res2 = await read({fileFilter: ['*.js']});\n    res2.should.have.lengthOf(expect1.length);\n    res2.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect1[index], currPath)",
      "startLine": 249,
      "startCol": 24,
      "endLine": 249,
      "endCol": 24,
      "file": "test.js",
      "triggers": [
        1936
      ],
      "uniqueid": 474
    },
    "475": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031105664800",
      "endTime": "7031115362383",
      "elapsedTime": "9697583",
      "asyncId": 1930,
      "triggerAsyncId": 1898,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [
        1937
      ],
      "uniqueid": 475
    },
    "476": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031106003315",
      "endTime": "7031107680112",
      "elapsedTime": "1676797",
      "asyncId": 1931,
      "triggerAsyncId": 1898,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        1939
      ],
      "uniqueid": 476
    },
    "477": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031106476148",
      "endTime": "7031107762380",
      "elapsedTime": "1286232",
      "asyncId": 1934,
      "triggerAsyncId": 1932,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 477
    },
    "478": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031107455918",
      "endTime": "7031110802481",
      "elapsedTime": "3346563",
      "asyncId": 1939,
      "triggerAsyncId": 1931,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1940,
        1941,
        1942,
        1943,
        1944,
        1945
      ],
      "uniqueid": 478
    },
    "479": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031107905923",
      "endTime": "7031108011989",
      "elapsedTime": "106066",
      "asyncId": 1940,
      "triggerAsyncId": 1939,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1946
      ],
      "uniqueid": 479
    },
    "480": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031108226587",
      "endTime": "7031108399786",
      "elapsedTime": "173199",
      "asyncId": 1941,
      "triggerAsyncId": 1939,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1947
      ],
      "uniqueid": 480
    },
    "481": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031108601755",
      "endTime": "7031108727412",
      "elapsedTime": "125657",
      "asyncId": 1942,
      "triggerAsyncId": 1939,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1948
      ],
      "uniqueid": 481
    },
    "482": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031108859407",
      "endTime": "7031109045295",
      "elapsedTime": "185888",
      "asyncId": 1943,
      "triggerAsyncId": 1939,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1949
      ],
      "uniqueid": 482
    },
    "483": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031109179446",
      "endTime": "7031109353005",
      "elapsedTime": "173559",
      "asyncId": 1944,
      "triggerAsyncId": 1939,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1950
      ],
      "uniqueid": 483
    },
    "484": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031109487443",
      "endTime": "7031111241377",
      "elapsedTime": "1753934",
      "asyncId": 1945,
      "triggerAsyncId": 1939,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 484
    },
    "485": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031111448193",
      "endTime": "7031111599886",
      "elapsedTime": "151693",
      "asyncId": 1952,
      "triggerAsyncId": 1951,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 485
    },
    "486": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031112168499",
      "endTime": "7031112321502",
      "elapsedTime": "153003",
      "asyncId": 1955,
      "triggerAsyncId": 1953,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 486
    },
    "487": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031112783602",
      "endTime": "7031112907262",
      "elapsedTime": "123660",
      "asyncId": 1957,
      "triggerAsyncId": 1956,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 487
    },
    "488": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031113510461",
      "endTime": "7031113715552",
      "elapsedTime": "205091",
      "asyncId": 1959,
      "triggerAsyncId": 1958,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 488
    },
    "489": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031114352195",
      "endTime": "7031114558104",
      "elapsedTime": "205909",
      "asyncId": 1961,
      "triggerAsyncId": 1960,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 489
    },
    "490": {
      "source": "test.js:256:24:256:24",
      "startTime": "7031116225141",
      "endTime": "7031131580713",
      "elapsedTime": "15355572",
      "asyncId": 1965,
      "triggerAsyncId": 1936,
      "io": "",
      "userCode": false,
      "line": "\n\n    const expect2 = ['b.txt'];\n    const res3 = await read({fileFilter: ['*.txt']});\n    res3.should.have.lengthOf(expect2.length);\n    res3.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect2[index], currPath)",
      "startLine": 256,
      "startCol": 24,
      "endLine": 256,
      "endCol": 24,
      "file": "test.js",
      "triggers": [
        1972
      ],
      "uniqueid": 490
    },
    "491": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031116706422",
      "endTime": "7031131383873",
      "elapsedTime": "14677451",
      "asyncId": 1966,
      "triggerAsyncId": 1936,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [
        1973
      ],
      "uniqueid": 491
    },
    "492": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031117330854",
      "endTime": "7031121655064",
      "elapsedTime": "4324210",
      "asyncId": 1967,
      "triggerAsyncId": 1936,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        1975
      ],
      "uniqueid": 492
    },
    "493": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031117922991",
      "endTime": "7031121752967",
      "elapsedTime": "3829976",
      "asyncId": 1970,
      "triggerAsyncId": 1968,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 493
    },
    "494": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031121303697",
      "endTime": "7031126478927",
      "elapsedTime": "5175230",
      "asyncId": 1975,
      "triggerAsyncId": 1967,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1976,
        1977,
        1978,
        1979,
        1980,
        1981
      ],
      "uniqueid": 494
    },
    "495": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031121921024",
      "endTime": "7031122038554",
      "elapsedTime": "117530",
      "asyncId": 1976,
      "triggerAsyncId": 1975,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1982
      ],
      "uniqueid": 495
    },
    "496": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031122223685",
      "endTime": "7031122354141",
      "elapsedTime": "130456",
      "asyncId": 1977,
      "triggerAsyncId": 1975,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1983
      ],
      "uniqueid": 496
    },
    "497": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031122569756",
      "endTime": "7031122730680",
      "elapsedTime": "160924",
      "asyncId": 1978,
      "triggerAsyncId": 1975,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1984
      ],
      "uniqueid": 497
    },
    "498": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031122938897",
      "endTime": "7031124458295",
      "elapsedTime": "1519398",
      "asyncId": 1979,
      "triggerAsyncId": 1975,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1985
      ],
      "uniqueid": 498
    },
    "499": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031124807208",
      "endTime": "7031124974472",
      "elapsedTime": "167264",
      "asyncId": 1980,
      "triggerAsyncId": 1975,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        1986
      ],
      "uniqueid": 499
    },
    "500": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031125178238",
      "endTime": "7031127217136",
      "elapsedTime": "2038898",
      "asyncId": 1981,
      "triggerAsyncId": 1975,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 500
    },
    "501": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031127540410",
      "endTime": "7031127625019",
      "elapsedTime": "84609",
      "asyncId": 1988,
      "triggerAsyncId": 1987,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 501
    },
    "502": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031128083058",
      "endTime": "7031128265743",
      "elapsedTime": "182685",
      "asyncId": 1990,
      "triggerAsyncId": 1989,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 502
    },
    "503": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031128961523",
      "endTime": "7031129164410",
      "elapsedTime": "202887",
      "asyncId": 1993,
      "triggerAsyncId": 1991,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 503
    },
    "504": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031129761613",
      "endTime": "7031129876496",
      "elapsedTime": "114883",
      "asyncId": 1995,
      "triggerAsyncId": 1994,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 504
    },
    "505": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031130415934",
      "endTime": "7031130512107",
      "elapsedTime": "96173",
      "asyncId": 1997,
      "triggerAsyncId": 1996,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 505
    },
    "506": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031142909406",
      "endTime": "7031147923918",
      "elapsedTime": "5014512",
      "asyncId": 2034,
      "triggerAsyncId": 2033,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2041
      ],
      "uniqueid": 506
    },
    "507": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031143106117",
      "endTime": "7031147674418",
      "elapsedTime": "4568301",
      "asyncId": 2035,
      "triggerAsyncId": 2033,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2039
      ],
      "uniqueid": 507
    },
    "508": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031143673723",
      "endTime": "7031145046590",
      "elapsedTime": "1372867",
      "asyncId": 2038,
      "triggerAsyncId": 2036,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2044
      ],
      "uniqueid": 508
    },
    "509": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031143904397",
      "endTime": "7031147992050",
      "elapsedTime": "4087653",
      "asyncId": 2039,
      "triggerAsyncId": 2035,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 509
    },
    "510": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031144080977",
      "endTime": "7031150530813",
      "elapsedTime": "6449836",
      "asyncId": 2041,
      "triggerAsyncId": 2034,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2064,
        2065,
        2066,
        2067,
        2068
      ],
      "uniqueid": 510
    },
    "511": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031144840045",
      "endTime": "7031145806256",
      "elapsedTime": "966211",
      "asyncId": 2046,
      "triggerAsyncId": 2044,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2049
      ],
      "uniqueid": 511
    },
    "512": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031145699226",
      "endTime": "7031146588404",
      "elapsedTime": "889178",
      "asyncId": 2051,
      "triggerAsyncId": 2049,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2054
      ],
      "uniqueid": 512
    },
    "513": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031146506902",
      "endTime": "7031147285847",
      "elapsedTime": "778945",
      "asyncId": 2056,
      "triggerAsyncId": 2054,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2059
      ],
      "uniqueid": 513
    },
    "514": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031147202383",
      "endTime": "7031147846304",
      "elapsedTime": "643921",
      "asyncId": 2061,
      "triggerAsyncId": 2059,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 514
    },
    "515": {
      "source": "test.js:264:23:264:23",
      "startTime": "7031148609344",
      "endTime": "7031159087436",
      "elapsedTime": "10478092",
      "asyncId": 2065,
      "triggerAsyncId": 2041,
      "io": "",
      "userCode": false,
      "line": "\n  it('leading and trailing spaces', async () => {\n    const expect = ['a.js', 'c.js', 'd.js', 'e.rb'];\n    const res = await read({fileFilter: [' *.js', '*.rb ']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath)",
      "startLine": 264,
      "startCol": 23,
      "endLine": 264,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        2072
      ],
      "uniqueid": 515
    },
    "516": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031148842072",
      "endTime": "7031158978485",
      "elapsedTime": "10136413",
      "asyncId": 2066,
      "triggerAsyncId": 2041,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 516
    },
    "517": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031149221110",
      "endTime": "7031151513967",
      "elapsedTime": "2292857",
      "asyncId": 2067,
      "triggerAsyncId": 2041,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2077
      ],
      "uniqueid": 517
    },
    "518": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031149840596",
      "endTime": "7031151589469",
      "elapsedTime": "1748873",
      "asyncId": 2070,
      "triggerAsyncId": 2068,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 518
    },
    "519": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031150201195",
      "endTime": "7031159808688",
      "elapsedTime": "9607493",
      "asyncId": 2072,
      "triggerAsyncId": 2065,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 519
    },
    "520": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031151211539",
      "endTime": "7031154575994",
      "elapsedTime": "3364455",
      "asyncId": 2077,
      "triggerAsyncId": 2067,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2078,
        2079,
        2080,
        2081,
        2082,
        2083
      ],
      "uniqueid": 520
    },
    "521": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031151726014",
      "endTime": "7031151925238",
      "elapsedTime": "199224",
      "asyncId": 2078,
      "triggerAsyncId": 2077,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2084
      ],
      "uniqueid": 521
    },
    "522": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031152138337",
      "endTime": "7031152257575",
      "elapsedTime": "119238",
      "asyncId": 2079,
      "triggerAsyncId": 2077,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2085
      ],
      "uniqueid": 522
    },
    "523": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031152393539",
      "endTime": "7031152570594",
      "elapsedTime": "177055",
      "asyncId": 2080,
      "triggerAsyncId": 2077,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2086
      ],
      "uniqueid": 523
    },
    "524": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031152704402",
      "endTime": "7031152856735",
      "elapsedTime": "152333",
      "asyncId": 2081,
      "triggerAsyncId": 2077,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2087
      ],
      "uniqueid": 524
    },
    "525": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031152987916",
      "endTime": "7031153178420",
      "elapsedTime": "190504",
      "asyncId": 2082,
      "triggerAsyncId": 2077,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2088
      ],
      "uniqueid": 525
    },
    "526": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031153403484",
      "endTime": "7031155034807",
      "elapsedTime": "1631323",
      "asyncId": 2083,
      "triggerAsyncId": 2077,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 526
    },
    "527": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031155354327",
      "endTime": "7031155516994",
      "elapsedTime": "162667",
      "asyncId": 2090,
      "triggerAsyncId": 2089,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 527
    },
    "528": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031156070865",
      "endTime": "7031156243554",
      "elapsedTime": "172689",
      "asyncId": 2093,
      "triggerAsyncId": 2091,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 528
    },
    "529": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031156788847",
      "endTime": "7031156958168",
      "elapsedTime": "169321",
      "asyncId": 2095,
      "triggerAsyncId": 2094,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 529
    },
    "530": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031157452067",
      "endTime": "7031157525766",
      "elapsedTime": "73699",
      "asyncId": 2097,
      "triggerAsyncId": 2096,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 530
    },
    "531": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031157980600",
      "endTime": "7031158149545",
      "elapsedTime": "168945",
      "asyncId": 2099,
      "triggerAsyncId": 2098,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 531
    },
    "532": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031164775943",
      "endTime": "7031170394830",
      "elapsedTime": "5618887",
      "asyncId": 2136,
      "triggerAsyncId": 2135,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2143
      ],
      "uniqueid": 532
    },
    "533": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031164976361",
      "endTime": "7031170213752",
      "elapsedTime": "5237391",
      "asyncId": 2137,
      "triggerAsyncId": 2135,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2141
      ],
      "uniqueid": 533
    },
    "534": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031165369138",
      "endTime": "7031166453277",
      "elapsedTime": "1084139",
      "asyncId": 2140,
      "triggerAsyncId": 2138,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2146
      ],
      "uniqueid": 534
    },
    "535": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031165520483",
      "endTime": "7031170464927",
      "elapsedTime": "4944444",
      "asyncId": 2141,
      "triggerAsyncId": 2137,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 535
    },
    "536": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031165736823",
      "endTime": "7031173175455",
      "elapsedTime": "7438632",
      "asyncId": 2143,
      "triggerAsyncId": 2136,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2166,
        2167,
        2168,
        2169,
        2170
      ],
      "uniqueid": 536
    },
    "537": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031166369428",
      "endTime": "7031167856738",
      "elapsedTime": "1487310",
      "asyncId": 2148,
      "triggerAsyncId": 2146,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2151
      ],
      "uniqueid": 537
    },
    "538": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031167647257",
      "endTime": "7031168865936",
      "elapsedTime": "1218679",
      "asyncId": 2153,
      "triggerAsyncId": 2151,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2156
      ],
      "uniqueid": 538
    },
    "539": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031168778046",
      "endTime": "7031169603239",
      "elapsedTime": "825193",
      "asyncId": 2158,
      "triggerAsyncId": 2156,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2161
      ],
      "uniqueid": 539
    },
    "540": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031169525629",
      "endTime": "7031170313902",
      "elapsedTime": "788273",
      "asyncId": 2163,
      "triggerAsyncId": 2161,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 540
    },
    "541": {
      "source": "test.js:272:23:272:23",
      "startTime": "7031171151809",
      "endTime": "7031182803854",
      "elapsedTime": "11652045",
      "asyncId": 2167,
      "triggerAsyncId": 2143,
      "io": "",
      "userCode": false,
      "line": "\n  it('multiple glob', async () => {\n    const expect = ['a.js', 'b.txt', 'c.js', 'd.js'];\n    const res = await read({fileFilter: ['*.js', '*.txt']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath)",
      "startLine": 272,
      "startCol": 23,
      "endLine": 272,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        2174
      ],
      "uniqueid": 541
    },
    "542": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031171397483",
      "endTime": "7031182679550",
      "elapsedTime": "11282067",
      "asyncId": 2168,
      "triggerAsyncId": 2143,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 542
    },
    "543": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031171768347",
      "endTime": "7031174872589",
      "elapsedTime": "3104242",
      "asyncId": 2169,
      "triggerAsyncId": 2143,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2179
      ],
      "uniqueid": 543
    },
    "544": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031172356184",
      "endTime": "7031174991840",
      "elapsedTime": "2635656",
      "asyncId": 2172,
      "triggerAsyncId": 2170,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 544
    },
    "545": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031172736519",
      "endTime": "7031183491111",
      "elapsedTime": "10754592",
      "asyncId": 2174,
      "triggerAsyncId": 2167,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 545
    },
    "546": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031174460303",
      "endTime": "7031178244831",
      "elapsedTime": "3784528",
      "asyncId": 2179,
      "triggerAsyncId": 2169,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2180,
        2181,
        2182,
        2183,
        2184,
        2185
      ],
      "uniqueid": 546
    },
    "547": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031175255214",
      "endTime": "7031175413803",
      "elapsedTime": "158589",
      "asyncId": 2180,
      "triggerAsyncId": 2179,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2186
      ],
      "uniqueid": 547
    },
    "548": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031175579140",
      "endTime": "7031175773781",
      "elapsedTime": "194641",
      "asyncId": 2181,
      "triggerAsyncId": 2179,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2187
      ],
      "uniqueid": 548
    },
    "549": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031175928599",
      "endTime": "7031176122360",
      "elapsedTime": "193761",
      "asyncId": 2182,
      "triggerAsyncId": 2179,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2188
      ],
      "uniqueid": 549
    },
    "550": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031176348634",
      "endTime": "7031176458041",
      "elapsedTime": "109407",
      "asyncId": 2183,
      "triggerAsyncId": 2179,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2189
      ],
      "uniqueid": 550
    },
    "551": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031176653798",
      "endTime": "7031176833991",
      "elapsedTime": "180193",
      "asyncId": 2184,
      "triggerAsyncId": 2179,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2190
      ],
      "uniqueid": 551
    },
    "552": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031176986164",
      "endTime": "7031178600809",
      "elapsedTime": "1614645",
      "asyncId": 2185,
      "triggerAsyncId": 2179,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 552
    },
    "553": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031178791891",
      "endTime": "7031178984303",
      "elapsedTime": "192412",
      "asyncId": 2192,
      "triggerAsyncId": 2191,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 553
    },
    "554": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031179595055",
      "endTime": "7031179674197",
      "elapsedTime": "79142",
      "asyncId": 2195,
      "triggerAsyncId": 2193,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 554
    },
    "555": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031180159841",
      "endTime": "7031180351389",
      "elapsedTime": "191548",
      "asyncId": 2197,
      "triggerAsyncId": 2196,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 555
    },
    "556": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031181056226",
      "endTime": "7031181145725",
      "elapsedTime": "89499",
      "asyncId": 2199,
      "triggerAsyncId": 2198,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 556
    },
    "557": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031181606591",
      "endTime": "7031181807166",
      "elapsedTime": "200575",
      "asyncId": 2201,
      "triggerAsyncId": 2200,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 557
    },
    "558": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031188710490",
      "endTime": "7031193097860",
      "elapsedTime": "4387370",
      "asyncId": 2238,
      "triggerAsyncId": 2237,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2245
      ],
      "uniqueid": 558
    },
    "559": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031188873813",
      "endTime": "7031192922885",
      "elapsedTime": "4049072",
      "asyncId": 2239,
      "triggerAsyncId": 2237,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2243
      ],
      "uniqueid": 559
    },
    "560": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031189280505",
      "endTime": "7031190481753",
      "elapsedTime": "1201248",
      "asyncId": 2242,
      "triggerAsyncId": 2240,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2248
      ],
      "uniqueid": 560
    },
    "561": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031189486186",
      "endTime": "7031193227777",
      "elapsedTime": "3741591",
      "asyncId": 2243,
      "triggerAsyncId": 2239,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 561
    },
    "562": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031189651828",
      "endTime": "7031197028640",
      "elapsedTime": "7376812",
      "asyncId": 2245,
      "triggerAsyncId": 2238,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2268,
        2269,
        2270,
        2271,
        2272
      ],
      "uniqueid": 562
    },
    "563": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031190305107",
      "endTime": "7031191075596",
      "elapsedTime": "770489",
      "asyncId": 2250,
      "triggerAsyncId": 2248,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2253
      ],
      "uniqueid": 563
    },
    "564": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031190998664",
      "endTime": "7031191814772",
      "elapsedTime": "816108",
      "asyncId": 2255,
      "triggerAsyncId": 2253,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2258
      ],
      "uniqueid": 564
    },
    "565": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031191638046",
      "endTime": "7031192548918",
      "elapsedTime": "910872",
      "asyncId": 2260,
      "triggerAsyncId": 2258,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2263
      ],
      "uniqueid": 565
    },
    "566": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031192470611",
      "endTime": "7031193017225",
      "elapsedTime": "546614",
      "asyncId": 2265,
      "triggerAsyncId": 2263,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 566
    },
    "567": {
      "source": "test.js:280:23:280:23",
      "startTime": "7031193848559",
      "endTime": "7031206955364",
      "elapsedTime": "13106805",
      "asyncId": 2269,
      "triggerAsyncId": 2245,
      "io": "",
      "userCode": false,
      "line": "\n  it('negated glob', async () => {\n    const expect = ['a.js', 'b.txt', 'c.js', 'e.rb'];\n    const res = await read({fileFilter: ['!d.js']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath)",
      "startLine": 280,
      "startCol": 23,
      "endLine": 280,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        2276
      ],
      "uniqueid": 567
    },
    "568": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031194079216",
      "endTime": "7031206848761",
      "elapsedTime": "12769545",
      "asyncId": 2270,
      "triggerAsyncId": 2245,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 568
    },
    "569": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031195741826",
      "endTime": "7031198037695",
      "elapsedTime": "2295869",
      "asyncId": 2271,
      "triggerAsyncId": 2245,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2281
      ],
      "uniqueid": 569
    },
    "570": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031196296557",
      "endTime": "7031198130435",
      "elapsedTime": "1833878",
      "asyncId": 2274,
      "triggerAsyncId": 2272,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 570
    },
    "571": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031196650410",
      "endTime": "7031207568455",
      "elapsedTime": "10918045",
      "asyncId": 2276,
      "triggerAsyncId": 2269,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 571
    },
    "572": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031197703916",
      "endTime": "7031201401375",
      "elapsedTime": "3697459",
      "asyncId": 2281,
      "triggerAsyncId": 2271,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2282,
        2283,
        2284,
        2285,
        2286,
        2287
      ],
      "uniqueid": 572
    },
    "573": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031198289128",
      "endTime": "7031198491158",
      "elapsedTime": "202030",
      "asyncId": 2282,
      "triggerAsyncId": 2281,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2288
      ],
      "uniqueid": 573
    },
    "574": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031198707423",
      "endTime": "7031198828185",
      "elapsedTime": "120762",
      "asyncId": 2283,
      "triggerAsyncId": 2281,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2289
      ],
      "uniqueid": 574
    },
    "575": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031198965148",
      "endTime": "7031199171394",
      "elapsedTime": "206246",
      "asyncId": 2284,
      "triggerAsyncId": 2281,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2290
      ],
      "uniqueid": 575
    },
    "576": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031199335794",
      "endTime": "7031199538780",
      "elapsedTime": "202986",
      "asyncId": 2285,
      "triggerAsyncId": 2281,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2291
      ],
      "uniqueid": 576
    },
    "577": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031199705626",
      "endTime": "7031199912891",
      "elapsedTime": "207265",
      "asyncId": 2286,
      "triggerAsyncId": 2281,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2292
      ],
      "uniqueid": 577
    },
    "578": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031200120661",
      "endTime": "7031202113975",
      "elapsedTime": "1993314",
      "asyncId": 2287,
      "triggerAsyncId": 2281,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 578
    },
    "579": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031202392786",
      "endTime": "7031202561131",
      "elapsedTime": "168345",
      "asyncId": 2294,
      "triggerAsyncId": 2293,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 579
    },
    "580": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031203313060",
      "endTime": "7031203506285",
      "elapsedTime": "193225",
      "asyncId": 2297,
      "triggerAsyncId": 2295,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 580
    },
    "581": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031204183715",
      "endTime": "7031204378499",
      "elapsedTime": "194784",
      "asyncId": 2299,
      "triggerAsyncId": 2298,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 581
    },
    "582": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031204990693",
      "endTime": "7031205187648",
      "elapsedTime": "196955",
      "asyncId": 2301,
      "triggerAsyncId": 2300,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 582
    },
    "583": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031205833935",
      "endTime": "7031206014617",
      "elapsedTime": "180682",
      "asyncId": 2303,
      "triggerAsyncId": 2302,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 583
    },
    "584": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031213326825",
      "endTime": "7031217939918",
      "elapsedTime": "4613093",
      "asyncId": 2340,
      "triggerAsyncId": 2339,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2347
      ],
      "uniqueid": 584
    },
    "585": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031213537380",
      "endTime": "7031217532260",
      "elapsedTime": "3994880",
      "asyncId": 2341,
      "triggerAsyncId": 2339,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2345
      ],
      "uniqueid": 585
    },
    "586": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031213941257",
      "endTime": "7031214940356",
      "elapsedTime": "999099",
      "asyncId": 2344,
      "triggerAsyncId": 2342,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2350
      ],
      "uniqueid": 586
    },
    "587": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031214091972",
      "endTime": "7031218197998",
      "elapsedTime": "4106026",
      "asyncId": 2345,
      "triggerAsyncId": 2341,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 587
    },
    "588": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031214306312",
      "endTime": "7031226677357",
      "elapsedTime": "12371045",
      "asyncId": 2347,
      "triggerAsyncId": 2340,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2370,
        2371,
        2372,
        2373,
        2374
      ],
      "uniqueid": 588
    },
    "589": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031214867622",
      "endTime": "7031215661093",
      "elapsedTime": "793471",
      "asyncId": 2352,
      "triggerAsyncId": 2350,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2355
      ],
      "uniqueid": 589
    },
    "590": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031215583370",
      "endTime": "7031216347678",
      "elapsedTime": "764308",
      "asyncId": 2357,
      "triggerAsyncId": 2355,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2360
      ],
      "uniqueid": 590
    },
    "591": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031216270964",
      "endTime": "7031217051632",
      "elapsedTime": "780668",
      "asyncId": 2362,
      "triggerAsyncId": 2360,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2365
      ],
      "uniqueid": 591
    },
    "592": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031216969189",
      "endTime": "7031217726526",
      "elapsedTime": "757337",
      "asyncId": 2367,
      "triggerAsyncId": 2365,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 592
    },
    "593": {
      "source": "test.js:288:23:288:23",
      "startTime": "7031219829343",
      "endTime": "7031237112894",
      "elapsedTime": "17283551",
      "asyncId": 2371,
      "triggerAsyncId": 2347,
      "io": "",
      "userCode": false,
      "line": "\n  it('glob & negated glob', async () => {\n    const expect = ['a.js', 'c.js'];\n    const res = await read({fileFilter: ['*.js', '!d.js']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath)",
      "startLine": 288,
      "startCol": 23,
      "endLine": 288,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        2378
      ],
      "uniqueid": 593
    },
    "594": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031220220566",
      "endTime": "7031236900831",
      "elapsedTime": "16680265",
      "asyncId": 2372,
      "triggerAsyncId": 2347,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 594
    },
    "595": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031222345432",
      "endTime": "7031227750604",
      "elapsedTime": "5405172",
      "asyncId": 2373,
      "triggerAsyncId": 2347,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2383
      ],
      "uniqueid": 595
    },
    "596": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031225767578",
      "endTime": "7031227844448",
      "elapsedTime": "2076870",
      "asyncId": 2376,
      "triggerAsyncId": 2374,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 596
    },
    "597": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031226274590",
      "endTime": "7031237748015",
      "elapsedTime": "11473425",
      "asyncId": 2378,
      "triggerAsyncId": 2371,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 597
    },
    "598": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031227402989",
      "endTime": "7031231164684",
      "elapsedTime": "3761695",
      "asyncId": 2383,
      "triggerAsyncId": 2373,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2384,
        2385,
        2386,
        2387,
        2388,
        2389
      ],
      "uniqueid": 598
    },
    "599": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031228016372",
      "endTime": "7031228223027",
      "elapsedTime": "206655",
      "asyncId": 2384,
      "triggerAsyncId": 2383,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2390
      ],
      "uniqueid": 599
    },
    "600": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031228390960",
      "endTime": "7031228564531",
      "elapsedTime": "173571",
      "asyncId": 2385,
      "triggerAsyncId": 2383,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2391
      ],
      "uniqueid": 600
    },
    "601": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031228732247",
      "endTime": "7031228932171",
      "elapsedTime": "199924",
      "asyncId": 2386,
      "triggerAsyncId": 2383,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2392
      ],
      "uniqueid": 601
    },
    "602": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031229157681",
      "endTime": "7031229279251",
      "elapsedTime": "121570",
      "asyncId": 2387,
      "triggerAsyncId": 2383,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2393
      ],
      "uniqueid": 602
    },
    "603": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031229417531",
      "endTime": "7031229618996",
      "elapsedTime": "201465",
      "asyncId": 2388,
      "triggerAsyncId": 2383,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2394
      ],
      "uniqueid": 603
    },
    "604": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031229789940",
      "endTime": "7031231844045",
      "elapsedTime": "2054105",
      "asyncId": 2389,
      "triggerAsyncId": 2383,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 604
    },
    "605": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031232075606",
      "endTime": "7031232244962",
      "elapsedTime": "169356",
      "asyncId": 2396,
      "triggerAsyncId": 2395,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 605
    },
    "606": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031232967311",
      "endTime": "7031233168453",
      "elapsedTime": "201142",
      "asyncId": 2399,
      "triggerAsyncId": 2397,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 606
    },
    "607": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031233741307",
      "endTime": "7031233914120",
      "elapsedTime": "172813",
      "asyncId": 2401,
      "triggerAsyncId": 2400,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 607
    },
    "608": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031234506394",
      "endTime": "7031234712383",
      "elapsedTime": "205989",
      "asyncId": 2403,
      "triggerAsyncId": 2402,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 608
    },
    "609": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031235317289",
      "endTime": "7031235513521",
      "elapsedTime": "196232",
      "asyncId": 2405,
      "triggerAsyncId": 2404,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 609
    },
    "610": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031243083776",
      "endTime": "7031248904943",
      "elapsedTime": "5821167",
      "asyncId": 2442,
      "triggerAsyncId": 2441,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2449
      ],
      "uniqueid": 610
    },
    "611": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031243260746",
      "endTime": "7031248727908",
      "elapsedTime": "5467162",
      "asyncId": 2443,
      "triggerAsyncId": 2441,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2447
      ],
      "uniqueid": 611
    },
    "612": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031245037820",
      "endTime": "7031246157776",
      "elapsedTime": "1119956",
      "asyncId": 2446,
      "triggerAsyncId": 2444,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2452
      ],
      "uniqueid": 612
    },
    "613": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031245198283",
      "endTime": "7031249005994",
      "elapsedTime": "3807711",
      "asyncId": 2447,
      "triggerAsyncId": 2443,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 613
    },
    "614": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031245402835",
      "endTime": "7031251354794",
      "elapsedTime": "5951959",
      "asyncId": 2449,
      "triggerAsyncId": 2442,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2472,
        2473,
        2474,
        2475,
        2476
      ],
      "uniqueid": 614
    },
    "615": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031246076032",
      "endTime": "7031246812935",
      "elapsedTime": "736903",
      "asyncId": 2454,
      "triggerAsyncId": 2452,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2457
      ],
      "uniqueid": 615
    },
    "616": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031246737840",
      "endTime": "7031247580732",
      "elapsedTime": "842892",
      "asyncId": 2459,
      "triggerAsyncId": 2457,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2462
      ],
      "uniqueid": 616
    },
    "617": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031247500124",
      "endTime": "7031248330433",
      "elapsedTime": "830309",
      "asyncId": 2464,
      "triggerAsyncId": 2462,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2467
      ],
      "uniqueid": 617
    },
    "618": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031248237257",
      "endTime": "7031248823688",
      "elapsedTime": "586431",
      "asyncId": 2469,
      "triggerAsyncId": 2467,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 618
    },
    "619": {
      "source": "test.js:296:23:296:23",
      "startTime": "7031249615803",
      "endTime": "7031259369293",
      "elapsedTime": "9753490",
      "asyncId": 2473,
      "triggerAsyncId": 2449,
      "io": "",
      "userCode": false,
      "line": "\n  it('two negated glob', async () => {\n    const expect = ['b.txt'];\n    const res = await read({fileFilter: ['!*.js', '!*.rb']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath)",
      "startLine": 296,
      "startCol": 23,
      "endLine": 296,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        2480
      ],
      "uniqueid": 619
    },
    "620": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031249848012",
      "endTime": "7031259217714",
      "elapsedTime": "9369702",
      "asyncId": 2474,
      "triggerAsyncId": 2449,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 620
    },
    "621": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031250186390",
      "endTime": "7031252399839",
      "elapsedTime": "2213449",
      "asyncId": 2475,
      "triggerAsyncId": 2449,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2485
      ],
      "uniqueid": 621
    },
    "622": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031250695022",
      "endTime": "7031252480561",
      "elapsedTime": "1785539",
      "asyncId": 2478,
      "triggerAsyncId": 2476,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 622
    },
    "623": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031251042450",
      "endTime": "7031259918300",
      "elapsedTime": "8875850",
      "asyncId": 2480,
      "triggerAsyncId": 2473,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 623
    },
    "624": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031252064495",
      "endTime": "7031255641904",
      "elapsedTime": "3577409",
      "asyncId": 2485,
      "triggerAsyncId": 2475,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2486,
        2487,
        2488,
        2489,
        2490,
        2491
      ],
      "uniqueid": 624
    },
    "625": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031252616147",
      "endTime": "7031252830353",
      "elapsedTime": "214206",
      "asyncId": 2486,
      "triggerAsyncId": 2485,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2492
      ],
      "uniqueid": 625
    },
    "626": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031253042546",
      "endTime": "7031253159916",
      "elapsedTime": "117370",
      "asyncId": 2487,
      "triggerAsyncId": 2485,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2493
      ],
      "uniqueid": 626
    },
    "627": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031253290590",
      "endTime": "7031253476066",
      "elapsedTime": "185476",
      "asyncId": 2488,
      "triggerAsyncId": 2485,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2494
      ],
      "uniqueid": 627
    },
    "628": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031253607076",
      "endTime": "7031253814624",
      "elapsedTime": "207548",
      "asyncId": 2489,
      "triggerAsyncId": 2485,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2495
      ],
      "uniqueid": 628
    },
    "629": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031254025485",
      "endTime": "7031254143693",
      "elapsedTime": "118208",
      "asyncId": 2490,
      "triggerAsyncId": 2485,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2496
      ],
      "uniqueid": 629
    },
    "630": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031254275079",
      "endTime": "7031256002419",
      "elapsedTime": "1727340",
      "asyncId": 2491,
      "triggerAsyncId": 2485,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 630
    },
    "631": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031256201196",
      "endTime": "7031256352310",
      "elapsedTime": "151114",
      "asyncId": 2498,
      "triggerAsyncId": 2497,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 631
    },
    "632": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031256742001",
      "endTime": "7031256829714",
      "elapsedTime": "87713",
      "asyncId": 2500,
      "triggerAsyncId": 2499,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 632
    },
    "633": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031257214499",
      "endTime": "7031257362765",
      "elapsedTime": "148266",
      "asyncId": 2503,
      "triggerAsyncId": 2501,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 633
    },
    "634": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031257719560",
      "endTime": "7031257880151",
      "elapsedTime": "160591",
      "asyncId": 2505,
      "triggerAsyncId": 2504,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 634
    },
    "635": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031258382950",
      "endTime": "7031258529002",
      "elapsedTime": "146052",
      "asyncId": 2507,
      "triggerAsyncId": 2506,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 635
    },
    "636": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031264807307",
      "endTime": "7031268975203",
      "elapsedTime": "4167896",
      "asyncId": 2544,
      "triggerAsyncId": 2543,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2551
      ],
      "uniqueid": 636
    },
    "637": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031265002715",
      "endTime": "7031268833533",
      "elapsedTime": "3830818",
      "asyncId": 2545,
      "triggerAsyncId": 2543,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2549
      ],
      "uniqueid": 637
    },
    "638": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031265369796",
      "endTime": "7031266345024",
      "elapsedTime": "975228",
      "asyncId": 2548,
      "triggerAsyncId": 2546,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2554
      ],
      "uniqueid": 638
    },
    "639": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031265549315",
      "endTime": "7031269042221",
      "elapsedTime": "3492906",
      "asyncId": 2549,
      "triggerAsyncId": 2545,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 639
    },
    "640": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031265694457",
      "endTime": "7031271303393",
      "elapsedTime": "5608936",
      "asyncId": 2551,
      "triggerAsyncId": 2544,
      "io": false,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2574,
        2575,
        2576,
        2577,
        2578
      ],
      "uniqueid": 640
    },
    "641": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031266270420",
      "endTime": "7031267120685",
      "elapsedTime": "850265",
      "asyncId": 2556,
      "triggerAsyncId": 2554,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2559
      ],
      "uniqueid": 641
    },
    "642": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031267034175",
      "endTime": "7031267811393",
      "elapsedTime": "777218",
      "asyncId": 2561,
      "triggerAsyncId": 2559,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2564
      ],
      "uniqueid": 642
    },
    "643": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031267715705",
      "endTime": "7031268534799",
      "elapsedTime": "819094",
      "asyncId": 2566,
      "triggerAsyncId": 2564,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2569
      ],
      "uniqueid": 643
    },
    "644": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031268321252",
      "endTime": "7031268903522",
      "elapsedTime": "582270",
      "asyncId": 2571,
      "triggerAsyncId": 2569,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 644
    },
    "645": {
      "source": "test.js:304:23:304:23",
      "startTime": "7031269574016",
      "endTime": "7031281502436",
      "elapsedTime": "11928420",
      "asyncId": 2575,
      "triggerAsyncId": 2551,
      "io": "",
      "userCode": false,
      "line": "\n  it('function', async () => {\n    const expect = ['a.js', 'c.js', 'd.js'];\n    const res = await read({fileFilter: (entry) => sysPath.extname(entry.fullPath) === '.js'});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath)",
      "startLine": 304,
      "startCol": 23,
      "endLine": 304,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        2582
      ],
      "uniqueid": 645
    },
    "646": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031269801474",
      "endTime": "7031281395195",
      "elapsedTime": "11593721",
      "asyncId": 2576,
      "triggerAsyncId": 2551,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 646
    },
    "647": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031270067943",
      "endTime": "7031272464499",
      "elapsedTime": "2396556",
      "asyncId": 2577,
      "triggerAsyncId": 2551,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2587
      ],
      "uniqueid": 647
    },
    "648": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031270580366",
      "endTime": "7031272592237",
      "elapsedTime": "2011871",
      "asyncId": 2580,
      "triggerAsyncId": 2578,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 648
    },
    "649": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031270955743",
      "endTime": "7031283216100",
      "elapsedTime": "12260357",
      "asyncId": 2582,
      "triggerAsyncId": 2575,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2613,
        2614,
        2615,
        2616
      ],
      "uniqueid": 649
    },
    "650": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031272002867",
      "endTime": "7031276157095",
      "elapsedTime": "4154228",
      "asyncId": 2587,
      "triggerAsyncId": 2577,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2588,
        2589,
        2590,
        2591,
        2592,
        2593
      ],
      "uniqueid": 650
    },
    "651": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031272926881",
      "endTime": "7031273080645",
      "elapsedTime": "153764",
      "asyncId": 2588,
      "triggerAsyncId": 2587,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2594
      ],
      "uniqueid": 651
    },
    "652": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031273285203",
      "endTime": "7031273491276",
      "elapsedTime": "206073",
      "asyncId": 2589,
      "triggerAsyncId": 2587,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2595
      ],
      "uniqueid": 652
    },
    "653": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031273742446",
      "endTime": "7031273849512",
      "elapsedTime": "107066",
      "asyncId": 2590,
      "triggerAsyncId": 2587,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2596
      ],
      "uniqueid": 653
    },
    "654": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031273987733",
      "endTime": "7031274166095",
      "elapsedTime": "178362",
      "asyncId": 2591,
      "triggerAsyncId": 2587,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2597
      ],
      "uniqueid": 654
    },
    "655": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031274326009",
      "endTime": "7031274503598",
      "elapsedTime": "177589",
      "asyncId": 2592,
      "triggerAsyncId": 2587,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2598
      ],
      "uniqueid": 655
    },
    "656": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031274679752",
      "endTime": "7031277020267",
      "elapsedTime": "2340515",
      "asyncId": 2593,
      "triggerAsyncId": 2587,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 656
    },
    "657": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031277315454",
      "endTime": "7031277525274",
      "elapsedTime": "209820",
      "asyncId": 2600,
      "triggerAsyncId": 2599,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 657
    },
    "658": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031278223215",
      "endTime": "7031278433784",
      "elapsedTime": "210569",
      "asyncId": 2603,
      "triggerAsyncId": 2601,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 658
    },
    "659": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031279075890",
      "endTime": "7031279240658",
      "elapsedTime": "164768",
      "asyncId": 2605,
      "triggerAsyncId": 2604,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 659
    },
    "660": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031279810965",
      "endTime": "7031280009540",
      "elapsedTime": "198575",
      "asyncId": 2607,
      "triggerAsyncId": 2606,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 660
    },
    "661": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031280557225",
      "endTime": "7031280724833",
      "elapsedTime": "167608",
      "asyncId": 2609,
      "triggerAsyncId": 2608,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 661
    },
    "662": {
      "source": "test.js:312:26:312:26",
      "startTime": "7031281953977",
      "endTime": "7031292146393",
      "elapsedTime": "10192416",
      "asyncId": 2613,
      "triggerAsyncId": 2582,
      "io": "",
      "userCode": false,
      "line": "\n    if (supportsDirent) {\n      const expect2 = ['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb'];\n      const res2 = await read({fileFilter: (entry) => entry.dirent.isFile() });\n      res2.should.have.lengthOf(expect2.length);\n      res2.forEach((entry, index) =>\n        entry.should.containSubset(formatEntry(expect2[index], currPath)",
      "startLine": 312,
      "startCol": 26,
      "endLine": 312,
      "endCol": 26,
      "file": "test.js",
      "triggers": [
        2620
      ],
      "uniqueid": 662
    },
    "663": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031282155194",
      "endTime": "7031291967833",
      "elapsedTime": "9812639",
      "asyncId": 2614,
      "triggerAsyncId": 2582,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [
        2621
      ],
      "uniqueid": 663
    },
    "664": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031282342714",
      "endTime": "7031284036422",
      "elapsedTime": "1693708",
      "asyncId": 2615,
      "triggerAsyncId": 2582,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2623
      ],
      "uniqueid": 664
    },
    "665": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031282786346",
      "endTime": "7031284113507",
      "elapsedTime": "1327161",
      "asyncId": 2618,
      "triggerAsyncId": 2616,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 665
    },
    "666": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031283722536",
      "endTime": "7031287161597",
      "elapsedTime": "3439061",
      "asyncId": 2623,
      "triggerAsyncId": 2615,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2624,
        2625,
        2626,
        2627,
        2628,
        2629
      ],
      "uniqueid": 666
    },
    "667": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031284255435",
      "endTime": "7031284418952",
      "elapsedTime": "163517",
      "asyncId": 2624,
      "triggerAsyncId": 2623,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2630
      ],
      "uniqueid": 667
    },
    "668": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031284586449",
      "endTime": "7031284806611",
      "elapsedTime": "220162",
      "asyncId": 2625,
      "triggerAsyncId": 2623,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2631
      ],
      "uniqueid": 668
    },
    "669": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031284966890",
      "endTime": "7031285147745",
      "elapsedTime": "180855",
      "asyncId": 2626,
      "triggerAsyncId": 2623,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2632
      ],
      "uniqueid": 669
    },
    "670": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031285344052",
      "endTime": "7031285477971",
      "elapsedTime": "133919",
      "asyncId": 2627,
      "triggerAsyncId": 2623,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2633
      ],
      "uniqueid": 670
    },
    "671": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031285635478",
      "endTime": "7031285812027",
      "elapsedTime": "176549",
      "asyncId": 2628,
      "triggerAsyncId": 2623,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2634
      ],
      "uniqueid": 671
    },
    "672": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031285977614",
      "endTime": "7031287546415",
      "elapsedTime": "1568801",
      "asyncId": 2629,
      "triggerAsyncId": 2623,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 672
    },
    "673": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031287819080",
      "endTime": "7031287995792",
      "elapsedTime": "176712",
      "asyncId": 2636,
      "triggerAsyncId": 2635,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 673
    },
    "674": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031289048455",
      "endTime": "7031289219261",
      "elapsedTime": "170806",
      "asyncId": 2639,
      "triggerAsyncId": 2637,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 674
    },
    "675": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031289866669",
      "endTime": "7031290045068",
      "elapsedTime": "178399",
      "asyncId": 2641,
      "triggerAsyncId": 2640,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 675
    },
    "676": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031290600065",
      "endTime": "7031290750011",
      "elapsedTime": "149946",
      "asyncId": 2643,
      "triggerAsyncId": 2642,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 676
    },
    "677": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031291124787",
      "endTime": "7031291309472",
      "elapsedTime": "184685",
      "asyncId": 2645,
      "triggerAsyncId": 2644,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 677
    },
    "678": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031297982864",
      "endTime": "7031302093066",
      "elapsedTime": "4110202",
      "asyncId": 2682,
      "triggerAsyncId": 2681,
      "io": true,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2689
      ],
      "uniqueid": 678
    },
    "679": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031298131265",
      "endTime": "7031301929094",
      "elapsedTime": "3797829",
      "asyncId": 2683,
      "triggerAsyncId": 2681,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2687
      ],
      "uniqueid": 679
    },
    "680": {
      "source": "test.js:239:11:239:11",
      "startTime": "7031298483909",
      "endTime": "7031299508689",
      "elapsedTime": "1024780",
      "asyncId": 2686,
      "triggerAsyncId": 2684,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 11,
      "endLine": 239,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2692
      ],
      "uniqueid": 680
    },
    "681": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031298660370",
      "endTime": "7031302157424",
      "elapsedTime": "3497054",
      "asyncId": 2687,
      "triggerAsyncId": 2683,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 681
    },
    "682": {
      "source": "node_modules/mocha/lib/runnable.js:377:14:377:14",
      "startTime": "7031298820300",
      "endTime": "7031305143629",
      "elapsedTime": "6323329",
      "asyncId": 2689,
      "triggerAsyncId": 2682,
      "io": true,
      "userCode": false,
      "line": "\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn abou",
      "startLine": 377,
      "startCol": 14,
      "endLine": 377,
      "endCol": 14,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2712,
        2713,
        2714,
        2715,
        2716
      ],
      "uniqueid": 682
    },
    "683": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031299397129",
      "endTime": "7031300215934",
      "elapsedTime": "818805",
      "asyncId": 2694,
      "triggerAsyncId": 2692,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2697
      ],
      "uniqueid": 683
    },
    "684": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031300139893",
      "endTime": "7031300923823",
      "elapsedTime": "783930",
      "asyncId": 2699,
      "triggerAsyncId": 2697,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2702
      ],
      "uniqueid": 684
    },
    "685": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031300846566",
      "endTime": "7031301575943",
      "elapsedTime": "729377",
      "asyncId": 2704,
      "triggerAsyncId": 2702,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [
        2707
      ],
      "uniqueid": 685
    },
    "686": {
      "source": "test.js:239:5:239:5",
      "startTime": "7031301505097",
      "endTime": "7031302020276",
      "elapsedTime": "515179",
      "asyncId": 2709,
      "triggerAsyncId": 2707,
      "io": "",
      "userCode": false,
      "line": "\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js']",
      "startLine": 239,
      "startCol": 5,
      "endLine": 239,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 686
    },
    "687": {
      "source": "test.js:321:23:321:23",
      "startTime": "7031303332361",
      "endTime": "7031317318358",
      "elapsedTime": "13985997",
      "asyncId": 2713,
      "triggerAsyncId": 2689,
      "io": true,
      "userCode": false,
      "line": "\n  it('function with stats', async () => {\n    const expect = ['a.js', 'c.js', 'd.js'];\n    const res = await read({alwaysStat: true, fileFilter: (entry) => sysPath.extname(entry.fullPath) === '.js'});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) => {\n      entry.should.containSubset(formatEntry(expect[index], currPath))",
      "startLine": 321,
      "startCol": 23,
      "endLine": 321,
      "endCol": 23,
      "file": "test.js",
      "triggers": [
        2720
      ],
      "uniqueid": 687
    },
    "688": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031303569154",
      "endTime": "7031317165639",
      "elapsedTime": "13596485",
      "asyncId": 2714,
      "triggerAsyncId": 2689,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 688
    },
    "689": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031303855231",
      "endTime": "7031306254613",
      "elapsedTime": "2399382",
      "asyncId": 2715,
      "triggerAsyncId": 2689,
      "io": true,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2725
      ],
      "uniqueid": 689
    },
    "690": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031304373437",
      "endTime": "7031306345043",
      "elapsedTime": "1971606",
      "asyncId": 2718,
      "triggerAsyncId": 2716,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 690
    },
    "691": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031304757860",
      "endTime": "7031319515721",
      "elapsedTime": "14757861",
      "asyncId": 2720,
      "triggerAsyncId": 2713,
      "io": true,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2766,
        2767,
        2768,
        2769
      ],
      "uniqueid": 691
    },
    "692": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031305930465",
      "endTime": "7031310341603",
      "elapsedTime": "4411138",
      "asyncId": 2725,
      "triggerAsyncId": 2715,
      "io": true,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2726,
        2727,
        2730,
        2731,
        2734,
        2735,
        2738,
        2739,
        2742,
        2743,
        2746
      ],
      "uniqueid": 692
    },
    "693": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031306512232",
      "endTime": "7031310565060",
      "elapsedTime": "4052828",
      "asyncId": 2726,
      "triggerAsyncId": 2725,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2747
      ],
      "uniqueid": 693
    },
    "694": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031306898759",
      "endTime": "7031310657243",
      "elapsedTime": "3758484",
      "asyncId": 2729,
      "triggerAsyncId": 2727,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 694
    },
    "695": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031307033776",
      "endTime": "7031310975245",
      "elapsedTime": "3941469",
      "asyncId": 2730,
      "triggerAsyncId": 2725,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2748
      ],
      "uniqueid": 695
    },
    "696": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031307395082",
      "endTime": "7031311072415",
      "elapsedTime": "3677333",
      "asyncId": 2733,
      "triggerAsyncId": 2731,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 696
    },
    "697": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031307513083",
      "endTime": "7031311377847",
      "elapsedTime": "3864764",
      "asyncId": 2734,
      "triggerAsyncId": 2725,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2749
      ],
      "uniqueid": 697
    },
    "698": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031307863424",
      "endTime": "7031311466708",
      "elapsedTime": "3603284",
      "asyncId": 2737,
      "triggerAsyncId": 2735,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 698
    },
    "699": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031308074948",
      "endTime": "7031311775411",
      "elapsedTime": "3700463",
      "asyncId": 2738,
      "triggerAsyncId": 2725,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2750
      ],
      "uniqueid": 699
    },
    "700": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031308474769",
      "endTime": "7031311889066",
      "elapsedTime": "3414297",
      "asyncId": 2741,
      "triggerAsyncId": 2739,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 700
    },
    "701": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031308596288",
      "endTime": "7031312193470",
      "elapsedTime": "3597182",
      "asyncId": 2742,
      "triggerAsyncId": 2725,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2751
      ],
      "uniqueid": 701
    },
    "702": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031308940594",
      "endTime": "7031312290825",
      "elapsedTime": "3350231",
      "asyncId": 2745,
      "triggerAsyncId": 2743,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 702
    },
    "703": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031309113973",
      "endTime": "7031312373434",
      "elapsedTime": "3259461",
      "asyncId": 2746,
      "triggerAsyncId": 2725,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 703
    },
    "704": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031312643661",
      "endTime": "7031312858075",
      "elapsedTime": "214414",
      "asyncId": 2753,
      "triggerAsyncId": 2752,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 704
    },
    "705": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031313532093",
      "endTime": "7031313744982",
      "elapsedTime": "212889",
      "asyncId": 2756,
      "triggerAsyncId": 2754,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 705
    },
    "706": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031314332246",
      "endTime": "7031314535572",
      "elapsedTime": "203326",
      "asyncId": 2758,
      "triggerAsyncId": 2757,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 706
    },
    "707": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031315190076",
      "endTime": "7031315334536",
      "elapsedTime": "144460",
      "asyncId": 2760,
      "triggerAsyncId": 2759,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 707
    },
    "708": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031315917113",
      "endTime": "7031316117210",
      "elapsedTime": "200097",
      "asyncId": 2762,
      "triggerAsyncId": 2761,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 708
    },
    "709": {
      "source": "test.js:329:24:329:24",
      "startTime": "7031318107891",
      "endTime": "7031331149066",
      "elapsedTime": "13041175",
      "asyncId": 2766,
      "triggerAsyncId": 2720,
      "io": "",
      "userCode": false,
      "line": "\n\n    const expect2 = ['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb'];\n    const res2 = await read({alwaysStat: true, fileFilter: (entry) => entry.stats.size > 0 });\n    res2.should.have.lengthOf(expect2.length);\n    res2.forEach((entry, index) => {\n      entry.should.containSubset(formatEntry(expect2[index], currPath))",
      "startLine": 329,
      "startCol": 24,
      "endLine": 329,
      "endCol": 24,
      "file": "test.js",
      "triggers": [
        2773
      ],
      "uniqueid": 709
    },
    "710": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031318317789",
      "endTime": "7031331054575",
      "elapsedTime": "12736786",
      "asyncId": 2767,
      "triggerAsyncId": 2720,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [
        2774
      ],
      "uniqueid": 710
    },
    "711": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031318590526",
      "endTime": "7031320206769",
      "elapsedTime": "1616243",
      "asyncId": 2768,
      "triggerAsyncId": 2720,
      "io": true,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2776
      ],
      "uniqueid": 711
    },
    "712": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031319050663",
      "endTime": "7031320311757",
      "elapsedTime": "1261094",
      "asyncId": 2771,
      "triggerAsyncId": 2769,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 712
    },
    "713": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031319961072",
      "endTime": "7031324374961",
      "elapsedTime": "4413889",
      "asyncId": 2776,
      "triggerAsyncId": 2768,
      "io": true,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2777,
        2778,
        2781,
        2782,
        2785,
        2786,
        2789,
        2790,
        2793,
        2794,
        2797
      ],
      "uniqueid": 713
    },
    "714": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031320533083",
      "endTime": "7031324692100",
      "elapsedTime": "4159017",
      "asyncId": 2777,
      "triggerAsyncId": 2776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2798
      ],
      "uniqueid": 714
    },
    "715": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031320859455",
      "endTime": "7031324775028",
      "elapsedTime": "3915573",
      "asyncId": 2780,
      "triggerAsyncId": 2778,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 715
    },
    "716": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031321130022",
      "endTime": "7031325225559",
      "elapsedTime": "4095537",
      "asyncId": 2781,
      "triggerAsyncId": 2776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2799
      ],
      "uniqueid": 716
    },
    "717": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031321484984",
      "endTime": "7031325312207",
      "elapsedTime": "3827223",
      "asyncId": 2784,
      "triggerAsyncId": 2782,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 717
    },
    "718": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031321664383",
      "endTime": "7031325558875",
      "elapsedTime": "3894492",
      "asyncId": 2785,
      "triggerAsyncId": 2776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2800
      ],
      "uniqueid": 718
    },
    "719": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031321970569",
      "endTime": "7031325634738",
      "elapsedTime": "3664169",
      "asyncId": 2788,
      "triggerAsyncId": 2786,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 719
    },
    "720": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031322174940",
      "endTime": "7031325857227",
      "elapsedTime": "3682287",
      "asyncId": 2789,
      "triggerAsyncId": 2776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2801
      ],
      "uniqueid": 720
    },
    "721": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031322539280",
      "endTime": "7031325923603",
      "elapsedTime": "3384323",
      "asyncId": 2792,
      "triggerAsyncId": 2790,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 721
    },
    "722": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031322658367",
      "endTime": "7031326140429",
      "elapsedTime": "3482062",
      "asyncId": 2793,
      "triggerAsyncId": 2776,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2802
      ],
      "uniqueid": 722
    },
    "723": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031323024965",
      "endTime": "7031326206582",
      "elapsedTime": "3181617",
      "asyncId": 2796,
      "triggerAsyncId": 2794,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 723
    },
    "724": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031323207499",
      "endTime": "7031326275071",
      "elapsedTime": "3067572",
      "asyncId": 2797,
      "triggerAsyncId": 2776,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 724
    },
    "725": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031326483935",
      "endTime": "7031326650492",
      "elapsedTime": "166557",
      "asyncId": 2804,
      "triggerAsyncId": 2803,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 725
    },
    "726": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031327523257",
      "endTime": "7031327895019",
      "elapsedTime": "371762",
      "asyncId": 2807,
      "triggerAsyncId": 2805,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 726
    },
    "727": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031328725772",
      "endTime": "7031328904122",
      "elapsedTime": "178350",
      "asyncId": 2809,
      "triggerAsyncId": 2808,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 727
    },
    "728": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031329350468",
      "endTime": "7031329534795",
      "elapsedTime": "184327",
      "asyncId": 2811,
      "triggerAsyncId": 2810,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 728
    },
    "729": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031330054059",
      "endTime": "7031330253826",
      "elapsedTime": "199767",
      "asyncId": 2813,
      "triggerAsyncId": 2812,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 729
    },
    "730": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031340899583",
      "endTime": "7031342168965",
      "elapsedTime": "1269382",
      "asyncId": 2853,
      "triggerAsyncId": 2852,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 730
    },
    "731": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031341394634",
      "endTime": "7031342260975",
      "elapsedTime": "866341",
      "asyncId": 2856,
      "triggerAsyncId": 2854,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 731
    },
    "732": {
      "source": "test.js:363:11:363:11",
      "startTime": "7031355207271",
      "endTime": "7031357557044",
      "elapsedTime": "2349773",
      "asyncId": 2924,
      "triggerAsyncId": 2922,
      "io": "",
      "userCode": false,
      "line": "\n  it('exposes promise API', async () => {\n    const created = ['a.txt', 'c.txt'];\n    await touch(created);\n    const result = await readdirp.promise(currPath);\n    result.should.have.lengthOf(created.length);\n    result.forEach((entry, index) =",
      "startLine": 363,
      "startCol": 11,
      "endLine": 363,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2928
      ],
      "uniqueid": 732
    },
    "733": {
      "source": "test.js:363:11:363:11",
      "startTime": "7031355662779",
      "endTime": "7031357193928",
      "elapsedTime": "1531149",
      "asyncId": 2927,
      "triggerAsyncId": 2925,
      "io": "",
      "userCode": false,
      "line": "\n  it('exposes promise API', async () => {\n    const created = ['a.txt', 'c.txt'];\n    await touch(created);\n    const result = await readdirp.promise(currPath);\n    result.should.have.lengthOf(created.length);\n    result.forEach((entry, index) =",
      "startLine": 363,
      "startCol": 11,
      "endLine": 363,
      "endCol": 11,
      "file": "test.js",
      "triggers": [
        2933
      ],
      "uniqueid": 733
    },
    "734": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031356112357",
      "endTime": "7031358908874",
      "elapsedTime": "2796517",
      "asyncId": 2928,
      "triggerAsyncId": 2924,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2938,
        2939,
        2940
      ],
      "uniqueid": 734
    },
    "735": {
      "source": "test.js:363:5:363:5",
      "startTime": "7031357115336",
      "endTime": "7031357670059",
      "elapsedTime": "554723",
      "asyncId": 2935,
      "triggerAsyncId": 2933,
      "io": "",
      "userCode": false,
      "line": "\n  it('exposes promise API', async () => {\n    const created = ['a.txt', 'c.txt'];\n    await touch(created);\n    const result = await readdirp.promise(currPath);\n    result.should.have.lengthOf(created.length);\n    result.forEach((entry, index) =",
      "startLine": 363,
      "startCol": 5,
      "endLine": 363,
      "endCol": 5,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 735
    },
    "736": {
      "source": "index.js:275:10:275:10",
      "startTime": "7031357830930",
      "endTime": "7031363260203",
      "elapsedTime": "5429273",
      "asyncId": 2938,
      "triggerAsyncId": 2928,
      "io": false,
      "userCode": false,
      "line": "\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry)",
      "startLine": 275,
      "startCol": 10,
      "endLine": 275,
      "endCol": 10,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 736
    },
    "737": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031358084541",
      "endTime": "7031359615482",
      "elapsedTime": "1530941",
      "asyncId": 2939,
      "triggerAsyncId": 2928,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        2946
      ],
      "uniqueid": 737
    },
    "738": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031358471171",
      "endTime": "7031359706276",
      "elapsedTime": "1235105",
      "asyncId": 2942,
      "triggerAsyncId": 2940,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 738
    },
    "739": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7031359280074",
      "endTime": "7031361266458",
      "elapsedTime": "1986384",
      "asyncId": 2946,
      "triggerAsyncId": 2939,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2947,
        2948,
        2949
      ],
      "uniqueid": 739
    },
    "740": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031359857955",
      "endTime": "7031360071371",
      "elapsedTime": "213416",
      "asyncId": 2947,
      "triggerAsyncId": 2946,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2950
      ],
      "uniqueid": 740
    },
    "741": {
      "source": "index.js:127:67:127:67",
      "startTime": "7031360224786",
      "endTime": "7031360432027",
      "elapsedTime": "207241",
      "asyncId": 2948,
      "triggerAsyncId": 2946,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        2951
      ],
      "uniqueid": 741
    },
    "742": {
      "source": "index.js:128:45:128:45",
      "startTime": "7031360578298",
      "endTime": "7031361410807",
      "elapsedTime": "832509",
      "asyncId": 2949,
      "triggerAsyncId": 2946,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 742
    },
    "743": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031361605819",
      "endTime": "7031361808326",
      "elapsedTime": "202507",
      "asyncId": 2953,
      "triggerAsyncId": 2952,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 743
    },
    "744": {
      "source": "index.js:132:42:132:42",
      "startTime": "7031362383715",
      "endTime": "7031362581946",
      "elapsedTime": "198231",
      "asyncId": 2956,
      "triggerAsyncId": 2954,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 744
    },
    "745": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031369292754",
      "endTime": "7031370700243",
      "elapsedTime": "1407489",
      "asyncId": 2988,
      "triggerAsyncId": 2986,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        3010
      ],
      "uniqueid": 745
    },
    "746": {
      "source": "index.js:113:26:113:26",
      "startTime": "7031369765451",
      "endTime": "7031370767235",
      "elapsedTime": "1001784",
      "asyncId": 2991,
      "triggerAsyncId": 2989,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 746
    },
    "747": {
      "source": "test.js:50:21:50:21",
      "startTime": "7031370009228",
      "endTime": "7032374027120",
      "elapsedTime": "1004017892",
      "asyncId": 2992,
      "triggerAsyncId": 2986,
      "io": false,
      "userCode": false,
      "line": "\n};\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst waitForEnd = stream => new Promise(resolve => stream.on('end', resolve));",
      "startLine": 50,
      "startCol": 21,
      "endLine": 50,
      "endCol": 21,
      "file": "test.js",
      "triggers": [
        2994
      ],
      "uniqueid": 747
    },
    "748": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7031370207924",
      "endTime": "7032379911442",
      "elapsedTime": "1009703518",
      "asyncId": 2994,
      "triggerAsyncId": 2992,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [
        2997
      ],
      "uniqueid": 748
    },
    "749": {
      "source": "test.js:52:30:52:30",
      "startTime": "7032380386214",
      "endTime": "7032392228380",
      "elapsedTime": "11842166",
      "asyncId": 3002,
      "triggerAsyncId": 2999,
      "io": false,
      "userCode": false,
      "line": "\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst waitForEnd = stream => new Promise(resolve => stream.on('end', resolve));\n\nbeforeEach(async () => {\n  testCount++",
      "startLine": 52,
      "startCol": 30,
      "endLine": 52,
      "endCol": 30,
      "file": "test.js",
      "triggers": [
        3006
      ],
      "uniqueid": 749
    },
    "750": {
      "source": "test.js:391:19:391:19",
      "startTime": "7032380736058",
      "endTime": "7032392325768",
      "elapsedTime": "11589710",
      "asyncId": 3005,
      "triggerAsyncId": 2999,
      "io": "",
      "userCode": false,
      "line": "\n    await pRimraf(sysPath.join(currPath, 'a'));\n    stream.resume();\n    await Promise.race([\n      waitForEnd(stream),\n      delay(2000)\n    ])",
      "startLine": 391,
      "startCol": 19,
      "endLine": 391,
      "endCol": 19,
      "file": "test.js",
      "triggers": [],
      "uniqueid": 750
    },
    "751": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7032381597802",
      "endTime": "7032382644444",
      "elapsedTime": "1046642",
      "asyncId": 3010,
      "triggerAsyncId": 2988,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3011,
        3012
      ],
      "uniqueid": 751
    },
    "752": {
      "source": "index.js:127:67:127:67",
      "startTime": "7032381778250",
      "endTime": "7032381976987",
      "elapsedTime": "198737",
      "asyncId": 3011,
      "triggerAsyncId": 3010,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        3013
      ],
      "uniqueid": 752
    },
    "753": {
      "source": "index.js:128:45:128:45",
      "startTime": "7032382127678",
      "endTime": "7032382736912",
      "elapsedTime": "609234",
      "asyncId": 3012,
      "triggerAsyncId": 3010,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [
        3014
      ],
      "uniqueid": 753
    },
    "754": {
      "source": "index.js:132:42:132:42",
      "startTime": "7032382944371",
      "endTime": "7032383136553",
      "elapsedTime": "192182",
      "asyncId": 3015,
      "triggerAsyncId": 3014,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [
        3016
      ],
      "uniqueid": 754
    },
    "755": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032383626210",
      "endTime": "7032390399393",
      "elapsedTime": "6773183",
      "asyncId": 3017,
      "triggerAsyncId": 3016,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 755
    },
    "756": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032383967294",
      "endTime": "7032390597036",
      "elapsedTime": "6629742",
      "asyncId": 3020,
      "triggerAsyncId": 3018,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 756
    },
    "757": {
      "source": "index.js:127:67:127:67",
      "startTime": "7032384604828",
      "endTime": "7032384698078",
      "elapsedTime": "93250",
      "asyncId": 3023,
      "triggerAsyncId": 3021,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        3025
      ],
      "uniqueid": 757
    },
    "758": {
      "source": "index.js:128:45:128:45",
      "startTime": "7032384901828",
      "endTime": "7032385339213",
      "elapsedTime": "437385",
      "asyncId": 3024,
      "triggerAsyncId": 3021,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [
        3026
      ],
      "uniqueid": 758
    },
    "759": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7032385251557",
      "endTime": "7032386232689",
      "elapsedTime": "981132",
      "asyncId": 3026,
      "triggerAsyncId": 3024,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3027
      ],
      "uniqueid": 759
    },
    "760": {
      "source": "index.js:132:42:132:42",
      "startTime": "7032385686203",
      "endTime": "7032385881597",
      "elapsedTime": "195394",
      "asyncId": 3027,
      "triggerAsyncId": 3026,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [
        3028
      ],
      "uniqueid": 760
    },
    "761": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032386392028",
      "endTime": "7032390796814",
      "elapsedTime": "4404786",
      "asyncId": 3029,
      "triggerAsyncId": 3028,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 761
    },
    "762": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032386760649",
      "endTime": "7032390890328",
      "elapsedTime": "4129679",
      "asyncId": 3032,
      "triggerAsyncId": 3030,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 762
    },
    "763": {
      "source": "index.js:127:67:127:67",
      "startTime": "7032387439132",
      "endTime": "7032387538919",
      "elapsedTime": "99787",
      "asyncId": 3035,
      "triggerAsyncId": 3033,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        3037
      ],
      "uniqueid": 763
    },
    "764": {
      "source": "index.js:128:45:128:45",
      "startTime": "7032387675500",
      "endTime": "7032388177379",
      "elapsedTime": "501879",
      "asyncId": 3036,
      "triggerAsyncId": 3033,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [
        3038
      ],
      "uniqueid": 764
    },
    "765": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7032388003152",
      "endTime": "7032388925010",
      "elapsedTime": "921858",
      "asyncId": 3038,
      "triggerAsyncId": 3036,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3039
      ],
      "uniqueid": 765
    },
    "766": {
      "source": "index.js:132:42:132:42",
      "startTime": "7032388410461",
      "endTime": "7032388602739",
      "elapsedTime": "192278",
      "asyncId": 3039,
      "triggerAsyncId": 3038,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [
        3040
      ],
      "uniqueid": 766
    },
    "767": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032389052252",
      "endTime": "7032391064034",
      "elapsedTime": "2011782",
      "asyncId": 3041,
      "triggerAsyncId": 3040,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [
        3047
      ],
      "uniqueid": 767
    },
    "768": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032389395077",
      "endTime": "7032391135433",
      "elapsedTime": "1740356",
      "asyncId": 3044,
      "triggerAsyncId": 3042,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 768
    },
    "769": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7032389969840",
      "endTime": "7032391535435",
      "elapsedTime": "1565595",
      "asyncId": 3047,
      "triggerAsyncId": 3041,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 769
    },
    "770": {
      "source": "index.js:113:26:113:26",
      "startTime": "7032397291566",
      "endTime": "7032399664484",
      "elapsedTime": "2372918",
      "asyncId": 3080,
      "triggerAsyncId": 3078,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        3095
      ],
      "uniqueid": 770
    },
    "771": {
      "source": "index.js:113:26:113:26",
      "startTime": "7032397731986",
      "endTime": "7032399732832",
      "elapsedTime": "2000846",
      "asyncId": 3083,
      "triggerAsyncId": 3081,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 771
    },
    "772": {
      "source": "test.js:52:30:52:30",
      "startTime": "7032397948852",
      "endTime": "7032403081719",
      "elapsedTime": "5132867",
      "asyncId": 3085,
      "triggerAsyncId": 3078,
      "io": false,
      "userCode": false,
      "line": "\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst waitForEnd = stream => new Promise(resolve => stream.on('end', resolve));\n\nbeforeEach(async () => {\n  testCount++",
      "startLine": 52,
      "startCol": 30,
      "endLine": 52,
      "endCol": 30,
      "file": "test.js",
      "triggers": [
        3089
      ],
      "uniqueid": 772
    },
    "773": {
      "source": "test.js:412:19:412:19",
      "startTime": "7032398357480",
      "endTime": "7032403175441",
      "elapsedTime": "4817961",
      "asyncId": 3088,
      "triggerAsyncId": 3078,
      "io": "",
      "userCode": false,
      "line": "\n        isWarningCalled = true;\n      });\n    await Promise.race([\n      waitForEnd(stream),\n      delay(2000)\n    ])",
      "startLine": 412,
      "startCol": 19,
      "endLine": 412,
      "endCol": 19,
      "file": "test.js",
      "triggers": [
        3091
      ],
      "uniqueid": 773
    },
    "774": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7032398950473",
      "endTime": "7032403613207",
      "elapsedTime": "4662734",
      "asyncId": 3091,
      "triggerAsyncId": 3088,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 774
    },
    "775": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7032399412255",
      "endTime": "7032400703789",
      "elapsedTime": "1291534",
      "asyncId": 3095,
      "triggerAsyncId": 3080,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3096,
        3097
      ],
      "uniqueid": 775
    },
    "776": {
      "source": "index.js:127:67:127:67",
      "startTime": "7032399859661",
      "endTime": "7032400025569",
      "elapsedTime": "165908",
      "asyncId": 3096,
      "triggerAsyncId": 3095,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        3098
      ],
      "uniqueid": 776
    },
    "777": {
      "source": "index.js:128:45:128:45",
      "startTime": "7032400135297",
      "endTime": "7032400773110",
      "elapsedTime": "637813",
      "asyncId": 3097,
      "triggerAsyncId": 3095,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 777
    },
    "778": {
      "source": "index.js:132:42:132:42",
      "startTime": "7032400951053",
      "endTime": "7032401021659",
      "elapsedTime": "70606",
      "asyncId": 3100,
      "triggerAsyncId": 3099,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 778
    },
    "779": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032401366963",
      "endTime": "7032402674878",
      "elapsedTime": "1307915",
      "asyncId": 3102,
      "triggerAsyncId": 3101,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 779
    },
    "780": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032401718519",
      "endTime": "7032402833320",
      "elapsedTime": "1114801",
      "asyncId": 3105,
      "triggerAsyncId": 3103,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 780
    },
    "781": {
      "source": "index.js:113:26:113:26",
      "startTime": "7032409064031",
      "endTime": "7032411817635",
      "elapsedTime": "2753604",
      "asyncId": 3137,
      "triggerAsyncId": 3135,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [
        3152
      ],
      "uniqueid": 781
    },
    "782": {
      "source": "index.js:113:26:113:26",
      "startTime": "7032409540036",
      "endTime": "7032412028626",
      "elapsedTime": "2488590",
      "asyncId": 3140,
      "triggerAsyncId": 3138,
      "io": false,
      "userCode": false,
      "line": "\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  ",
      "startLine": 113,
      "startCol": 26,
      "endLine": 113,
      "endCol": 26,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 782
    },
    "783": {
      "source": "test.js:52:30:52:30",
      "startTime": "7032409822302",
      "endTime": "7032419492042",
      "elapsedTime": "9669740",
      "asyncId": 3142,
      "triggerAsyncId": 3135,
      "io": false,
      "userCode": false,
      "line": "\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst waitForEnd = stream => new Promise(resolve => stream.on('end', resolve));\n\nbeforeEach(async () => {\n  testCount++",
      "startLine": 52,
      "startCol": 30,
      "endLine": 52,
      "endCol": 30,
      "file": "test.js",
      "triggers": [
        3146
      ],
      "uniqueid": 783
    },
    "784": {
      "source": "test.js:443:19:443:19",
      "startTime": "7032410347745",
      "endTime": "7032419677753",
      "elapsedTime": "9330008",
      "asyncId": 3145,
      "triggerAsyncId": 3135,
      "io": "",
      "userCode": false,
      "line": "\n        isEnded = true;\n      });\n    await Promise.race([\n      waitForEnd(stream),\n      delay(2000)\n    ])",
      "startLine": 443,
      "startCol": 19,
      "endLine": 443,
      "endCol": 19,
      "file": "test.js",
      "triggers": [
        3148
      ],
      "uniqueid": 784
    },
    "785": {
      "source": "node_modules/mocha/lib/runnable.js:374:21:374:21",
      "startTime": "7032410964463",
      "endTime": "7032419951378",
      "elapsedTime": "8986915",
      "asyncId": 3148,
      "triggerAsyncId": 3145,
      "io": false,
      "userCode": false,
      "line": "\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then",
      "startLine": 374,
      "startCol": 21,
      "endLine": 374,
      "endCol": 21,
      "file": "node_modules/mocha/lib/runnable.js",
      "triggers": [],
      "uniqueid": 785
    },
    "786": {
      "source": "(_stream_readable.js:474:10:474:10)",
      "startTime": "7032411511874",
      "endTime": "7032413171044",
      "elapsedTime": "1659170",
      "asyncId": 3152,
      "triggerAsyncId": 3137,
      "io": false,
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3153,
        3154
      ],
      "uniqueid": 786
    },
    "787": {
      "source": "index.js:127:67:127:67",
      "startTime": "7032412241644",
      "endTime": "7032412373288",
      "elapsedTime": "131644",
      "asyncId": 3153,
      "triggerAsyncId": 3152,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        3155
      ],
      "uniqueid": 787
    },
    "788": {
      "source": "index.js:128:45:128:45",
      "startTime": "7032412518139",
      "endTime": "7032413249456",
      "elapsedTime": "731317",
      "asyncId": 3154,
      "triggerAsyncId": 3152,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 788
    },
    "789": {
      "source": "index.js:132:42:132:42",
      "startTime": "7032413516941",
      "endTime": "7032413698060",
      "elapsedTime": "181119",
      "asyncId": 3157,
      "triggerAsyncId": 3156,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 789
    },
    "790": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032414147639",
      "endTime": "7032415422731",
      "elapsedTime": "1275092",
      "asyncId": 3159,
      "triggerAsyncId": 3158,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 790
    },
    "791": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032414532629",
      "endTime": "7032415494184",
      "elapsedTime": "961555",
      "asyncId": 3162,
      "triggerAsyncId": 3160,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 791
    },
    "792": {
      "source": "index.js:127:67:127:67",
      "startTime": "7032415627915",
      "endTime": "7032415802607",
      "elapsedTime": "174692",
      "asyncId": 3166,
      "triggerAsyncId": 3164,
      "io": "",
      "userCode": false,
      "line": "\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return",
      "startLine": 127,
      "startCol": 67,
      "endLine": 127,
      "endCol": 67,
      "file": "index.js",
      "triggers": [
        3168
      ],
      "uniqueid": 792
    },
    "793": {
      "source": "index.js:128:45:128:45",
      "startTime": "7032415923323",
      "endTime": "7032416582466",
      "elapsedTime": "659143",
      "asyncId": 3167,
      "triggerAsyncId": 3164,
      "io": false,
      "userCode": false,
      "line": "\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;",
      "startLine": 128,
      "startCol": 45,
      "endLine": 128,
      "endCol": 45,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 793
    },
    "794": {
      "source": "index.js:132:42:132:42",
      "startTime": "7032416856244",
      "endTime": "7032417017109",
      "elapsedTime": "160865",
      "asyncId": 3170,
      "triggerAsyncId": 3169,
      "io": false,
      "userCode": false,
      "line": "\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1))",
      "startLine": 132,
      "startCol": 42,
      "endLine": 132,
      "endCol": 42,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 794
    },
    "795": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032417552160",
      "endTime": "7032418884632",
      "elapsedTime": "1332472",
      "asyncId": 3172,
      "triggerAsyncId": 3171,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 795
    },
    "796": {
      "source": "index.js:135:40:135:40",
      "startTime": "7032417872165",
      "endTime": "7032419071949",
      "elapsedTime": "1199784",
      "asyncId": 3175,
      "triggerAsyncId": 3173,
      "io": false,
      "userCode": false,
      "line": "\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) ",
      "startLine": 135,
      "startCol": 40,
      "endLine": 135,
      "endCol": 40,
      "file": "index.js",
      "triggers": [],
      "uniqueid": 796
    }
  },
  "files": {
    "test.js": "/* eslint-env mocha */\n\n'use strict';\n\nconst fs = require('fs');\nconst sysPath = require('path');\nconst {Readable} = require('stream');\nconst {promisify} = require('util');\nconst chai = require('chai');\nconst chaiSubset = require('chai-subset');\nconst rimraf = require('rimraf');\nconst readdirp = require('.');\n\nchai.use(chaiSubset);\nchai.should();\n\nconst pRimraf = promisify(rimraf);\nconst mkdir = promisify(fs.mkdir);\nconst symlink = promisify(fs.symlink);\nconst readdir = promisify(fs.readdir);\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\n\nconst supportsDirent = 'Dirent' in fs;\nconst isWindows = process.platform === 'win32';\nconst root = sysPath.join(__dirname, 'test-fixtures');\n\nlet testCount = 0;\nlet currPath;\n\nconst read = async (options) => readdirp.promise(currPath, options);\n\nconst touch = async (files = [], dirs = []) => {\n  for (const name of files) {\n    await writeFile(sysPath.join(currPath, name), `${Date.now()}`);\n  }\n  for (const dir of dirs) {\n    await mkdir(sysPath.join(currPath, dir));\n  }\n};\n\nconst formatEntry = (file, dir = root) => {\n  return {\n    basename: sysPath.basename(file),\n    path: sysPath.normalize(file),\n    fullPath: sysPath.join(dir, file)\n  };\n};\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst waitForEnd = stream => new Promise(resolve => stream.on('end', resolve));\n\nbeforeEach(async () => {\n  testCount++;\n  currPath = sysPath.join(root, testCount.toString());\n  await pRimraf(currPath);\n  await mkdir(currPath);\n});\n\nafterEach(async () => {\n  await pRimraf(currPath);\n});\n\nbefore(async () => {\n  await pRimraf(root);\n  await mkdir(root);\n});\nafter(async () => {\n  await pRimraf(root);\n});\n\ndescribe('basic', () => {\n  it('reads directory', async () => {\n    const files = ['a.txt', 'b.txt', 'c.txt'];\n    await touch(files);\n    const res = await read();\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(files[index], currPath))\n    );\n  });\n});\n\ndescribe('symlinks', () => {\n  // not using arrow function, because this.skip\n  before(function() {\n    // GitHub Actions / default Windows installation disable symlink support unless admin\n    if (isWindows) this.skip();\n  });\n\n  it('handles symlinks', async () => {\n    const newPath = sysPath.join(currPath, 'test-symlinked.js');\n    await symlink(sysPath.join(__dirname, 'test.js'), newPath);\n    const res = await read();\n    const first = res[0];\n    first.should.containSubset(formatEntry('test-symlinked.js', currPath));\n    const contents = await readFile(first.fullPath);\n    contents.should.match(/handles symlinks/); // name of this test\n  });\n\n  it('handles symlinked directories', async () => {\n    const originalPath = sysPath.join(__dirname, 'examples');\n    const originalFiles = await readdir(originalPath);\n    const newPath = sysPath.join(currPath, 'examples');\n    await symlink(originalPath, newPath);\n    const res = await read();\n    const symlinkedFiles = res.map(entry => entry.basename);\n    symlinkedFiles.should.eql(originalFiles);\n  });\n\n  it('should use lstat instead of stat', async () => {\n    const files = ['a.txt', 'b.txt', 'c.txt'];\n    const symlinkName = 'test-symlinked.js';\n    const newPath = sysPath.join(currPath, symlinkName);\n    await symlink(sysPath.join(__dirname, 'test.js'), newPath);\n    await touch(files);\n    const expect = [...files, symlinkName];\n    const res = await read({lstat: true, alwaysStat: true});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) => {\n      entry.should.containSubset(formatEntry(expect[index], currPath, false));\n      entry.should.include.own.key('stats');\n      if (entry.basename === symlinkName) {\n        entry.stats.isSymbolicLink().should.equals(true);\n      }\n    });\n  });\n});\n\ndescribe('type', () => {\n  const files = ['a.txt', 'b.txt', 'c.txt'];\n  const dirs = ['d', 'e', 'f', 'g'];\n\n  it('files', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'files'});\n    res.should.have.lengthOf(files.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(files[index], currPath))\n    );\n  });\n\n  it('directories', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'directories'});\n    res.should.have.lengthOf(dirs.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(dirs[index], currPath))\n    );\n  });\n\n  it('both', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'both'});\n    const both = files.concat(dirs);\n    res.should.have.lengthOf(both.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(both[index], currPath))\n    );\n  });\n\n  it('all', async () => {\n    await touch(files, dirs);\n    const res = await read({type: 'all'});\n    const all = files.concat(dirs);\n    res.should.have.lengthOf(all.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(all[index], currPath))\n    );\n  });\n\n  it('invalid', async () => {\n    try {\n      await read({type: 'bogus'});\n    } catch (error) {\n      error.message.should.match(/Invalid type/);\n    }\n  });\n});\n\ndescribe('depth', () => {\n  const depth0 = ['a.js', 'b.js', 'c.js'];\n  const subdirs = ['subdir', 'deep'];\n  const depth1 = ['subdir/d.js', 'deep/e.js'];\n  const deepSubdirs = ['subdir/s1', 'subdir/s2', 'deep/d1', 'deep/d2'];\n  const depth2 = ['subdir/s1/f.js', 'deep/d1/h.js'];\n\n  beforeEach(async () => {\n    await touch(depth0, subdirs);\n    await touch(depth1, deepSubdirs);\n    await touch(depth2);\n  });\n\n  it('0', async () => {\n    const res = await read({depth: 0});\n    res.should.have.lengthOf(depth0.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(depth0[index], currPath))\n    );\n  });\n\n  it('1', async () => {\n    const res = await read({depth: 1});\n    const expect = [...depth0, ...depth1];\n    res.should.have.lengthOf(expect.length);\n    res\n      .sort((a, b) => a.basename > b.basename ? 1 : -1)\n      .forEach((entry, index) =>\n        entry.should.containSubset(formatEntry(expect[index], currPath))\n      );\n  });\n\n  it('2', async () => {\n    const res = await read({depth: 2});\n    const expect = [...depth0, ...depth1, ...depth2];\n    res.should.have.lengthOf(expect.length);\n    res\n      .sort((a, b) => a.basename > b.basename ? 1 : -1)\n      .forEach((entry, index) =>\n        entry.should.containSubset(formatEntry(expect[index], currPath))\n      );\n  });\n\n  it('default', async () => {\n    const res = await read();\n    const expect = [...depth0, ...depth1, ...depth2];\n    res.should.have.lengthOf(expect.length);\n    res\n      .sort((a, b) => a.basename > b.basename ? 1 : -1)\n      .forEach((entry, index) =>\n        entry.should.containSubset(formatEntry(expect[index], currPath))\n      );\n  });\n});\n\ndescribe('filtering', () => {\n  beforeEach(async () => {\n    await touch(['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb']);\n  });\n  it('glob', async () => {\n    const expect1 = ['a.js', 'c.js', 'd.js'];\n    const res = await read({fileFilter: '*.js'});\n    res.should.have.lengthOf(expect1.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect1[index], currPath))\n    );\n\n    const res2 = await read({fileFilter: ['*.js']});\n    res2.should.have.lengthOf(expect1.length);\n    res2.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect1[index], currPath))\n    );\n\n    const expect2 = ['b.txt'];\n    const res3 = await read({fileFilter: ['*.txt']});\n    res3.should.have.lengthOf(expect2.length);\n    res3.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect2[index], currPath))\n    );\n  });\n  it('leading and trailing spaces', async () => {\n    const expect = ['a.js', 'c.js', 'd.js', 'e.rb'];\n    const res = await read({fileFilter: [' *.js', '*.rb ']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath))\n    );\n  });\n  it('multiple glob', async () => {\n    const expect = ['a.js', 'b.txt', 'c.js', 'd.js'];\n    const res = await read({fileFilter: ['*.js', '*.txt']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath))\n    );\n  });\n  it('negated glob', async () => {\n    const expect = ['a.js', 'b.txt', 'c.js', 'e.rb'];\n    const res = await read({fileFilter: ['!d.js']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath))\n    );\n  });\n  it('glob & negated glob', async () => {\n    const expect = ['a.js', 'c.js'];\n    const res = await read({fileFilter: ['*.js', '!d.js']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath))\n    );\n  });\n  it('two negated glob', async () => {\n    const expect = ['b.txt'];\n    const res = await read({fileFilter: ['!*.js', '!*.rb']});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath))\n    );\n  });\n  it('function', async () => {\n    const expect = ['a.js', 'c.js', 'd.js'];\n    const res = await read({fileFilter: (entry) => sysPath.extname(entry.fullPath) === '.js'});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(expect[index], currPath))\n    );\n\n    if (supportsDirent) {\n      const expect2 = ['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb'];\n      const res2 = await read({fileFilter: (entry) => entry.dirent.isFile() });\n      res2.should.have.lengthOf(expect2.length);\n      res2.forEach((entry, index) =>\n        entry.should.containSubset(formatEntry(expect2[index], currPath))\n      );\n    }\n  });\n  it('function with stats', async () => {\n    const expect = ['a.js', 'c.js', 'd.js'];\n    const res = await read({alwaysStat: true, fileFilter: (entry) => sysPath.extname(entry.fullPath) === '.js'});\n    res.should.have.lengthOf(expect.length);\n    res.forEach((entry, index) => {\n      entry.should.containSubset(formatEntry(expect[index], currPath));\n      entry.should.include.own.key('stats');\n    });\n\n    const expect2 = ['a.js', 'b.txt', 'c.js', 'd.js', 'e.rb'];\n    const res2 = await read({alwaysStat: true, fileFilter: (entry) => entry.stats.size > 0 });\n    res2.should.have.lengthOf(expect2.length);\n    res2.forEach((entry, index) => {\n      entry.should.containSubset(formatEntry(expect2[index], currPath));\n      entry.should.include.own.key('stats');\n    });\n  });\n});\n\ndescribe('various', () => {\n  it('emits readable stream', () => {\n    const stream = readdirp(currPath);\n    stream.should.be.an.instanceof(Readable);\n    stream.should.be.an.instanceof(readdirp.ReaddirpStream);\n  });\n\n  it('fails without root option passed', async () => {\n    try {\n      readdirp();\n    } catch (error) {\n      error.should.be.an.instanceof(Error);\n    }\n  });\n\n  it('disallows old API', () => {\n    try {\n      readdirp({root: '.'});\n    } catch (error) {\n      error.should.be.an.instanceof(Error);\n    }\n  });\n\n  it('exposes promise API', async () => {\n    const created = ['a.txt', 'c.txt'];\n    await touch(created);\n    const result = await readdirp.promise(currPath);\n    result.should.have.lengthOf(created.length);\n    result.forEach((entry, index) =>\n      entry.should.containSubset(formatEntry(created[index], currPath))\n    );\n  });\n  it('should emit warning for missing file', async () => {\n    // readdirp() is initialized on some big root directory\n    // readdirp() receives path a/b/c to its queue\n    // readdirp is reading something else\n    // a/b gets deleted, so stat()-ting a/b/c would now emit enoent\n    // We should emit warnings for this case.\n    // this.timeout(4000);\n    fs.mkdirSync(sysPath.join(currPath, 'a'));\n    fs.mkdirSync(sysPath.join(currPath, 'b'));\n    fs.mkdirSync(sysPath.join(currPath, 'c'));\n    let isWarningCalled = false;\n    const stream = readdirp(currPath, { type: 'all', highWaterMark: 1 });\n    stream\n    .on('warn', warning => {\n      warning.should.be.an.instanceof(Error);\n      warning.code.should.equals('ENOENT');\n      isWarningCalled = true;\n    });\n    await delay(1000);\n    await pRimraf(sysPath.join(currPath, 'a'));\n    stream.resume();\n    await Promise.race([\n      waitForEnd(stream),\n      delay(2000)\n    ]);\n    isWarningCalled.should.equals(true);\n  }).timeout(4000);\n  it('should emit warning for file with strict permission', async () => {\n    // Windows doesn't throw permission error if you access permitted directory\n    if (isWindows) {\n      return true;\n    }\n    const permitedDir = sysPath.join(currPath, 'permited');\n    fs.mkdirSync(permitedDir, 0o0);\n    let isWarningCalled = false;\n    const stream = readdirp(currPath, { type: 'all' })\n      .on('data', () => {})\n      .on('warn', warning => {\n        warning.should.be.an.instanceof(Error);\n        warning.code.should.equals('EACCES');\n        isWarningCalled = true;\n      });\n    await Promise.race([\n      waitForEnd(stream),\n      delay(2000)\n    ]);\n    isWarningCalled.should.equals(true);\n  });\n  it('should not emit warning after \"end\" event', async () => {\n    // Windows doesn't throw permission error if you access permitted directory\n    if (isWindows) {\n      return true;\n    }\n    const subdir = sysPath.join(currPath, 'subdir');\n    const permitedDir = sysPath.join(subdir, 'permited');\n    fs.mkdirSync(subdir);\n    fs.mkdirSync(permitedDir, 0o0);\n    let isWarningCalled = false;\n    let isEnded = false;\n    let timer;\n    const stream = readdirp(currPath, { type: 'all' })\n      .on('data', () => {})\n      .on('warn', warning => {\n        warning.should.be.an.instanceof(Error);\n        warning.code.should.equals('EACCES');\n        isEnded.should.equals(false);\n        isWarningCalled = true;\n        clearTimeout(timer);\n      })\n      .on('end', () => {\n        isWarningCalled.should.equals(true);\n        isEnded = true;\n      });\n    await Promise.race([\n      waitForEnd(stream),\n      delay(2000)\n    ]);\n    isWarningCalled.should.equals(true);\n    isEnded.should.equals(true);\n  });\n});\n",
    "node_modules/mocha/lib/runnable.js": "'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar Pending = require('./pending');\nvar debug = require('debug')('mocha:runnable');\nvar milliseconds = require('ms');\nvar utils = require('./utils');\nvar errors = require('./errors');\nvar createInvalidExceptionError = errors.createInvalidExceptionError;\nvar createMultipleDoneError = errors.createMultipleDoneError;\n\n/**\n * Save timer references to avoid Sinon interfering (see GH-237).\n */\nvar Date = global.Date;\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\nvar toString = Object.prototype.toString;\n\nmodule.exports = Runnable;\n\n/**\n * Initialize a new `Runnable` with the given `title` and callback `fn`.\n *\n * @class\n * @extends external:EventEmitter\n * @public\n * @param {String} title\n * @param {Function} fn\n */\nfunction Runnable(title, fn) {\n  this.title = title;\n  this.fn = fn;\n  this.body = (fn || '').toString();\n  this.async = fn && fn.length;\n  this.sync = !this.async;\n  this._timeout = 2000;\n  this._slow = 75;\n  this._enableTimeouts = true;\n  this._retries = -1;\n  this.reset();\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\nutils.inherits(Runnable, EventEmitter);\n\n/**\n * Resets the state initially or for a next run.\n */\nRunnable.prototype.reset = function() {\n  this.timedOut = false;\n  this._currentRetry = 0;\n  this.pending = false;\n  delete this.state;\n  delete this.err;\n};\n\n/**\n * Get current timeout value in msecs.\n *\n * @private\n * @returns {number} current timeout threshold value\n */\n/**\n * @summary\n * Set timeout threshold value (msecs).\n *\n * @description\n * A string argument can use shorthand (e.g., \"2s\") and will be converted.\n * The value will be clamped to range [<code>0</code>, <code>2^<sup>31</sup>-1</code>].\n * If clamped value matches either range endpoint, timeouts will be disabled.\n *\n * @private\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value}\n * @param {number|string} ms - Timeout threshold value.\n * @returns {Runnable} this\n * @chainable\n */\nRunnable.prototype.timeout = function(ms) {\n  if (!arguments.length) {\n    return this._timeout;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n\n  // Clamp to range\n  var INT_MAX = Math.pow(2, 31) - 1;\n  var range = [0, INT_MAX];\n  ms = utils.clamp(ms, range);\n\n  // see #1652 for reasoning\n  if (ms === range[0] || ms === range[1]) {\n    this._enableTimeouts = false;\n  }\n  debug('timeout %d', ms);\n  this._timeout = ms;\n  if (this.timer) {\n    this.resetTimeout();\n  }\n  return this;\n};\n\n/**\n * Set or get slow `ms`.\n *\n * @private\n * @param {number|string} ms\n * @return {Runnable|number} ms or Runnable instance.\n */\nRunnable.prototype.slow = function(ms) {\n  if (!arguments.length || typeof ms === 'undefined') {\n    return this._slow;\n  }\n  if (typeof ms === 'string') {\n    ms = milliseconds(ms);\n  }\n  debug('slow %d', ms);\n  this._slow = ms;\n  return this;\n};\n\n/**\n * Set and get whether timeout is `enabled`.\n *\n * @private\n * @param {boolean} enabled\n * @return {Runnable|boolean} enabled or Runnable instance.\n */\nRunnable.prototype.enableTimeouts = function(enabled) {\n  if (!arguments.length) {\n    return this._enableTimeouts;\n  }\n  debug('enableTimeouts %s', enabled);\n  this._enableTimeouts = enabled;\n  return this;\n};\n\n/**\n * Halt and mark as pending.\n *\n * @memberof Mocha.Runnable\n * @public\n */\nRunnable.prototype.skip = function() {\n  this.pending = true;\n  throw new Pending('sync skip; aborting execution');\n};\n\n/**\n * Check if this runnable or its parent suite is marked as pending.\n *\n * @private\n */\nRunnable.prototype.isPending = function() {\n  return this.pending || (this.parent && this.parent.isPending());\n};\n\n/**\n * Return `true` if this Runnable has failed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isFailed = function() {\n  return !this.isPending() && this.state === constants.STATE_FAILED;\n};\n\n/**\n * Return `true` if this Runnable has passed.\n * @return {boolean}\n * @private\n */\nRunnable.prototype.isPassed = function() {\n  return !this.isPending() && this.state === constants.STATE_PASSED;\n};\n\n/**\n * Set or get number of retries.\n *\n * @private\n */\nRunnable.prototype.retries = function(n) {\n  if (!arguments.length) {\n    return this._retries;\n  }\n  this._retries = n;\n};\n\n/**\n * Set or get current retry\n *\n * @private\n */\nRunnable.prototype.currentRetry = function(n) {\n  if (!arguments.length) {\n    return this._currentRetry;\n  }\n  this._currentRetry = n;\n};\n\n/**\n * Return the full title generated by recursively concatenating the parent's\n * full title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.fullTitle = function() {\n  return this.titlePath().join(' ');\n};\n\n/**\n * Return the title path generated by concatenating the parent's title path with the title.\n *\n * @memberof Mocha.Runnable\n * @public\n * @return {string}\n */\nRunnable.prototype.titlePath = function() {\n  return this.parent.titlePath().concat([this.title]);\n};\n\n/**\n * Clear the timeout.\n *\n * @private\n */\nRunnable.prototype.clearTimeout = function() {\n  clearTimeout(this.timer);\n};\n\n/**\n * Reset the timeout.\n *\n * @private\n */\nRunnable.prototype.resetTimeout = function() {\n  var self = this;\n  var ms = this.timeout() || 1e9;\n\n  if (!this._enableTimeouts) {\n    return;\n  }\n  this.clearTimeout();\n  this.timer = setTimeout(function() {\n    if (!self._enableTimeouts) {\n      return;\n    }\n    self.callback(self._timeoutError(ms));\n    self.timedOut = true;\n  }, ms);\n};\n\n/**\n * Set or get a list of whitelisted globals for this test run.\n *\n * @private\n * @param {string[]} globals\n */\nRunnable.prototype.globals = function(globals) {\n  if (!arguments.length) {\n    return this._allowedGlobals;\n  }\n  this._allowedGlobals = globals;\n};\n\n/**\n * Run the test and invoke `fn(err)`.\n *\n * @param {Function} fn\n * @private\n */\nRunnable.prototype.run = function(fn) {\n  var self = this;\n  var start = new Date();\n  var ctx = this.ctx;\n  var finished;\n  var errorWasHandled = false;\n\n  // Sometimes the ctx exists, but it is not runnable\n  if (ctx && ctx.runnable) {\n    ctx.runnable(this);\n  }\n\n  // called multiple times\n  function multiple(err) {\n    if (errorWasHandled) {\n      return;\n    }\n    errorWasHandled = true;\n    self.emit('error', createMultipleDoneError(self, err));\n  }\n\n  // finished\n  function done(err) {\n    var ms = self.timeout();\n    if (self.timedOut) {\n      return;\n    }\n\n    if (finished) {\n      return multiple(err);\n    }\n\n    self.clearTimeout();\n    self.duration = new Date() - start;\n    finished = true;\n    if (!err && self.duration > ms && self._enableTimeouts) {\n      err = self._timeoutError(ms);\n    }\n    fn(err);\n  }\n\n  // for .resetTimeout() and Runner#uncaught()\n  this.callback = done;\n\n  if (this.fn && typeof this.fn.call !== 'function') {\n    done(\n      new TypeError(\n        'A runnable must be passed a function as its second argument.'\n      )\n    );\n    return;\n  }\n\n  // explicit async with `done` argument\n  if (this.async) {\n    this.resetTimeout();\n\n    // allows skip() to be used in an explicit async context\n    this.skip = function asyncSkip() {\n      this.pending = true;\n      done();\n      // halt execution, the uncaught handler will ignore the failure.\n      throw new Pending('async skip; aborting execution');\n    };\n\n    try {\n      callFnAsync(this.fn);\n    } catch (err) {\n      // handles async runnables which actually run synchronously\n      errorWasHandled = true;\n      if (err instanceof Pending) {\n        return; // done() is already called in this.skip()\n      } else if (this.allowUncaught) {\n        throw err;\n      }\n      done(Runnable.toValueOrError(err));\n    }\n    return;\n  }\n\n  // sync or promise-returning\n  try {\n    if (this.isPending()) {\n      done();\n    } else {\n      callFn(this.fn);\n    }\n  } catch (err) {\n    errorWasHandled = true;\n    if (err instanceof Pending) {\n      return done();\n    } else if (this.allowUncaught) {\n      throw err;\n    }\n    done(Runnable.toValueOrError(err));\n  }\n\n  function callFn(fn) {\n    var result = fn.call(ctx);\n    if (result && typeof result.then === 'function') {\n      self.resetTimeout();\n      result.then(\n        function() {\n          done();\n          // Return null so libraries like bluebird do not warn about\n          // subsequently constructed Promises.\n          return null;\n        },\n        function(reason) {\n          done(reason || new Error('Promise rejected with no or falsy reason'));\n        }\n      );\n    } else {\n      if (self.asyncOnly) {\n        return done(\n          new Error(\n            '--async-only option in use without declaring `done()` or returning a promise'\n          )\n        );\n      }\n\n      done();\n    }\n  }\n\n  function callFnAsync(fn) {\n    var result = fn.call(ctx, function(err) {\n      if (err instanceof Error || toString.call(err) === '[object Error]') {\n        return done(err);\n      }\n      if (err) {\n        if (Object.prototype.toString.call(err) === '[object Object]') {\n          return done(\n            new Error('done() invoked with non-Error: ' + JSON.stringify(err))\n          );\n        }\n        return done(new Error('done() invoked with non-Error: ' + err));\n      }\n      if (result && utils.isPromise(result)) {\n        return done(\n          new Error(\n            'Resolution method is overspecified. Specify a callback *or* return a Promise; not both.'\n          )\n        );\n      }\n\n      done();\n    });\n  }\n};\n\n/**\n * Instantiates a \"timeout\" error\n *\n * @param {number} ms - Timeout (in milliseconds)\n * @returns {Error} a \"timeout\" error\n * @private\n */\nRunnable.prototype._timeoutError = function(ms) {\n  var msg =\n    'Timeout of ' +\n    ms +\n    'ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.';\n  if (this.file) {\n    msg += ' (' + this.file + ')';\n  }\n  return new Error(msg);\n};\n\nvar constants = utils.defineConstants(\n  /**\n   * {@link Runnable}-related constants.\n   * @public\n   * @memberof Runnable\n   * @readonly\n   * @static\n   * @alias constants\n   * @enum {string}\n   */\n  {\n    /**\n     * Value of `state` prop when a `Runnable` has failed\n     */\n    STATE_FAILED: 'failed',\n    /**\n     * Value of `state` prop when a `Runnable` has passed\n     */\n    STATE_PASSED: 'passed'\n  }\n);\n\n/**\n * Given `value`, return identity if truthy, otherwise create an \"invalid exception\" error and return that.\n * @param {*} [value] - Value to return, if present\n * @returns {*|Error} `value`, otherwise an `Error`\n * @private\n */\nRunnable.toValueOrError = function(value) {\n  return (\n    value ||\n    createInvalidExceptionError(\n      'Runnable failed with falsy or undefined exception. Please throw an Error instead.',\n      value\n    )\n  );\n};\n\nRunnable.constants = constants;\n",
    "index.js": "'use strict';\n\nconst fs = require('fs');\nconst { Readable } = require('stream');\nconst sysPath = require('path');\nconst { promisify } = require('util');\nconst picomatch = require('picomatch');\n\nconst readdir = promisify(fs.readdir);\nconst stat = promisify(fs.stat);\nconst lstat = promisify(fs.lstat);\nconst realpath = promisify(fs.realpath);\n\n/**\n * @typedef {Object} EntryInfo\n * @property {String} path\n * @property {String} fullPath\n * @property {fs.Stats=} stats\n * @property {fs.Dirent=} dirent\n * @property {String} basename\n */\n\nconst BANG = '!';\nconst RECURSIVE_ERROR_CODE = 'READDIRP_RECURSIVE_ERROR';\nconst NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP', RECURSIVE_ERROR_CODE]);\nconst FILE_TYPE = 'files';\nconst DIR_TYPE = 'directories';\nconst FILE_DIR_TYPE = 'files_directories';\nconst EVERYTHING_TYPE = 'all';\nconst ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];\n\nconst isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);\nconst [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));\nconst wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));\n\nconst normalizeFilter = filter => {\n  if (filter === undefined) return;\n  if (typeof filter === 'function') return filter;\n\n  if (typeof filter === 'string') {\n    const glob = picomatch(filter.trim());\n    return entry => glob(entry.basename);\n  }\n\n  if (Array.isArray(filter)) {\n    const positive = [];\n    const negative = [];\n    for (const item of filter) {\n      const trimmed = item.trim();\n      if (trimmed.charAt(0) === BANG) {\n        negative.push(picomatch(trimmed.slice(1)));\n      } else {\n        positive.push(picomatch(trimmed));\n      }\n    }\n\n    if (negative.length > 0) {\n      if (positive.length > 0) {\n        return entry =>\n          positive.some(f => f(entry.basename)) && !negative.some(f => f(entry.basename));\n      }\n      return entry => !negative.some(f => f(entry.basename));\n    }\n    return entry => positive.some(f => f(entry.basename));\n  }\n};\n\nclass ReaddirpStream extends Readable {\n  static get defaultOptions() {\n    return {\n      root: '.',\n      /* eslint-disable no-unused-vars */\n      fileFilter: (path) => true,\n      directoryFilter: (path) => true,\n      /* eslint-enable no-unused-vars */\n      type: FILE_TYPE,\n      lstat: false,\n      depth: 2147483648,\n      alwaysStat: false\n    };\n  }\n\n  constructor(options = {}) {\n    super({\n      objectMode: true,\n      autoDestroy: true,\n      highWaterMark: options.highWaterMark || 4096\n    });\n    const opts = { ...ReaddirpStream.defaultOptions, ...options };\n    const { root, type } = opts;\n\n    this._fileFilter = normalizeFilter(opts.fileFilter);\n    this._directoryFilter = normalizeFilter(opts.directoryFilter);\n\n    const statMethod = opts.lstat ? lstat : stat;\n    // Use bigint stats if it's windows and stat() supports options (node 10+).\n    if (wantBigintFsStats) {\n      this._stat = path => statMethod(path, { bigint: true });\n    } else {\n      this._stat = statMethod;\n    }\n\n    this._maxDepth = opts.depth;\n    this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsEverything = type === EVERYTHING_TYPE;\n    this._root = sysPath.resolve(root);\n    this._isDirent = ('Dirent' in fs) && !opts.alwaysStat;\n    this._statsProp = this._isDirent ? 'dirent' : 'stats';\n    this._rdOptions = { encoding: 'utf8', withFileTypes: this._isDirent };\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  }\n\n  async _read(batch) {\n    if (this.reading) return;\n    this.reading = true;\n\n    try {\n      while (!this.destroyed && batch > 0) {\n        const { path, depth, files = [] } = this.parent || {};\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n          // for await (const entry of slice) {\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) {\n                this.push(entry);\n                batch--;\n              }\n            } else if ((entryType === 'file' || this._includeAsFile(entry)) && this._fileFilter(entry)) {\n              if (this._wantsFile) {\n                this.push(entry);\n                batch--;\n              }\n            }\n          }\n        } else {\n          const parent = this.parents.pop();\n          if (!parent) {\n            this.push(null);\n            break;\n          }\n          this.parent = await parent;\n          if (this.destroyed) return;\n        }\n      }\n    } catch (error) {\n      this.destroy(error);\n    } finally {\n      this.reading = false;\n    }\n  }\n\n  async _exploreDir(path, depth) {\n    let files;\n    try {\n      files = await readdir(path, this._rdOptions);\n    } catch (error) {\n      this._onError(error);\n    }\n    return {files, depth, path};\n  }\n\n  async _formatEntry(dirent, path) {\n    let entry;\n    try {\n      const basename = this._isDirent ? dirent.name : dirent;\n      const fullPath = sysPath.resolve(sysPath.join(path, basename));\n      entry = {path: sysPath.relative(this._root, fullPath), fullPath, basename};\n      entry[this._statsProp] = this._isDirent ? dirent : await this._stat(fullPath);\n    } catch (err) {\n      this._onError(err);\n    }\n    return entry;\n  }\n\n  _onError(err) {\n    if (isNormalFlowError(err) && !this.destroyed) {\n      this.emit('warn', err);\n    } else {\n      this.destroy(err);\n    }\n  }\n\n  async _getEntryType(entry) {\n    // entry may be undefined, because a warning or an error were emitted\n    // and the statsProp is undefined\n    const stats = entry && entry[this._statsProp];\n    if (!stats) {\n      return;\n    }\n    if (stats.isFile()) {\n      return 'file';\n    }\n    if (stats.isDirectory()) {\n      return 'directory';\n    }\n    if (stats && stats.isSymbolicLink()) {\n      const full = entry.fullPath;\n      try {\n        const entryRealPath = await realpath(full);\n        const entryRealPathStats = await lstat(entryRealPath);\n        if (entryRealPathStats.isFile()) {\n          return 'file';\n        }\n        if (entryRealPathStats.isDirectory()) {\n          const len = entryRealPath.length;\n          if (full.startsWith(entryRealPath) && full.substr(len, 1) === sysPath.sep) {\n            const recursiveError = new Error(\n              `Circular symlink detected: \"${full}\" points to \"${entryRealPath}\"`\n            );\n            recursiveError.code = RECURSIVE_ERROR_CODE;\n            return this._onError(recursiveError);\n          }\n          return 'directory';\n        }\n      } catch (error) {\n        this._onError(error);\n      }\n    }\n  }\n\n  _includeAsFile(entry) {\n    const stats = entry && entry[this._statsProp];\n\n    return stats && this._wantsEverything && !stats.isDirectory();\n  }\n}\n\n/**\n * @typedef {Object} ReaddirpArguments\n * @property {Function=} fileFilter\n * @property {Function=} directoryFilter\n * @property {String=} type\n * @property {Number=} depth\n * @property {String=} root\n * @property {Boolean=} lstat\n * @property {Boolean=} bigint\n */\n\n/**\n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param {String} root Root directory\n * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth\n */\nconst readdirp = (root, options = {}) => {\n  let type = options.entryType || options.type;\n  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility\n  if (type) options.type = type;\n  if (!root) {\n    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');\n  } else if (typeof root !== 'string') {\n    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');\n  } else if (type && !ALL_TYPES.includes(type)) {\n    throw new Error(`readdirp: Invalid type passed. Use one of ${ALL_TYPES.join(', ')}`);\n  }\n\n  options.root = root;\n  return new ReaddirpStream(options);\n};\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp(root, options)\n      .on('data', entry => files.push(entry))\n      .on('end', () => resolve(files))\n      .on('error', error => reject(error));\n  });\n};\n\nreaddirp.promise = readdirpPromise;\nreaddirp.ReaddirpStream = ReaddirpStream;\nreaddirp.default = readdirp;\n\nmodule.exports = readdirp;\n"
  }
}