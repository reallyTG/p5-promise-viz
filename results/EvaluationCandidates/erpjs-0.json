{
  "promises": {
    "0": {
      "source": "node_modules/jest-runner/build/runTest.js:372:23:372:23",
      "startTime": "578964578330847",
      "endTime": "578964578570747",
      "elapsedTime": "239900",
      "asyncId": 29,
      "triggerAsyncId": 4,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n\n  try {\n    await environment.setup();\n    let result;\n\n    try ",
      "startLine": 372,
      "startCol": 23,
      "endLine": 372,
      "endCol": 23,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        30,
        30,
        30,
        30,
        30,
        30,
        30
      ],
      "uniqueid": 0
    },
    "1": {
      "source": "node_modules/jest-runner/build/runTest.js:472:40:472:40",
      "startTime": "578964576953164",
      "endTime": "578982354303152",
      "elapsedTime": "17777349988",
      "asyncId": 30,
      "triggerAsyncId": 29,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTest",
      "userCode": false,
      "triggers": [
        41,
        79,
        41,
        79,
        41,
        41,
        80,
        81,
        79,
        82,
        41,
        80,
        81,
        82,
        79,
        41,
        79,
        80,
        81,
        82,
        80,
        81,
        82,
        79,
        80,
        81,
        82,
        41,
        80,
        81,
        82,
        79,
        85,
        85,
        85,
        123,
        124,
        127,
        129,
        123,
        39,
        83,
        124,
        127,
        129,
        39,
        83,
        83,
        85,
        85,
        86,
        125,
        80,
        126,
        81,
        165,
        82,
        166,
        206,
        205,
        38,
        126,
        125,
        37,
        38,
        126,
        125,
        37,
        124,
        126,
        129,
        130,
        133,
        125,
        135,
        138,
        178,
        218,
        256,
        257,
        260,
        262,
        39,
        83,
        125,
        136,
        176,
        216,
        130,
        85,
        165,
        38,
        259,
        258,
        37,
        205,
        125,
        243,
        244,
        163,
        243,
        246,
        247,
        166,
        246,
        286,
        206,
        287,
        327,
        367,
        286,
        326,
        246,
        324,
        364,
        284,
        285,
        405,
        365,
        325,
        286,
        326,
        406,
        366,
        329,
        289,
        409,
        369,
        409,
        449,
        329,
        369,
        449,
        489,
        369,
        489,
        409,
        409,
        529,
        529,
        449,
        449,
        569,
        569,
        489,
        609,
        609,
        489,
        529,
        649,
        649,
        529,
        569,
        689,
        689,
        609,
        569,
        729,
        729,
        609,
        649,
        649,
        769,
        769,
        689,
        689,
        809,
        809,
        729,
        849,
        729,
        769,
        889,
        849,
        769,
        809,
        929,
        849,
        969,
        889,
        809,
        1009,
        889,
        1049,
        929,
        969,
        1089,
        1007,
        1127,
        1010,
        1130,
        1012,
        39,
        83,
        123,
        164,
        204,
        244,
        287,
        327,
        367,
        407,
        447,
        487,
        527,
        567,
        607,
        647,
        687,
        727,
        767,
        807,
        847,
        887,
        927,
        967,
        1132,
        39,
        83,
        123,
        163,
        203,
        244,
        284,
        324,
        367,
        407,
        447,
        487,
        527,
        567,
        607,
        647,
        687,
        727,
        767,
        807,
        847,
        887,
        927,
        967,
        1007,
        1047,
        1087,
        929,
        849,
        889,
        38,
        1129,
        1128,
        37,
        969,
        38,
        1009,
        1008,
        37,
        1009,
        929,
        1049,
        969,
        1089,
        1009,
        1127,
        1047,
        1128,
        1048,
        1130,
        1050,
        1133,
        1053,
        1093,
        1173,
        1213,
        1133,
        1253,
        1173,
        1293,
        1333,
        1213,
        1373,
        1253,
        1293,
        1413,
        1452,
        1332,
        1453,
        1333,
        1336,
        1456,
        1376,
        1496,
        1416,
        1536,
        1456,
        1576,
        1496,
        1616,
        1536,
        1656,
        1576,
        1696,
        1616,
        1736,
        1654,
        1655,
        1774,
        1775,
        1776,
        1656,
        1659,
        1779,
        1819,
        1699,
        1859,
        1739,
        1779,
        1899,
        1818,
        1938,
        1820,
        1940,
        1823,
        1943,
        1824,
        1944,
        1947,
        1827,
        1949,
        1829,
        1952,
        1832,
        1870,
        1873,
        1875,
        39,
        83,
        123,
        163,
        203,
        244,
        284,
        327,
        367,
        407,
        447,
        487,
        527,
        567,
        607,
        647,
        687,
        727,
        767,
        807,
        847,
        887,
        927,
        967,
        1007,
        1051,
        1091,
        1131,
        1171,
        1211,
        1251,
        1291,
        1334,
        1374,
        1414,
        1454,
        1494,
        1534,
        1574,
        1614,
        1657,
        1697,
        1737,
        1777,
        1819,
        1830,
        1824,
        1990,
        1991,
        1994,
        1996,
        39,
        84,
        124,
        164,
        204,
        245,
        285,
        325,
        365,
        407,
        447,
        487,
        527,
        567,
        607,
        647,
        687,
        727,
        767,
        807,
        847,
        887,
        927,
        967,
        1007,
        1047,
        1087,
        1131,
        1171,
        1211,
        1251,
        1291,
        1331,
        1371,
        1411,
        1454,
        1494,
        1534,
        1574,
        1614,
        1654,
        1694,
        1734,
        1777,
        1817,
        1857,
        1897,
        1939,
        1950,
        1944,
        38,
        1872,
        1871,
        37,
        38,
        1993,
        1992,
        37
      ],
      "line": "\n  sendMessageToJest\n) {\n  const {leakDetector, result} = await runTestInternal(\n    path,\n    globalConfig,\n    config",
      "startLine": 472,
      "startCol": 40,
      "endLine": 472,
      "endCol": 40,
      "file": "node_modules/jest-runner/build/runTest.js",
      "uniqueid": 1
    },
    "2": {
      "source": "node_modules/es6-shim/es6-shim.js:2628:24:2628:24",
      "startTime": "578976035708310",
      "endTime": "578976184940431",
      "elapsedTime": "149232121",
      "asyncId": 130,
      "triggerAsyncId": 30,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        139,
        141,
        148,
        139,
        141,
        148,
        137,
        138,
        146,
        179,
        150,
        137,
        138,
        146,
        179,
        150,
        131
      ],
      "line": "\n      var p = Promise.resolve(5);\n      p.constructor = {};\n      var p2 = Promise.resolve(p);\n      try {\n        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n      } catch (e) ",
      "startLine": 2628,
      "startCol": 24,
      "endLine": 2628,
      "endCol": 24,
      "file": "node_modules/es6-shim/es6-shim.js",
      "uniqueid": 2
    },
    "3": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578975887841379",
      "endTime": "578975887857159",
      "elapsedTime": "15780",
      "asyncId": 141,
      "triggerAsyncId": 130,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        142,
        142,
        142,
        142
      ],
      "uniqueid": 3
    },
    "4": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578975888151801",
      "endTime": "578976004529683",
      "elapsedTime": "116377882",
      "asyncId": 142,
      "triggerAsyncId": 141,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        158,
        172,
        158,
        160,
        172,
        159,
        158,
        157,
        156,
        160,
        159,
        158,
        157,
        156,
        155,
        155,
        154,
        153,
        152,
        170,
        174,
        183,
        143,
        154,
        153,
        152,
        170,
        174,
        183,
        143,
        143,
        143
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 4
    },
    "5": {
      "source": "apps/api/src/app/app.controller.spec.ts:13:8:13:8",
      "startTime": "578975892014231",
      "endTime": "578976003951219",
      "elapsedTime": "111936988",
      "asyncId": 154,
      "triggerAsyncId": 142,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        168,
        168
      ],
      "line": "\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => ",
      "startLine": 13,
      "startCol": 8,
      "endLine": 13,
      "endCol": 8,
      "file": "apps/api/src/app/app.controller.spec.ts",
      "uniqueid": 5
    },
    "6": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578976277440753",
      "endTime": "578976277463686",
      "elapsedTime": "22933",
      "asyncId": 165,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        166,
        166
      ],
      "uniqueid": 6
    },
    "7": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578975959412056",
      "endTime": "578982333906205",
      "elapsedTime": "6374494149",
      "asyncId": 166,
      "triggerAsyncId": 165,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        189,
        191,
        190,
        189,
        188,
        189,
        191,
        190,
        189,
        188,
        167,
        167
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 7
    },
    "8": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578975963327636",
      "endTime": "578982354721105",
      "elapsedTime": "6391393469",
      "asyncId": 167,
      "triggerAsyncId": 166,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        216,
        222,
        221,
        216,
        222,
        221,
        226,
        225,
        226,
        225,
        232,
        240,
        232,
        248,
        240,
        254,
        253,
        258,
        257,
        248,
        262,
        261,
        254,
        253,
        258,
        257,
        262,
        261,
        282,
        288,
        287,
        292,
        291,
        282,
        298,
        288,
        287,
        292,
        291,
        298,
        220,
        224,
        238,
        246,
        252,
        256,
        260,
        220,
        286,
        224,
        290,
        214,
        230,
        238,
        239,
        247,
        246,
        280,
        252,
        256,
        296,
        260,
        215,
        231,
        237,
        245,
        281,
        297,
        213,
        229,
        286,
        290,
        214,
        230,
        239,
        247,
        280,
        296,
        215,
        231,
        279,
        237,
        295,
        245,
        281,
        297,
        213,
        229,
        279,
        295,
        236,
        244,
        212,
        228,
        278,
        294,
        264,
        302,
        211,
        277,
        236,
        244,
        212,
        228,
        278,
        294,
        264,
        302,
        211,
        277,
        210,
        276,
        309,
        209,
        208,
        210,
        276,
        309,
        209,
        208
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 8
    },
    "9": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:58:37:58:37",
      "startTime": "578975897435835",
      "endTime": "578976004077005",
      "elapsedTime": "106641170",
      "asyncId": 168,
      "triggerAsyncId": 154,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 58,
      "startCol": 37,
      "endLine": 58,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 9
    },
    "10": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:43:35:43:35",
      "startTime": "578975913919195",
      "endTime": "578976003700168",
      "elapsedTime": "89780973",
      "asyncId": 208,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "triggers": [
        314,
        314
      ],
      "line": "\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders();\n        const root = this.getRootModule();\n        return new testing_module_1.TestingModule(this.container, [], root, this.applicationConfig)",
      "startLine": 43,
      "startCol": 35,
      "endLine": 43,
      "endCol": 35,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "uniqueid": 10
    },
    "11": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578975914596043",
      "endTime": "578976003634776",
      "elapsedTime": "89038733",
      "asyncId": 209,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "triggers": [
        313,
        313
      ],
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 11
    },
    "12": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578975910506337",
      "endTime": "578975991013686",
      "elapsedTime": "80507349",
      "asyncId": 211,
      "triggerAsyncId": 167,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        275,
        275
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 12
    },
    "13": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975910927667",
      "endTime": "578975990475808",
      "elapsedTime": "79548141",
      "asyncId": 212,
      "triggerAsyncId": 167,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        265,
        265
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 13
    },
    "14": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975911294244",
      "endTime": "578975984078275",
      "elapsedTime": "72784031",
      "asyncId": 213,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        219,
        219
      ],
      "uniqueid": 14
    },
    "15": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578975911593024",
      "endTime": "578975982829374",
      "elapsedTime": "71236350",
      "asyncId": 214,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 15
    },
    "16": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975912016478",
      "endTime": "578975983634563",
      "elapsedTime": "71618085",
      "asyncId": 215,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        218,
        218
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 16
    },
    "17": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578976148491294",
      "endTime": "578976181101505",
      "elapsedTime": "32610211",
      "asyncId": 216,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        217,
        217
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 17
    },
    "18": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975917377527",
      "endTime": "578975952957365",
      "elapsedTime": "35579838",
      "asyncId": 217,
      "triggerAsyncId": 216,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        317,
        317,
        316,
        316,
        315,
        315
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 18
    },
    "19": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578976148939123",
      "endTime": "578976148957868",
      "elapsedTime": "18745",
      "asyncId": 218,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        219
      ],
      "uniqueid": 19
    },
    "20": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578976149442717",
      "endTime": "578976181133335",
      "elapsedTime": "31690618",
      "asyncId": 219,
      "triggerAsyncId": 218,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        396,
        396,
        395,
        395
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 20
    },
    "21": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975913447951",
      "endTime": "578975979781991",
      "elapsedTime": "66334040",
      "asyncId": 220,
      "triggerAsyncId": 167,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        266,
        266
      ],
      "uniqueid": 21
    },
    "22": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975918371561",
      "endTime": "578975918689266",
      "elapsedTime": "317705",
      "asyncId": 221,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        223,
        223
      ],
      "uniqueid": 22
    },
    "23": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578975918630216",
      "endTime": "578975918649001",
      "elapsedTime": "18785",
      "asyncId": 222,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 23
    },
    "24": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975918957940",
      "endTime": "578975954816130",
      "elapsedTime": "35858190",
      "asyncId": 223,
      "triggerAsyncId": 221,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        322,
        322,
        321,
        321
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 24
    },
    "25": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975914563322",
      "endTime": "578975979864125",
      "elapsedTime": "65300803",
      "asyncId": 224,
      "triggerAsyncId": 167,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        267,
        267
      ],
      "uniqueid": 25
    },
    "26": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975914805656",
      "endTime": "578975921545220",
      "elapsedTime": "6739564",
      "asyncId": 225,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        227,
        227
      ],
      "uniqueid": 26
    },
    "27": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578975921449561",
      "endTime": "578975921484597",
      "elapsedTime": "35036",
      "asyncId": 226,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 27
    },
    "28": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975920187615",
      "endTime": "578975955843335",
      "elapsedTime": "35655720",
      "asyncId": 227,
      "triggerAsyncId": 225,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        326,
        326,
        325,
        325
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 28
    },
    "29": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975922514387",
      "endTime": "578975990548834",
      "elapsedTime": "68034447",
      "asyncId": 228,
      "triggerAsyncId": 167,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        268,
        268
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 29
    },
    "30": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975922786016",
      "endTime": "578975984144088",
      "elapsedTime": "61358072",
      "asyncId": 229,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        235,
        235
      ],
      "uniqueid": 30
    },
    "31": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578975924794782",
      "endTime": "578975983035810",
      "elapsedTime": "58241028",
      "asyncId": 230,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 31
    },
    "32": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975925079756",
      "endTime": "578975983716426",
      "elapsedTime": "58636670",
      "asyncId": 231,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        234,
        234
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 32
    },
    "33": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578975928721974",
      "endTime": "578975928743153",
      "elapsedTime": "21179",
      "asyncId": 232,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        233,
        233
      ],
      "uniqueid": 33
    },
    "34": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975929071559",
      "endTime": "578975957556146",
      "elapsedTime": "28484587",
      "asyncId": 233,
      "triggerAsyncId": 232,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        331,
        331,
        330,
        330,
        329,
        329
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 34
    },
    "35": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975925907247",
      "endTime": "578975984176288",
      "elapsedTime": "58269041",
      "asyncId": 234,
      "triggerAsyncId": 231,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 35
    },
    "36": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975926200848",
      "endTime": "578975988038799",
      "elapsedTime": "61837951",
      "asyncId": 235,
      "triggerAsyncId": 229,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        400,
        400,
        399,
        399
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 36
    },
    "37": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975926437491",
      "endTime": "578975990221090",
      "elapsedTime": "63783599",
      "asyncId": 236,
      "triggerAsyncId": 167,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        269,
        269
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 37
    },
    "38": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975926676550",
      "endTime": "578975983784925",
      "elapsedTime": "57108375",
      "asyncId": 237,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        243,
        243
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 38
    },
    "39": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578975926948589",
      "endTime": "578975980845034",
      "elapsedTime": "53896445",
      "asyncId": 238,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 39
    },
    "40": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975927216592",
      "endTime": "578975983135056",
      "elapsedTime": "55918464",
      "asyncId": 239,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        242,
        242
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 40
    },
    "41": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578975931051420",
      "endTime": "578975931068853",
      "elapsedTime": "17433",
      "asyncId": 240,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        241,
        241
      ],
      "uniqueid": 41
    },
    "42": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975931361161",
      "endTime": "578975958735387",
      "elapsedTime": "27374226",
      "asyncId": 241,
      "triggerAsyncId": 240,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        336,
        336,
        335,
        335
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 42
    },
    "43": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975928009689",
      "endTime": "578975983827645",
      "elapsedTime": "55817956",
      "asyncId": 242,
      "triggerAsyncId": 239,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 43
    },
    "44": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578977135237520",
      "endTime": "578977135262196",
      "elapsedTime": "24676",
      "asyncId": 243,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "triggers": [
        388,
        388,
        387,
        387
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 44
    },
    "45": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578977335861150",
      "endTime": "578982334043513",
      "elapsedTime": "4998182363",
      "asyncId": 244,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        270,
        270
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 45
    },
    "46": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578977301365775",
      "endTime": "578982354830621",
      "elapsedTime": "5053464846",
      "asyncId": 245,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        251,
        251
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 46
    },
    "47": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578977415798571",
      "endTime": "578977415834618",
      "elapsedTime": "36047",
      "asyncId": 246,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        247,
        247,
        247
      ],
      "uniqueid": 47
    },
    "48": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578977336638748",
      "endTime": "578982334082296",
      "elapsedTime": "4997443548",
      "asyncId": 247,
      "triggerAsyncId": 246,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        250,
        250,
        248
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 48
    },
    "49": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578977302091585",
      "endTime": "578982354863011",
      "elapsedTime": "5052771426",
      "asyncId": 248,
      "triggerAsyncId": 247,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        249,
        249
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 49
    },
    "50": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975933584108",
      "endTime": "578975960134039",
      "elapsedTime": "26549931",
      "asyncId": 249,
      "triggerAsyncId": 248,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        340,
        340,
        339,
        339
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 50
    },
    "51": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975930141365",
      "endTime": "578975983900522",
      "elapsedTime": "53759157",
      "asyncId": 250,
      "triggerAsyncId": 247,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 51
    },
    "52": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975930395381",
      "endTime": "578975986046855",
      "elapsedTime": "55651474",
      "asyncId": 251,
      "triggerAsyncId": 245,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        392,
        392,
        391,
        391
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 52
    },
    "53": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975930825096",
      "endTime": "578975981191223",
      "elapsedTime": "50366127",
      "asyncId": 252,
      "triggerAsyncId": 167,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        271,
        271
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 53
    },
    "54": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975934657741",
      "endTime": "578975934991637",
      "elapsedTime": "333896",
      "asyncId": 253,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        255,
        255
      ],
      "uniqueid": 54
    },
    "55": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578975934929731",
      "endTime": "578975934952413",
      "elapsedTime": "22682",
      "asyncId": 254,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 55
    },
    "56": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578975935274317",
      "endTime": "578975961165964",
      "elapsedTime": "25891647",
      "asyncId": 255,
      "triggerAsyncId": 253,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        344,
        344,
        343,
        343
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 56
    },
    "57": {
      "source": "node_modules/jest-util/build/isPromise.js:17:40:17:40",
      "startTime": "578976175496528",
      "endTime": "578976175515704",
      "elapsedTime": "19176",
      "asyncId": 256,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " isPromise",
      "userCode": false,
      "triggers": [
        272,
        272
      ],
      "line": "\nconst Promise = global.Promise; // see ES2015 spec 25.4.4.5, https://stackoverflow.com/a/38339199\n\nconst isPromise = candidate => Promise.resolve(candidate) === candidate;\n\nvar _default = isPromise;\nexports.default = _default",
      "startLine": 17,
      "startCol": 40,
      "endLine": 17,
      "endCol": 40,
      "file": "node_modules/jest-util/build/isPromise.js",
      "uniqueid": 57
    },
    "58": {
      "source": "node_modules/jest-util/build/isPromise.js:17:40:17:40",
      "startTime": "578976175963263",
      "endTime": "578976175980064",
      "elapsedTime": "16801",
      "asyncId": 257,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " isPromise",
      "userCode": false,
      "triggers": [
        259,
        259
      ],
      "line": "\nconst Promise = global.Promise; // see ES2015 spec 25.4.4.5, https://stackoverflow.com/a/38339199\n\nconst isPromise = candidate => Promise.resolve(candidate) === candidate;\n\nvar _default = isPromise;\nexports.default = _default",
      "startLine": 17,
      "startCol": 40,
      "endLine": 17,
      "endCol": 40,
      "file": "node_modules/jest-util/build/isPromise.js",
      "uniqueid": 58
    },
    "59": {
      "source": "node_modules/jest-jasmine2/build/index.js:233:13:233:13",
      "startTime": "578976176334148",
      "endTime": "578976317094548",
      "elapsedTime": "140760400",
      "asyncId": 258,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " jasmine2",
      "userCode": false,
      "line": "\n  }\n\n  await env.execute();\n  const results = await reporter.getResults();\n  return addSnapshotData(results, snapshotState);\n",
      "startLine": 233,
      "startCol": 13,
      "endLine": 233,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/index.js",
      "triggers": [],
      "uniqueid": 59
    },
    "60": {
      "source": "node_modules/jest-jasmine2/build/treeProcessor.js:78:10:78:10",
      "startTime": "578976176907132",
      "endTime": "578976316972279",
      "elapsedTime": "140065147",
      "asyncId": 259,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " treeProcessor",
      "userCode": false,
      "triggers": [
        348,
        348,
        347,
        347,
        264,
        264,
        266
      ],
      "line": "\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}",
      "startLine": 78,
      "startCol": 10,
      "endLine": 78,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/treeProcessor.js",
      "uniqueid": 60
    },
    "61": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578976177687535",
      "endTime": "578976177726739",
      "elapsedTime": "39204",
      "asyncId": 260,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "triggers": [
        273,
        273
      ],
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "uniqueid": 61
    },
    "62": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578975936884595",
      "endTime": "578975937214193",
      "elapsedTime": "329598",
      "asyncId": 261,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        263,
        263
      ],
      "uniqueid": 62
    },
    "63": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578976178517681",
      "endTime": "578976178533942",
      "elapsedTime": "16261",
      "asyncId": 262,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        263,
        263
      ],
      "uniqueid": 63
    },
    "64": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578976178922560",
      "endTime": "578976316534157",
      "elapsedTime": "137611597",
      "asyncId": 263,
      "triggerAsyncId": 262,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        352,
        352,
        351,
        351,
        273,
        275,
        282,
        271,
        272,
        280,
        313,
        284
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 64
    },
    "65": {
      "source": "node_modules/jest-jasmine2/build/treeProcessor.js:78:10:78:10",
      "startTime": "578976179214407",
      "endTime": "578976316589942",
      "elapsedTime": "137375535",
      "asyncId": 264,
      "triggerAsyncId": 259,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " treeProcessor",
      "userCode": false,
      "triggers": [
        274,
        274,
        265
      ],
      "line": "\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}",
      "startLine": 78,
      "startCol": 10,
      "endLine": 78,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/treeProcessor.js",
      "uniqueid": 65
    },
    "66": {
      "source": "node_modules/jest-jasmine2/build/treeProcessor.js:78:10:78:10",
      "startTime": "578976179478282",
      "endTime": "578976316998428",
      "elapsedTime": "137520146",
      "asyncId": 265,
      "triggerAsyncId": 264,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " treeProcessor",
      "userCode": false,
      "line": "\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}",
      "startLine": 78,
      "startCol": 10,
      "endLine": 78,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/treeProcessor.js",
      "triggers": [],
      "uniqueid": 66
    },
    "67": {
      "source": "node_modules/jest-jasmine2/build/index.js:233:13:233:13",
      "startTime": "578976179743619",
      "endTime": "578976317122610",
      "elapsedTime": "137378991",
      "asyncId": 266,
      "triggerAsyncId": 259,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " jasmine2",
      "userCode": false,
      "line": "\n  }\n\n  await env.execute();\n  const results = await reporter.getResults();\n  return addSnapshotData(results, snapshotState);\n",
      "startLine": 233,
      "startCol": 13,
      "endLine": 233,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/index.js",
      "triggers": [],
      "uniqueid": 67
    },
    "68": {
      "source": "node_modules/jest-runner/build/runTest.js:380:22:380:22",
      "startTime": "578976179956729",
      "endTime": "578976317159991",
      "elapsedTime": "137203262",
      "asyncId": 267,
      "triggerAsyncId": 37,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment",
      "startLine": 380,
      "startCol": 22,
      "endLine": 380,
      "endCol": 22,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        285,
        268
      ],
      "uniqueid": 68
    },
    "69": {
      "source": "node_modules/jest-runner/build/runTest.js:380:22:380:22",
      "startTime": "578976180172253",
      "endTime": "578976317415450",
      "elapsedTime": "137243197",
      "asyncId": 268,
      "triggerAsyncId": 267,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment",
      "startLine": 380,
      "startCol": 22,
      "endLine": 380,
      "endCol": 22,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [],
      "uniqueid": 69
    },
    "70": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976180415168",
      "endTime": "578976318802329",
      "elapsedTime": "138387161",
      "asyncId": 269,
      "triggerAsyncId": 37,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        614,
        612
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 70
    },
    "71": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976180926327",
      "endTime": "578976184973704",
      "elapsedTime": "4047377",
      "asyncId": 270,
      "triggerAsyncId": 129,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 71
    },
    "72": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578976181433287",
      "endTime": "578976316395377",
      "elapsedTime": "134962090",
      "asyncId": 271,
      "triggerAsyncId": 263,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        281
      ],
      "uniqueid": 72
    },
    "73": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578976181708523",
      "endTime": "578976316422348",
      "elapsedTime": "134713825",
      "asyncId": 272,
      "triggerAsyncId": 263,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        278,
        278
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 73
    },
    "74": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578976182067716",
      "endTime": "578976182085019",
      "elapsedTime": "17303",
      "asyncId": 273,
      "triggerAsyncId": 263,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 74
    },
    "75": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578975936755974",
      "endTime": "578975991050926",
      "elapsedTime": "54294952",
      "asyncId": 274,
      "triggerAsyncId": 264,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 75
    },
    "76": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578976182642624",
      "endTime": "578976182658383",
      "elapsedTime": "15759",
      "asyncId": 275,
      "triggerAsyncId": 263,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "triggers": [
        412,
        411,
        412,
        411,
        276,
        276
      ],
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 76
    },
    "77": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578976182959889",
      "endTime": "578976302016873",
      "elapsedTime": "119056984",
      "asyncId": 276,
      "triggerAsyncId": 275,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        311,
        311,
        292,
        306,
        294,
        293,
        292,
        291,
        290,
        289,
        288,
        287,
        286,
        304,
        308,
        317,
        277,
        277
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 77
    },
    "78": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578976183243761",
      "endTime": "578976316274200",
      "elapsedTime": "133030439",
      "asyncId": 277,
      "triggerAsyncId": 276,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        308,
        308,
        563,
        565,
        571,
        561,
        562,
        569,
        586,
        311
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 78
    },
    "79": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578976183459205",
      "endTime": "578976316331407",
      "elapsedTime": "132872202",
      "asyncId": 278,
      "triggerAsyncId": 272,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        303,
        303,
        279
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 79
    },
    "80": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578976183665852",
      "endTime": "578976316444670",
      "elapsedTime": "132778818",
      "asyncId": 279,
      "triggerAsyncId": 278,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        285,
        285
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 80
    },
    "81": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976183893579",
      "endTime": "578976316476269",
      "elapsedTime": "132582690",
      "asyncId": 280,
      "triggerAsyncId": 263,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 81
    },
    "82": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976184282318",
      "endTime": "578976184299740",
      "elapsedTime": "17422",
      "asyncId": 282,
      "triggerAsyncId": 263,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        283,
        283
      ],
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 82
    },
    "83": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578975942822266",
      "endTime": "578975965524494",
      "elapsedTime": "22702228",
      "asyncId": 283,
      "triggerAsyncId": 282,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        357,
        357,
        356,
        356,
        355,
        355
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 83
    },
    "84": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578977408606168",
      "endTime": "578982334138481",
      "elapsedTime": "4925532313",
      "asyncId": 284,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 84
    },
    "85": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578977362589605",
      "endTime": "578982354907565",
      "elapsedTime": "4992317960",
      "asyncId": 285,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        404,
        403,
        404,
        403
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 85
    },
    "86": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578977892509905",
      "endTime": "578977892527297",
      "elapsedTime": "17392",
      "asyncId": 286,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "triggers": [
        304,
        304,
        305,
        287,
        287
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 86
    },
    "87": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578977409344682",
      "endTime": "578982334170531",
      "elapsedTime": "4924825849",
      "asyncId": 287,
      "triggerAsyncId": 286,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        289,
        289,
        303,
        288
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 87
    },
    "88": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578977363284668",
      "endTime": "578982354941298",
      "elapsedTime": "4991656630",
      "asyncId": 288,
      "triggerAsyncId": 287,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        302
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 88
    },
    "89": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978814954591",
      "endTime": "578978814973347",
      "elapsedTime": "18756",
      "asyncId": 289,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        362,
        362,
        361,
        361,
        301,
        290
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 89
    },
    "90": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978815420275",
      "endTime": "578979178878494",
      "elapsedTime": "363458219",
      "asyncId": 290,
      "triggerAsyncId": 289,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        305,
        305,
        300
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 90
    },
    "91": {
      "source": "node_modules/@nestjs/core/scanner.js:223:37:223:37",
      "startTime": "578976189650711",
      "endTime": "578976206729397",
      "elapsedTime": "17078686",
      "asyncId": 291,
      "triggerAsyncId": 276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.registerCoreModule",
      "userCode": false,
      "triggers": [
        293,
        293,
        299
      ],
      "line": "\n    async registerCoreModule() {\n        const module = this.container.createCoreModule();\n        const instance = await this.scanForModules(module);\n        this.container.registerCoreModuleRef(instance);\n    }\n    /*",
      "startLine": 223,
      "startCol": 37,
      "endLine": 223,
      "endCol": 37,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 91
    },
    "92": {
      "source": "node_modules/@nestjs/core/scanner.js:31:43:31:43",
      "startTime": "578976190096898",
      "endTime": "578976206604994",
      "elapsedTime": "16508096",
      "asyncId": 292,
      "triggerAsyncId": 276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scanForModules",
      "userCode": false,
      "line": "\n    }\n    async scanForModules(moduleDefinition, scope = [], ctxRegistry = []) {\n        const moduleInstance = await this.insertModule(moduleDefinition, scope);\n        moduleDefinition =\n            moduleDefinition instanceof Promise\n                ? await moduleDefinitio",
      "startLine": 31,
      "startCol": 43,
      "endLine": 31,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/scanner.js",
      "triggers": [
        298
      ],
      "uniqueid": 92
    },
    "93": {
      "source": "node_modules/@nestjs/core/scanner.js:65:31:65:31",
      "startTime": "578976190610400",
      "endTime": "578976206514644",
      "elapsedTime": "15904244",
      "asyncId": 293,
      "triggerAsyncId": 276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.insertModule",
      "userCode": false,
      "triggers": [
        366,
        366,
        365,
        365,
        315
      ],
      "line": "\n            return this.container.addModule(module.forwardRef(), scope);\n        }\n        return this.container.addModule(module, scope);\n    }\n    async scanModulesForDependencies() {\n        const modules = this.container.getModules()",
      "startLine": 65,
      "startCol": 31,
      "endLine": 65,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 93
    },
    "94": {
      "source": "node_modules/@nestjs/core/injector/container.js:47:76:47:76",
      "startTime": "578976191104316",
      "endTime": "578976203975505",
      "elapsedTime": "12871189",
      "asyncId": 294,
      "triggerAsyncId": 276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NestContainer.addModule",
      "userCode": false,
      "triggers": [
        306,
        306,
        295,
        297
      ],
      "line": "\n            throw new undefined_forwardref_exception_1.UndefinedForwardRefException(scope);\n        }\n        const { type, dynamicMetadata, token } = await this.moduleCompiler.compile(metatype);\n        if (this.modules.has(token)) {\n            return;\n        ",
      "startLine": 47,
      "startCol": 76,
      "endLine": 47,
      "endCol": 76,
      "file": "node_modules/@nestjs/core/injector/container.js",
      "uniqueid": 94
    },
    "95": {
      "source": "node_modules/@nestjs/core/injector/container.js:47:76:47:76",
      "startTime": "578976191487164",
      "endTime": "578976197754152",
      "elapsedTime": "6266988",
      "asyncId": 295,
      "triggerAsyncId": 294,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NestContainer.addModule",
      "userCode": false,
      "triggers": [
        301,
        301,
        296
      ],
      "line": "\n            throw new undefined_forwardref_exception_1.UndefinedForwardRefException(scope);\n        }\n        const { type, dynamicMetadata, token } = await this.moduleCompiler.compile(metatype);\n        if (this.modules.has(token)) {\n            return;\n        ",
      "startLine": 47,
      "startCol": 76,
      "endLine": 47,
      "endCol": 76,
      "file": "node_modules/@nestjs/core/injector/container.js",
      "uniqueid": 95
    },
    "96": {
      "source": "node_modules/@nestjs/core/injector/container.js:47:76:47:76",
      "startTime": "578976197729916",
      "endTime": "578976204026801",
      "elapsedTime": "6296885",
      "asyncId": 296,
      "triggerAsyncId": 295,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NestContainer.addModule",
      "userCode": false,
      "line": "\n            throw new undefined_forwardref_exception_1.UndefinedForwardRefException(scope);\n        }\n        const { type, dynamicMetadata, token } = await this.moduleCompiler.compile(metatype);\n        if (this.modules.has(token)) {\n            return;\n        ",
      "startLine": 47,
      "startCol": 76,
      "endLine": 47,
      "endCol": 76,
      "file": "node_modules/@nestjs/core/injector/container.js",
      "triggers": [],
      "uniqueid": 96
    },
    "97": {
      "source": "node_modules/@nestjs/core/scanner.js:65:31:65:31",
      "startTime": "578976198362202",
      "endTime": "578976206336510",
      "elapsedTime": "7974308",
      "asyncId": 297,
      "triggerAsyncId": 294,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.insertModule",
      "userCode": false,
      "triggers": [
        300,
        300,
        319,
        318
      ],
      "line": "\n            return this.container.addModule(module.forwardRef(), scope);\n        }\n        return this.container.addModule(module, scope);\n    }\n    async scanModulesForDependencies() {\n        const modules = this.container.getModules()",
      "startLine": 65,
      "startCol": 31,
      "endLine": 65,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 97
    },
    "98": {
      "source": "node_modules/@nestjs/core/scanner.js:223:37:223:37",
      "startTime": "578976198720634",
      "endTime": "578976206765705",
      "elapsedTime": "8045071",
      "asyncId": 298,
      "triggerAsyncId": 292,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.registerCoreModule",
      "userCode": false,
      "triggers": [
        299,
        299
      ],
      "line": "\n    async registerCoreModule() {\n        const module = this.container.createCoreModule();\n        const instance = await this.scanForModules(module);\n        this.container.registerCoreModuleRef(instance);\n    }\n    /*",
      "startLine": 223,
      "startCol": 37,
      "endLine": 223,
      "endCol": 37,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 98
    },
    "99": {
      "source": "node_modules/@nestjs/core/scanner.js:24:20:24:20",
      "startTime": "578976199019845",
      "endTime": "578976206867486",
      "elapsedTime": "7847641",
      "asyncId": 299,
      "triggerAsyncId": 291,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scan",
      "userCode": false,
      "triggers": [
        371,
        371,
        370,
        370,
        369,
        369
      ],
      "line": "\n    }\n    async scan(module) {\n        await this.registerCoreModule();\n        await this.scanForModules(module);\n        await this.scanModulesForDependencies();\n        this.addScopedEnhancersMetadata()",
      "startLine": 24,
      "startCol": 20,
      "endLine": 24,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 99
    },
    "100": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:41:28:41:28",
      "startTime": "578976199301132",
      "endTime": "578976209247287",
      "elapsedTime": "9946155",
      "asyncId": 300,
      "triggerAsyncId": 290,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "triggers": [
        323,
        325,
        324,
        323,
        322
      ],
      "line": "\n    async compile() {\n        this.applyLogger();\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders()",
      "startLine": 41,
      "startCol": 28,
      "endLine": 41,
      "endCol": 28,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "uniqueid": 100
    },
    "101": {
      "source": "apps/api/src/model/lib/xml.service.spec.ts:10:8:10:8",
      "startTime": "578976199551111",
      "endTime": "578976255838157",
      "elapsedTime": "56287046",
      "asyncId": 301,
      "triggerAsyncId": 289,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        408,
        407,
        408,
        407,
        350,
        356,
        355,
        360,
        359,
        366,
        374,
        382,
        388,
        387,
        392,
        391,
        396,
        395,
        416,
        422,
        421,
        426,
        425,
        432,
        354,
        358,
        372,
        380,
        386,
        390,
        394,
        420,
        424,
        348,
        364,
        373,
        381,
        414,
        430,
        349,
        365,
        371,
        379,
        415,
        431,
        347,
        363,
        413,
        429,
        370,
        378,
        346,
        362,
        412,
        428,
        398,
        436,
        345,
        411,
        344,
        410,
        443,
        343,
        342
      ],
      "line": "\n    const app = await Test.createTestingModule({\n      providers: [XmlService],\n    }).compile();\n\n    service = app.get<XmlService>(XmlService);\n  })",
      "startLine": 10,
      "startCol": 8,
      "endLine": 10,
      "endCol": 8,
      "file": "apps/api/src/model/lib/xml.service.spec.ts",
      "uniqueid": 101
    },
    "102": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:58:37:58:37",
      "startTime": "578976199781963",
      "endTime": "578976301705690",
      "elapsedTime": "101923727",
      "asyncId": 302,
      "triggerAsyncId": 288,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "triggers": [
        307,
        307
      ],
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 58,
      "startCol": 37,
      "endLine": 58,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 102
    },
    "103": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:61:21:61:21",
      "startTime": "578976200050988",
      "endTime": "578976301803032",
      "elapsedTime": "101752044",
      "asyncId": 303,
      "triggerAsyncId": 287,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 61,
      "startCol": 21,
      "endLine": 61,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 103
    },
    "104": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976200223671",
      "endTime": "578976301832247",
      "elapsedTime": "101608576",
      "asyncId": 304,
      "triggerAsyncId": 276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        310
      ],
      "uniqueid": 104
    },
    "105": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976200553480",
      "endTime": "578976200568618",
      "elapsedTime": "15138",
      "asyncId": 306,
      "triggerAsyncId": 276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 105
    },
    "106": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578975944990751",
      "endTime": "578975991120226",
      "elapsedTime": "46129475",
      "asyncId": 307,
      "triggerAsyncId": 302,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 106
    },
    "107": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578976201112247",
      "endTime": "578976301930862",
      "elapsedTime": "100818615",
      "asyncId": 308,
      "triggerAsyncId": 276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "triggers": [
        416,
        415,
        416,
        415
      ],
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "uniqueid": 107
    },
    "108": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:27:23:27:23",
      "startTime": "578975949780500",
      "endTime": "578976003575384",
      "elapsedTime": "53794884",
      "asyncId": 309,
      "triggerAsyncId": 167,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstances",
      "userCode": false,
      "triggers": [
        312,
        312
      ],
      "line": "\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module)",
      "startLine": 27,
      "startCol": 23,
      "endLine": 27,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 108
    },
    "109": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578976201463455",
      "endTime": "578976301962792",
      "elapsedTime": "100499337",
      "asyncId": 310,
      "triggerAsyncId": 304,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 109
    },
    "110": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976201636230",
      "endTime": "578976316354290",
      "elapsedTime": "114718060",
      "asyncId": 311,
      "triggerAsyncId": 277,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 110
    },
    "111": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578975950508234",
      "endTime": "578976003670543",
      "elapsedTime": "53162309",
      "asyncId": 312,
      "triggerAsyncId": 309,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 111
    },
    "112": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578975951086829",
      "endTime": "578976003998958",
      "elapsedTime": "52912129",
      "asyncId": 314,
      "triggerAsyncId": 208,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 112
    },
    "113": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976204199294",
      "endTime": "578976206636393",
      "elapsedTime": "2437099",
      "asyncId": 315,
      "triggerAsyncId": 293,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        320,
        320
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 113
    },
    "114": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578975947335226",
      "endTime": "578975975818732",
      "elapsedTime": "28483506",
      "asyncId": 316,
      "triggerAsyncId": 217,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        319,
        319
      ],
      "uniqueid": 114
    },
    "115": {
      "source": "node_modules/@nestjs/core/injector/container.js:53:20:53:20",
      "startTime": "578976205415063",
      "endTime": "578976206386194",
      "elapsedTime": "971131",
      "asyncId": 318,
      "triggerAsyncId": 297,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NestContainer.addModule",
      "userCode": false,
      "line": "\n        const moduleRef = new module_1.Module(type, this);\n        this.modules.set(token, moduleRef);\n        await this.addDynamicMetadata(token, dynamicMetadata, [].concat(scope, type));\n        if (this.isGlobalModule(type, dynamicMetadata)) {\n            this.addGlobalModule(moduleRef);\n        ",
      "startLine": 53,
      "startCol": 20,
      "endLine": 53,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/container.js",
      "triggers": [
        321
      ],
      "uniqueid": 115
    },
    "116": {
      "source": "node_modules/@nestjs/core/injector/container.js:65:20:65:20",
      "startTime": "578976205752736",
      "endTime": "578976205769508",
      "elapsedTime": "16772",
      "asyncId": 319,
      "triggerAsyncId": 297,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NestContainer.addDynamicMetadata",
      "userCode": false,
      "triggers": [
        379,
        379,
        320
      ],
      "line": "\n        this.dynamicModulesMetadata.set(token, dynamicModuleMetadata);\n        const { imports } = dynamicModuleMetadata;\n        await this.addDynamicModules(imports, scope);\n    }\n    async addDynamicModules(modules, scope) {\n        if (!modules) ",
      "startLine": 65,
      "startCol": 20,
      "endLine": 65,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/container.js",
      "uniqueid": 116
    },
    "117": {
      "source": "node_modules/@nestjs/core/injector/container.js:53:20:53:20",
      "startTime": "578976206068859",
      "endTime": "578976206419276",
      "elapsedTime": "350417",
      "asyncId": 320,
      "triggerAsyncId": 319,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NestContainer.addModule",
      "userCode": false,
      "line": "\n        const moduleRef = new module_1.Module(type, this);\n        this.modules.set(token, moduleRef);\n        await this.addDynamicMetadata(token, dynamicMetadata, [].concat(scope, type));\n        if (this.isGlobalModule(type, dynamicMetadata)) {\n            this.addGlobalModule(moduleRef);\n        ",
      "startLine": 53,
      "startCol": 20,
      "endLine": 53,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/container.js",
      "triggers": [],
      "uniqueid": 117
    },
    "118": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976206319889",
      "endTime": "578976206553798",
      "elapsedTime": "233909",
      "asyncId": 321,
      "triggerAsyncId": 318,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        324,
        324
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 118
    },
    "119": {
      "source": "node_modules/@nestjs/core/scanner.js:25:20:25:20",
      "startTime": "578976207130779",
      "endTime": "578976210549989",
      "elapsedTime": "3419210",
      "asyncId": 322,
      "triggerAsyncId": 300,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scan",
      "userCode": false,
      "triggers": [
        323,
        323,
        330
      ],
      "line": "\n    async scan(module) {\n        await this.registerCoreModule();\n        await this.scanForModules(module);\n        await this.scanModulesForDependencies();\n        this.addScopedEnhancersMetadata();\n        this.container.bindGlobalScope()",
      "startLine": 25,
      "startCol": 20,
      "endLine": 25,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 119
    },
    "120": {
      "source": "node_modules/@nestjs/core/scanner.js:31:43:31:43",
      "startTime": "578976207384755",
      "endTime": "578976210475920",
      "elapsedTime": "3091165",
      "asyncId": 323,
      "triggerAsyncId": 300,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scanForModules",
      "userCode": false,
      "line": "\n    }\n    async scanForModules(moduleDefinition, scope = [], ctxRegistry = []) {\n        const moduleInstance = await this.insertModule(moduleDefinition, scope);\n        moduleDefinition =\n            moduleDefinition instanceof Promise\n                ? await moduleDefinitio",
      "startLine": 31,
      "startCol": 43,
      "endLine": 31,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/scanner.js",
      "triggers": [
        329
      ],
      "uniqueid": 120
    },
    "121": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578977410763271",
      "endTime": "578979185271559",
      "elapsedTime": "1774508288",
      "asyncId": 324,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        331
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 121
    },
    "122": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578977391825761",
      "endTime": "578982354981714",
      "elapsedTime": "4963155953",
      "asyncId": 325,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        328,
        328,
        326,
        328
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 122
    },
    "123": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578977892744354",
      "endTime": "578977892762398",
      "elapsedTime": "18044",
      "asyncId": 326,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "triggers": [
        327,
        327,
        327,
        327
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 123
    },
    "124": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578978814244701",
      "endTime": "578982334232567",
      "elapsedTime": "3519987866",
      "asyncId": 327,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        328
      ],
      "uniqueid": 124
    },
    "125": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578977392503281",
      "endTime": "578982355018823",
      "elapsedTime": "4962515542",
      "asyncId": 328,
      "triggerAsyncId": 327,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        332
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 125
    },
    "126": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978853559791",
      "endTime": "578978853578135",
      "elapsedTime": "18344",
      "asyncId": 329,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        334,
        334,
        330,
        330
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 126
    },
    "127": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978814987894",
      "endTime": "578982334268595",
      "elapsedTime": "3519280701",
      "asyncId": 330,
      "triggerAsyncId": 329,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        333,
        333,
        335,
        334
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 127
    },
    "128": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976209699615",
      "endTime": "578976210507560",
      "elapsedTime": "807945",
      "asyncId": 331,
      "triggerAsyncId": 324,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        332,
        332
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 128
    },
    "129": {
      "source": "node_modules/@nestjs/core/injector/container.js:53:20:53:20",
      "startTime": "578976210055823",
      "endTime": "578976210071833",
      "elapsedTime": "16010",
      "asyncId": 332,
      "triggerAsyncId": 328,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NestContainer.addModule",
      "userCode": false,
      "line": "\n        const moduleRef = new module_1.Module(type, this);\n        this.modules.set(token, moduleRef);\n        await this.addDynamicMetadata(token, dynamicMetadata, [].concat(scope, type));\n        if (this.isGlobalModule(type, dynamicMetadata)) {\n            this.addGlobalModule(moduleRef);\n        ",
      "startLine": 53,
      "startCol": 20,
      "endLine": 53,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/container.js",
      "triggers": [
        333
      ],
      "uniqueid": 129
    },
    "130": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976210326500",
      "endTime": "578976210424163",
      "elapsedTime": "97663",
      "asyncId": 333,
      "triggerAsyncId": 332,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        381,
        381
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 130
    },
    "131": {
      "source": "node_modules/@nestjs/core/scanner.js:26:20:26:20",
      "startTime": "578976210893704",
      "endTime": "578976214443648",
      "elapsedTime": "3549944",
      "asyncId": 334,
      "triggerAsyncId": 330,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scan",
      "userCode": false,
      "line": "\n        await this.registerCoreModule();\n        await this.scanForModules(module);\n        await this.scanModulesForDependencies();\n        this.addScopedEnhancersMetadata();\n        this.container.bindGlobalScope();\n    ",
      "startLine": 26,
      "startCol": 20,
      "endLine": 26,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/scanner.js",
      "triggers": [
        337
      ],
      "uniqueid": 131
    },
    "132": {
      "source": "node_modules/@nestjs/core/scanner.js:70:24:70:24",
      "startTime": "578976211217881",
      "endTime": "578976211276882",
      "elapsedTime": "59001",
      "asyncId": 335,
      "triggerAsyncId": 330,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scanModulesForDependencies",
      "userCode": false,
      "triggers": [
        338,
        338,
        336
      ],
      "line": "\n        const modules = this.container.getModules();\n        for (const [token, { metatype }] of modules) {\n            await this.reflectImports(metatype, token, metatype.name);\n            this.reflectProviders(metatype, token);\n            this.reflectControllers(metatype, token);\n            this.reflectExports(metatype, token)",
      "startLine": 70,
      "startCol": 24,
      "endLine": 70,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 132
    },
    "133": {
      "source": "node_modules/@nestjs/core/scanner.js:26:20:26:20",
      "startTime": "578976211512614",
      "endTime": "578976213811634",
      "elapsedTime": "2299020",
      "asyncId": 336,
      "triggerAsyncId": 335,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scan",
      "userCode": false,
      "triggers": [
        337,
        337,
        338
      ],
      "line": "\n        await this.registerCoreModule();\n        await this.scanForModules(module);\n        await this.scanModulesForDependencies();\n        this.addScopedEnhancersMetadata();\n        this.container.bindGlobalScope();\n    ",
      "startLine": 26,
      "startCol": 20,
      "endLine": 26,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 133
    },
    "134": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976211711266",
      "endTime": "578976214678889",
      "elapsedTime": "2967623",
      "asyncId": 337,
      "triggerAsyncId": 334,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        375,
        375
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 134
    },
    "135": {
      "source": "node_modules/@nestjs/core/scanner.js:70:24:70:24",
      "startTime": "578976213517211",
      "endTime": "578976213545254",
      "elapsedTime": "28043",
      "asyncId": 338,
      "triggerAsyncId": 336,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scanModulesForDependencies",
      "userCode": false,
      "line": "\n        const modules = this.container.getModules();\n        for (const [token, { metatype }] of modules) {\n            await this.reflectImports(metatype, token, metatype.name);\n            this.reflectProviders(metatype, token);\n            this.reflectControllers(metatype, token);\n            this.reflectExports(metatype, token)",
      "startLine": 70,
      "startCol": 24,
      "endLine": 70,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/scanner.js",
      "triggers": [
        339
      ],
      "uniqueid": 135
    },
    "136": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976213794451",
      "endTime": "578976214476369",
      "elapsedTime": "681918",
      "asyncId": 339,
      "triggerAsyncId": 338,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        342,
        342,
        341
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 136
    },
    "137": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578975959268997",
      "endTime": "578975959285167",
      "elapsedTime": "16170",
      "asyncId": 340,
      "triggerAsyncId": 249,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        341,
        341
      ],
      "uniqueid": 137
    },
    "138": {
      "source": "node_modules/@nestjs/core/scanner.js:75:14:75:14",
      "startTime": "578976214341347",
      "endTime": "578976214403292",
      "elapsedTime": "61945",
      "asyncId": 341,
      "triggerAsyncId": 339,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " DependenciesScanner.scanModulesForDependencies",
      "userCode": false,
      "triggers": [
        377,
        377
      ],
      "line": "\n            this.reflectExports(metatype, token);\n        }\n        this.calculateModulesDistance(modules);\n    }\n    async reflectImports(module, token, context) {\n        const modules = ",
      "startLine": 75,
      "startCol": 14,
      "endLine": 75,
      "endCol": 14,
      "file": "node_modules/@nestjs/core/scanner.js",
      "uniqueid": 138
    },
    "139": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:43:35:43:35",
      "startTime": "578976215053862",
      "endTime": "578976301033049",
      "elapsedTime": "85979187",
      "asyncId": 342,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "line": "\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders();\n        const root = this.getRootModule();\n        return new testing_module_1.TestingModule(this.container, [], root, this.applicationConfig)",
      "startLine": 43,
      "startCol": 35,
      "endLine": 43,
      "endCol": 35,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "triggers": [
        448
      ],
      "uniqueid": 139
    },
    "140": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578976215661241",
      "endTime": "578976300960984",
      "elapsedTime": "85299743",
      "asyncId": 343,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "triggers": [
        346,
        346,
        447
      ],
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 140
    },
    "141": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578976216274260",
      "endTime": "578976295083295",
      "elapsedTime": "78809035",
      "asyncId": 345,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        409
      ],
      "uniqueid": 141
    },
    "142": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976216729072",
      "endTime": "578976294578319",
      "elapsedTime": "77849247",
      "asyncId": 346,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        399
      ],
      "uniqueid": 142
    },
    "143": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976217156293",
      "endTime": "578976286816378",
      "elapsedTime": "69660085",
      "asyncId": 347,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        350,
        350,
        353
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 143
    },
    "144": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976217539993",
      "endTime": "578976285280910",
      "elapsedTime": "67740917",
      "asyncId": 348,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        349,
        349
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 144
    },
    "145": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976217994615",
      "endTime": "578976286463106",
      "elapsedTime": "68468491",
      "asyncId": 349,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        352
      ],
      "uniqueid": 145
    },
    "146": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578976218454046",
      "endTime": "578976218474625",
      "elapsedTime": "20579",
      "asyncId": 350,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        351
      ],
      "uniqueid": 146
    },
    "147": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976218828628",
      "endTime": "578976257912956",
      "elapsedTime": "39084328",
      "asyncId": 351,
      "triggerAsyncId": 350,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        354,
        354,
        451,
        450,
        449
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 147
    },
    "148": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976219170499",
      "endTime": "578976286846084",
      "elapsedTime": "67675585",
      "asyncId": 352,
      "triggerAsyncId": 349,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        353,
        353
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 148
    },
    "149": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976219459200",
      "endTime": "578976290381722",
      "elapsedTime": "70922522",
      "asyncId": 353,
      "triggerAsyncId": 347,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        530,
        529
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 149
    },
    "150": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976219746970",
      "endTime": "578976282435145",
      "elapsedTime": "62688175",
      "asyncId": 354,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        400
      ],
      "uniqueid": 150
    },
    "151": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976220078461",
      "endTime": "578976220468983",
      "elapsedTime": "390522",
      "asyncId": 355,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        360,
        360,
        357
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 151
    },
    "152": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976220413069",
      "endTime": "578976220431914",
      "elapsedTime": "18845",
      "asyncId": 356,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        359,
        359
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 152
    },
    "153": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976220782551",
      "endTime": "578976259117955",
      "elapsedTime": "38335404",
      "asyncId": 357,
      "triggerAsyncId": 355,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        358,
        358,
        456,
        455
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 153
    },
    "154": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976221083655",
      "endTime": "578976282498183",
      "elapsedTime": "61414528",
      "asyncId": 358,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        401
      ],
      "uniqueid": 154
    },
    "155": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976221390070",
      "endTime": "578976221777156",
      "elapsedTime": "387086",
      "asyncId": 359,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        383,
        383,
        361
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 155
    },
    "156": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976221722794",
      "endTime": "578976221741389",
      "elapsedTime": "18595",
      "asyncId": 360,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 156
    },
    "157": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976222098197",
      "endTime": "578976260206455",
      "elapsedTime": "38108258",
      "asyncId": 361,
      "triggerAsyncId": 359,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        364,
        364,
        460,
        459
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 157
    },
    "158": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976222391467",
      "endTime": "578976294639764",
      "elapsedTime": "72248297",
      "asyncId": 362,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        363,
        363,
        402
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 158
    },
    "159": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976222712609",
      "endTime": "578976286878084",
      "elapsedTime": "64165475",
      "asyncId": 363,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        369
      ],
      "uniqueid": 159
    },
    "160": {
      "source": "node_modules/lodash/lodash.js:6113:36:6113:36",
      "startTime": "578977437439288",
      "endTime": "578977437460799",
      "elapsedTime": "21511",
      "asyncId": 364,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runInContext",
      "userCode": false,
      "line": "\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) ",
      "startLine": 6113,
      "startCol": 36,
      "endLine": 6113,
      "endCol": 36,
      "file": "node_modules/lodash/lodash.js",
      "triggers": [],
      "uniqueid": 160
    },
    "161": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578977406890662",
      "endTime": "578982355054871",
      "elapsedTime": "4948164209",
      "asyncId": 365,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        368,
        368,
        368
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 161
    },
    "162": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578977892757519",
      "endTime": "578977892775342",
      "elapsedTime": "17823",
      "asyncId": 366,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "triggers": [
        367,
        367,
        367
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 162
    },
    "163": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578978859079478",
      "endTime": "578982334317827",
      "elapsedTime": "3475238349",
      "asyncId": 367,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        465,
        464,
        463,
        368
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 163
    },
    "164": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578977407564775",
      "endTime": "578982355080559",
      "elapsedTime": "4947515784",
      "asyncId": 368,
      "triggerAsyncId": 367,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 164
    },
    "165": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978875801635",
      "endTime": "578978875819910",
      "elapsedTime": "18275",
      "asyncId": 369,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        374,
        374,
        534,
        533,
        370,
        370,
        370
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 165
    },
    "166": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978860060186",
      "endTime": "578982334347803",
      "elapsedTime": "3474287617",
      "asyncId": 370,
      "triggerAsyncId": 369,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        373,
        373,
        403
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 166
    },
    "167": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976225319696",
      "endTime": "578976286580085",
      "elapsedTime": "61260389",
      "asyncId": 371,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        372,
        372,
        377
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 167
    },
    "168": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976225664743",
      "endTime": "578976283303824",
      "elapsedTime": "57639081",
      "asyncId": 372,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 168
    },
    "169": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976225987969",
      "endTime": "578976285538032",
      "elapsedTime": "59550063",
      "asyncId": 373,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        385,
        385,
        376
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 169
    },
    "170": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578976226332565",
      "endTime": "578976226350088",
      "elapsedTime": "17523",
      "asyncId": 374,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        375
      ],
      "uniqueid": 170
    },
    "171": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976226693692",
      "endTime": "578976264044169",
      "elapsedTime": "37350477",
      "asyncId": 375,
      "triggerAsyncId": 374,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        376,
        376,
        470,
        469
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 171
    },
    "172": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976226999836",
      "endTime": "578976286608859",
      "elapsedTime": "59609023",
      "asyncId": 376,
      "triggerAsyncId": 373,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 172
    },
    "173": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976227297935",
      "endTime": "578976288066632",
      "elapsedTime": "60768697",
      "asyncId": 377,
      "triggerAsyncId": 371,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        378,
        378,
        522,
        521
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 173
    },
    "174": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976227584081",
      "endTime": "578976294392711",
      "elapsedTime": "66808630",
      "asyncId": 378,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        404
      ],
      "uniqueid": 174
    },
    "175": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976227896888",
      "endTime": "578976286639457",
      "elapsedTime": "58742569",
      "asyncId": 379,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        380,
        380,
        385
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 175
    },
    "176": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976228266310",
      "endTime": "578976283401617",
      "elapsedTime": "55135307",
      "asyncId": 380,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 176
    },
    "177": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976228590378",
      "endTime": "578976286032369",
      "elapsedTime": "57441991",
      "asyncId": 381,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        382,
        382,
        384
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 177
    },
    "178": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578976228920757",
      "endTime": "578976228938470",
      "elapsedTime": "17713",
      "asyncId": 382,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        383
      ],
      "uniqueid": 178
    },
    "179": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976229290671",
      "endTime": "578976265442471",
      "elapsedTime": "36151800",
      "asyncId": 383,
      "triggerAsyncId": 382,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        384,
        384,
        474,
        473
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 179
    },
    "180": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976230384982",
      "endTime": "578976286667329",
      "elapsedTime": "56282347",
      "asyncId": 384,
      "triggerAsyncId": 381,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 180
    },
    "181": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976230683311",
      "endTime": "578976289185930",
      "elapsedTime": "58502619",
      "asyncId": 385,
      "triggerAsyncId": 379,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        386,
        386,
        526,
        525
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 181
    },
    "182": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976231018349",
      "endTime": "578976283502256",
      "elapsedTime": "52483907",
      "asyncId": 386,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        405
      ],
      "uniqueid": 182
    },
    "183": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976231375379",
      "endTime": "578976231778704",
      "elapsedTime": "403325",
      "asyncId": 387,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        390,
        390,
        389
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 183
    },
    "184": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976231717790",
      "endTime": "578976231742066",
      "elapsedTime": "24276",
      "asyncId": 388,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        389,
        389
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 184
    },
    "185": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976232104866",
      "endTime": "578976266616662",
      "elapsedTime": "34511796",
      "asyncId": 389,
      "triggerAsyncId": 387,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        478,
        477
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 185
    },
    "186": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976232397925",
      "endTime": "578976283561226",
      "elapsedTime": "51163301",
      "asyncId": 390,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        406
      ],
      "uniqueid": 186
    },
    "187": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976232699991",
      "endTime": "578976233099120",
      "elapsedTime": "399129",
      "asyncId": 391,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        394,
        394,
        393
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 187
    },
    "188": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976233044888",
      "endTime": "578976233063062",
      "elapsedTime": "18174",
      "asyncId": 392,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        393,
        393
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 188
    },
    "189": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976233409502",
      "endTime": "578976267700664",
      "elapsedTime": "34291162",
      "asyncId": 393,
      "triggerAsyncId": 391,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        482,
        481
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 189
    },
    "190": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976233695548",
      "endTime": "578976283622982",
      "elapsedTime": "49927434",
      "asyncId": 394,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        407
      ],
      "uniqueid": 190
    },
    "191": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976234017161",
      "endTime": "578976234481822",
      "elapsedTime": "464661",
      "asyncId": 395,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        398,
        398,
        397
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 191
    },
    "192": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976234423352",
      "endTime": "578976234444101",
      "elapsedTime": "20749",
      "asyncId": 396,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        397,
        397
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 192
    },
    "193": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976234781223",
      "endTime": "578976268780909",
      "elapsedTime": "33999686",
      "asyncId": 397,
      "triggerAsyncId": 395,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        486,
        485
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 193
    },
    "194": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:23:43:23",
      "startTime": "578976235035680",
      "endTime": "578976294935008",
      "elapsedTime": "59899328",
      "asyncId": 398,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfProviders",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 23,
      "endLine": 43,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        408
      ],
      "uniqueid": 194
    },
    "195": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578977892108092",
      "endTime": "578977892138589",
      "elapsedTime": "30497",
      "asyncId": 405,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 195
    },
    "196": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578977892748863",
      "endTime": "578977892766215",
      "elapsedTime": "17352",
      "asyncId": 406,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 196
    },
    "197": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578978817038648",
      "endTime": "578982355136274",
      "elapsedTime": "3538097626",
      "asyncId": 407,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        410,
        410
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 197
    },
    "198": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578976244745422",
      "endTime": "578976295119864",
      "elapsedTime": "50374442",
      "asyncId": 408,
      "triggerAsyncId": 398,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        409,
        409
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 198
    },
    "199": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978897204487",
      "endTime": "578978897226238",
      "elapsedTime": "21751",
      "asyncId": 409,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        546,
        545,
        410,
        410,
        410,
        410
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 199
    },
    "200": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978817834420",
      "endTime": "578982355198290",
      "elapsedTime": "3537363870",
      "asyncId": 410,
      "triggerAsyncId": 409,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        445
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 200
    },
    "201": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578976245446857",
      "endTime": "578976295149159",
      "elapsedTime": "49702302",
      "asyncId": 411,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        414,
        414,
        442
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 201
    },
    "202": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976245735067",
      "endTime": "578976294795376",
      "elapsedTime": "49060309",
      "asyncId": 412,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        413,
        413,
        437
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 202
    },
    "203": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976246042233",
      "endTime": "578976289223621",
      "elapsedTime": "43181388",
      "asyncId": 413,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        419
      ],
      "uniqueid": 203
    },
    "204": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976246378634",
      "endTime": "578976286201586",
      "elapsedTime": "39822952",
      "asyncId": 414,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        420,
        420,
        419,
        419
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 204
    },
    "205": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976246701539",
      "endTime": "578976286696273",
      "elapsedTime": "39994734",
      "asyncId": 415,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        418,
        418,
        418
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 205
    },
    "206": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578976247061033",
      "endTime": "578976247079357",
      "elapsedTime": "18324",
      "asyncId": 416,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        417,
        417,
        417
      ],
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 206
    },
    "207": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976247420947",
      "endTime": "578976270529547",
      "elapsedTime": "23108600",
      "asyncId": 417,
      "triggerAsyncId": 416,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        491,
        490,
        489
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 207
    },
    "208": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976247708386",
      "endTime": "578976289253778",
      "elapsedTime": "41545392",
      "asyncId": 418,
      "triggerAsyncId": 415,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        431,
        429,
        424,
        423,
        430,
        430,
        429,
        428,
        434,
        426,
        427,
        425,
        424,
        439,
        423
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 208
    },
    "209": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976247999121",
      "endTime": "578976292946380",
      "elapsedTime": "44947259",
      "asyncId": 419,
      "triggerAsyncId": 413,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        422,
        422,
        538,
        537
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 209
    },
    "210": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976248286340",
      "endTime": "578976284400349",
      "elapsedTime": "36114009",
      "asyncId": 420,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        421,
        421,
        438
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 210
    },
    "211": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976248579239",
      "endTime": "578976248955725",
      "elapsedTime": "376486",
      "asyncId": 421,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        423
      ],
      "uniqueid": 211
    },
    "212": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976248896223",
      "endTime": "578976248916912",
      "elapsedTime": "20689",
      "asyncId": 422,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 212
    },
    "213": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976249276977",
      "endTime": "578976271601747",
      "elapsedTime": "22324770",
      "asyncId": 423,
      "triggerAsyncId": 421,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        426,
        442,
        496,
        495
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 213
    },
    "214": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976249552734",
      "endTime": "578976284465030",
      "elapsedTime": "34912296",
      "asyncId": 424,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        425,
        440,
        439
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 214
    },
    "215": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976249844541",
      "endTime": "578976250264588",
      "elapsedTime": "420047",
      "asyncId": 425,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        438,
        427
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 215
    },
    "216": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976250192142",
      "endTime": "578976250221397",
      "elapsedTime": "29255",
      "asyncId": 426,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 216
    },
    "217": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976250564039",
      "endTime": "578976272666493",
      "elapsedTime": "22102454",
      "asyncId": 427,
      "triggerAsyncId": 425,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        437,
        436,
        500,
        499
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 217
    },
    "218": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976250836430",
      "endTime": "578976294852132",
      "elapsedTime": "44015702",
      "asyncId": 428,
      "triggerAsyncId": 301,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        435,
        433,
        433,
        440
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 218
    },
    "219": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976251144127",
      "endTime": "578976289282992",
      "elapsedTime": "38138865",
      "asyncId": 429,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        433,
        435
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 219
    },
    "220": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578976251462263",
      "endTime": "578976286370753",
      "elapsedTime": "34908490",
      "asyncId": 430,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        444
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 220
    },
    "221": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976251768888",
      "endTime": "578976286754823",
      "elapsedTime": "34985935",
      "asyncId": 431,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        432,
        432,
        432,
        434
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 221
    },
    "222": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578976252112933",
      "endTime": "578976252131268",
      "elapsedTime": "18335",
      "asyncId": 432,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        443,
        440,
        442,
        448,
        439,
        446,
        462,
        450,
        433
      ],
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 222
    },
    "223": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578976252461196",
      "endTime": "578976279225498",
      "elapsedTime": "26764302",
      "asyncId": 433,
      "triggerAsyncId": 432,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        434,
        505,
        504,
        503
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 223
    },
    "224": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578976252837441",
      "endTime": "578976289310474",
      "elapsedTime": "36473033",
      "asyncId": 434,
      "triggerAsyncId": 431,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        436
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 224
    },
    "225": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578976253127445",
      "endTime": "578976294044739",
      "elapsedTime": "40917294",
      "asyncId": 435,
      "triggerAsyncId": 429,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        542,
        541
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 225
    },
    "226": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:23:43:23",
      "startTime": "578976253354421",
      "endTime": "578976295025868",
      "elapsedTime": "41671447",
      "asyncId": 436,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfProviders",
      "userCode": false,
      "triggers": [
        448,
        447,
        446,
        441
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 23,
      "endLine": 43,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 226
    },
    "227": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578976254504747",
      "endTime": "578976295176630",
      "elapsedTime": "40671883",
      "asyncId": 441,
      "triggerAsyncId": 436,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 227
    },
    "228": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:27:23:27:23",
      "startTime": "578976254901200",
      "endTime": "578976300903797",
      "elapsedTime": "46002597",
      "asyncId": 443,
      "triggerAsyncId": 301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstances",
      "userCode": false,
      "triggers": [
        445,
        453,
        456,
        454,
        458,
        464,
        444,
        444,
        446
      ],
      "line": "\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module)",
      "startLine": 27,
      "startCol": 23,
      "endLine": 27,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 228
    },
    "229": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578976255492358",
      "endTime": "578976300989407",
      "elapsedTime": "45497049",
      "asyncId": 446,
      "triggerAsyncId": 443,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "triggers": [
        451
      ],
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 229
    },
    "230": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578978853093867",
      "endTime": "578982355249335",
      "elapsedTime": "3502155468",
      "asyncId": 447,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        450
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 230
    },
    "231": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976255821355",
      "endTime": "578976301324756",
      "elapsedTime": "45503401",
      "asyncId": 448,
      "triggerAsyncId": 342,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        449
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 231
    },
    "232": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978918940704",
      "endTime": "578978918959650",
      "elapsedTime": "18946",
      "asyncId": 449,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        454,
        450,
        450,
        450,
        450
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 232
    },
    "233": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978853772089",
      "endTime": "578982355279712",
      "elapsedTime": "3501507623",
      "asyncId": 450,
      "triggerAsyncId": 449,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        452,
        453
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 233
    },
    "234": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578976257018739",
      "endTime": "578976257037365",
      "elapsedTime": "18626",
      "asyncId": 451,
      "triggerAsyncId": 351,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        452
      ],
      "uniqueid": 234
    },
    "235": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976257356893",
      "endTime": "578976279329724",
      "elapsedTime": "21972831",
      "asyncId": 452,
      "triggerAsyncId": 451,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        453
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 235
    },
    "236": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976257635366",
      "endTime": "578976282398276",
      "elapsedTime": "24762910",
      "asyncId": 453,
      "triggerAsyncId": 450,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        455,
        513
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 236
    },
    "237": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976257896074",
      "endTime": "578976286492842",
      "elapsedTime": "28596768",
      "asyncId": 454,
      "triggerAsyncId": 449,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        457,
        460
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 237
    },
    "238": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976258275936",
      "endTime": "578976279366743",
      "elapsedTime": "21090807",
      "asyncId": 455,
      "triggerAsyncId": 357,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        456,
        458
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 238
    },
    "239": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976258563506",
      "endTime": "578976258581629",
      "elapsedTime": "18123",
      "asyncId": 456,
      "triggerAsyncId": 357,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        457
      ],
      "uniqueid": 239
    },
    "240": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976258852938",
      "endTime": "578976279402680",
      "elapsedTime": "20549742",
      "asyncId": 457,
      "triggerAsyncId": 456,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 240
    },
    "241": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976259100362",
      "endTime": "578976282468207",
      "elapsedTime": "23367845",
      "asyncId": 458,
      "triggerAsyncId": 455,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        467
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 241
    },
    "242": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976259390416",
      "endTime": "578976279438878",
      "elapsedTime": "20048462",
      "asyncId": 459,
      "triggerAsyncId": 361,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        464,
        464,
        462
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 242
    },
    "243": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976259650072",
      "endTime": "578976259668046",
      "elapsedTime": "17974",
      "asyncId": 460,
      "triggerAsyncId": 361,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        461
      ],
      "uniqueid": 243
    },
    "244": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976259942200",
      "endTime": "578976279475176",
      "elapsedTime": "19532976",
      "asyncId": 461,
      "triggerAsyncId": 460,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 244
    },
    "245": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976260189453",
      "endTime": "578976282527268",
      "elapsedTime": "22337815",
      "asyncId": 462,
      "triggerAsyncId": 459,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        463,
        463
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 245
    },
    "246": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976260505255",
      "endTime": "578976285476827",
      "elapsedTime": "24971572",
      "asyncId": 463,
      "triggerAsyncId": 367,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        471,
        473,
        479,
        470,
        477,
        493,
        481,
        468
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 246
    },
    "247": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976260794017",
      "endTime": "578976279510473",
      "elapsedTime": "18716456",
      "asyncId": 464,
      "triggerAsyncId": 367,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        465,
        467
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 247
    },
    "248": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578976261079181",
      "endTime": "578976261096694",
      "elapsedTime": "17513",
      "asyncId": 465,
      "triggerAsyncId": 367,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "triggers": [
        467,
        466
      ],
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 248
    },
    "249": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976261409320",
      "endTime": "578976279541992",
      "elapsedTime": "18132672",
      "asyncId": 466,
      "triggerAsyncId": 465,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        472
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 249
    },
    "250": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976261681360",
      "endTime": "578976283216300",
      "elapsedTime": "21534940",
      "asyncId": 467,
      "triggerAsyncId": 464,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        515
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 250
    },
    "251": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976261941568",
      "endTime": "578976286552193",
      "elapsedTime": "24610625",
      "asyncId": 468,
      "triggerAsyncId": 463,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 251
    },
    "252": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976262279612",
      "endTime": "578976283340061",
      "elapsedTime": "21060449",
      "asyncId": 469,
      "triggerAsyncId": 375,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        472
      ],
      "uniqueid": 252
    },
    "253": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976262562933",
      "endTime": "578976262580776",
      "elapsedTime": "17843",
      "asyncId": 470,
      "triggerAsyncId": 375,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        478,
        471
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 253
    },
    "254": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976262881610",
      "endTime": "578976280589876",
      "elapsedTime": "17708266",
      "asyncId": 471,
      "triggerAsyncId": 470,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        509
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 254
    },
    "255": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976264024633",
      "endTime": "578976285567056",
      "elapsedTime": "21542423",
      "asyncId": 472,
      "triggerAsyncId": 469,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 255
    },
    "256": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976264484725",
      "endTime": "578976283433376",
      "elapsedTime": "18948651",
      "asyncId": 473,
      "triggerAsyncId": 383,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        474,
        474,
        476
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 256
    },
    "257": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976264825835",
      "endTime": "578976264845071",
      "elapsedTime": "19236",
      "asyncId": 474,
      "triggerAsyncId": 383,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        484,
        487,
        485,
        489,
        495,
        475,
        475,
        475
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 257
    },
    "258": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976265163989",
      "endTime": "578976281277715",
      "elapsedTime": "16113726",
      "asyncId": 475,
      "triggerAsyncId": 474,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        498,
        503,
        497,
        496,
        501,
        505,
        509,
        476,
        511
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 258
    },
    "259": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976265425830",
      "endTime": "578976286072925",
      "elapsedTime": "20647095",
      "asyncId": 476,
      "triggerAsyncId": 473,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        480
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 259
    },
    "260": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976265718187",
      "endTime": "578976281315396",
      "elapsedTime": "15597209",
      "asyncId": 477,
      "triggerAsyncId": 389,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        480
      ],
      "uniqueid": 260
    },
    "261": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976265985308",
      "endTime": "578976266009053",
      "elapsedTime": "23745",
      "asyncId": 478,
      "triggerAsyncId": 389,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "triggers": [
        479,
        479
      ],
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 261
    },
    "262": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976266357937",
      "endTime": "578976281346304",
      "elapsedTime": "14988367",
      "asyncId": 479,
      "triggerAsyncId": 478,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 262
    },
    "263": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976266600512",
      "endTime": "578976283533635",
      "elapsedTime": "16933123",
      "asyncId": 480,
      "triggerAsyncId": 477,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 263
    },
    "264": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976266895084",
      "endTime": "578976281376831",
      "elapsedTime": "14481747",
      "asyncId": 481,
      "triggerAsyncId": 393,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        484
      ],
      "uniqueid": 264
    },
    "265": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976267162044",
      "endTime": "578976267179497",
      "elapsedTime": "17453",
      "asyncId": 482,
      "triggerAsyncId": 393,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        483
      ],
      "uniqueid": 265
    },
    "266": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976267444574",
      "endTime": "578976281405986",
      "elapsedTime": "13961412",
      "asyncId": 483,
      "triggerAsyncId": 482,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 266
    },
    "267": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976267684404",
      "endTime": "578976283590912",
      "elapsedTime": "15906508",
      "asyncId": 484,
      "triggerAsyncId": 481,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        486
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 267
    },
    "268": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976267969608",
      "endTime": "578976281437565",
      "elapsedTime": "13467957",
      "asyncId": 485,
      "triggerAsyncId": 397,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        491,
        488
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 268
    },
    "269": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976268241337",
      "endTime": "578976268257879",
      "elapsedTime": "16542",
      "asyncId": 486,
      "triggerAsyncId": 397,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        487
      ],
      "uniqueid": 269
    },
    "270": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578978872976189",
      "endTime": "578982355314037",
      "elapsedTime": "3482337848",
      "asyncId": 487,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 270
    },
    "271": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976268765230",
      "endTime": "578976283652477",
      "elapsedTime": "14887247",
      "asyncId": 488,
      "triggerAsyncId": 485,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 271
    },
    "272": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978947024289",
      "endTime": "578978947049397",
      "elapsedTime": "25108",
      "asyncId": 489,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        494,
        490,
        490,
        490,
        490
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 272
    },
    "273": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978873667325",
      "endTime": "578982355340787",
      "elapsedTime": "3481673462",
      "asyncId": 490,
      "triggerAsyncId": 489,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        493
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 273
    },
    "274": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578976269649748",
      "endTime": "578976269665968",
      "elapsedTime": "16220",
      "asyncId": 491,
      "triggerAsyncId": 417,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        492
      ],
      "uniqueid": 274
    },
    "275": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976269975859",
      "endTime": "578976281529097",
      "elapsedTime": "11553238",
      "asyncId": 492,
      "triggerAsyncId": 491,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 275
    },
    "276": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976270258128",
      "endTime": "578976284362849",
      "elapsedTime": "14104721",
      "asyncId": 493,
      "triggerAsyncId": 490,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        517
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 276
    },
    "277": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976270513968",
      "endTime": "578976286726069",
      "elapsedTime": "16212101",
      "asyncId": 494,
      "triggerAsyncId": 489,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 277
    },
    "278": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976270807067",
      "endTime": "578976281559904",
      "elapsedTime": "10752837",
      "asyncId": 495,
      "triggerAsyncId": 423,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        498
      ],
      "uniqueid": 278
    },
    "279": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976271068227",
      "endTime": "578976271085519",
      "elapsedTime": "17292",
      "asyncId": 496,
      "triggerAsyncId": 423,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "triggers": [
        502,
        497
      ],
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 279
    },
    "280": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976271349504",
      "endTime": "578976281591123",
      "elapsedTime": "10241619",
      "asyncId": 497,
      "triggerAsyncId": 496,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        500
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 280
    },
    "281": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976271584635",
      "endTime": "578976284434213",
      "elapsedTime": "12849578",
      "asyncId": 498,
      "triggerAsyncId": 495,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        499
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 281
    },
    "282": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976271869018",
      "endTime": "578976281621871",
      "elapsedTime": "9752853",
      "asyncId": 499,
      "triggerAsyncId": 427,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        502
      ],
      "uniqueid": 282
    },
    "283": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976272128645",
      "endTime": "578976272145246",
      "elapsedTime": "16601",
      "asyncId": 500,
      "triggerAsyncId": 427,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        501
      ],
      "uniqueid": 283
    },
    "284": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976272418037",
      "endTime": "578976281651086",
      "elapsedTime": "9233049",
      "asyncId": 501,
      "triggerAsyncId": 500,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        507
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 284
    },
    "285": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976272650523",
      "endTime": "578976284494486",
      "elapsedTime": "11843963",
      "asyncId": 502,
      "triggerAsyncId": 499,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 285
    },
    "286": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976272961696",
      "endTime": "578976286404586",
      "elapsedTime": "13442890",
      "asyncId": 503,
      "triggerAsyncId": 433,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        508
      ],
      "uniqueid": 286
    },
    "287": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976273255587",
      "endTime": "578976281682594",
      "elapsedTime": "8427007",
      "asyncId": 504,
      "triggerAsyncId": 433,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        507
      ],
      "uniqueid": 287
    },
    "288": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578976277853026",
      "endTime": "578976277871911",
      "elapsedTime": "18885",
      "asyncId": 505,
      "triggerAsyncId": 433,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        506
      ],
      "uniqueid": 288
    },
    "289": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578976278422543",
      "endTime": "578976281711448",
      "elapsedTime": "3288905",
      "asyncId": 506,
      "triggerAsyncId": 505,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 289
    },
    "290": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578976278809368",
      "endTime": "578976285228041",
      "elapsedTime": "6418673",
      "asyncId": 507,
      "triggerAsyncId": 504,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        519
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 290
    },
    "291": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976279203227",
      "endTime": "578976286786262",
      "elapsedTime": "7583035",
      "asyncId": 508,
      "triggerAsyncId": 503,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 291
    },
    "292": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578976280039224",
      "endTime": "578976280251071",
      "elapsedTime": "211847",
      "asyncId": 509,
      "triggerAsyncId": 471,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        510
      ],
      "uniqueid": 292
    },
    "293": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976280572504",
      "endTime": "578976283370909",
      "elapsedTime": "2798405",
      "asyncId": 510,
      "triggerAsyncId": 509,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 293
    },
    "294": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578976280908223",
      "endTime": "578976280950572",
      "elapsedTime": "42349",
      "asyncId": 511,
      "triggerAsyncId": 475,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        515,
        512
      ],
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 294
    },
    "295": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976281261716",
      "endTime": "578976283464024",
      "elapsedTime": "2202308",
      "asyncId": 512,
      "triggerAsyncId": 511,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 295
    },
    "296": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578976282026589",
      "endTime": "578976282078416",
      "elapsedTime": "51827",
      "asyncId": 513,
      "triggerAsyncId": 453,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        514,
        514
      ],
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 296
    },
    "297": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976282382276",
      "endTime": "578976285343257",
      "elapsedTime": "2960981",
      "asyncId": 514,
      "triggerAsyncId": 513,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 297
    },
    "298": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578976282846196",
      "endTime": "578976282890910",
      "elapsedTime": "44714",
      "asyncId": 515,
      "triggerAsyncId": 467,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        516
      ],
      "uniqueid": 298
    },
    "299": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976283199909",
      "endTime": "578976285508266",
      "elapsedTime": "2308357",
      "asyncId": 516,
      "triggerAsyncId": 515,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 299
    },
    "300": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578976283965955",
      "endTime": "578976284031688",
      "elapsedTime": "65733",
      "asyncId": 517,
      "triggerAsyncId": 493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        518
      ],
      "uniqueid": 300
    },
    "301": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976284346168",
      "endTime": "578976286270455",
      "elapsedTime": "1924287",
      "asyncId": 518,
      "triggerAsyncId": 517,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 301
    },
    "302": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578976284800029",
      "endTime": "578976284896930",
      "elapsedTime": "96901",
      "asyncId": 519,
      "triggerAsyncId": 507,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        520
      ],
      "uniqueid": 302
    },
    "303": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976285211079",
      "endTime": "578976286433791",
      "elapsedTime": "1222712",
      "asyncId": 520,
      "triggerAsyncId": 519,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 303
    },
    "304": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976287260411",
      "endTime": "578976291741942",
      "elapsedTime": "4481531",
      "asyncId": 521,
      "triggerAsyncId": 377,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        524
      ],
      "uniqueid": 304
    },
    "305": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976287520979",
      "endTime": "578976287538061",
      "elapsedTime": "17082",
      "asyncId": 522,
      "triggerAsyncId": 377,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        523
      ],
      "uniqueid": 305
    },
    "306": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976287803088",
      "endTime": "578976291772700",
      "elapsedTime": "3969612",
      "asyncId": 523,
      "triggerAsyncId": 522,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 306
    },
    "307": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976288050261",
      "endTime": "578976294354920",
      "elapsedTime": "6304659",
      "asyncId": 524,
      "triggerAsyncId": 521,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 307
    },
    "308": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976288377735",
      "endTime": "578976291802535",
      "elapsedTime": "3424800",
      "asyncId": 525,
      "triggerAsyncId": 385,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        528
      ],
      "uniqueid": 308
    },
    "309": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976288640548",
      "endTime": "578976288657069",
      "elapsedTime": "16521",
      "asyncId": 526,
      "triggerAsyncId": 385,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        527
      ],
      "uniqueid": 309
    },
    "310": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578978898956271",
      "endTime": "578982355394698",
      "elapsedTime": "3456438427",
      "asyncId": 527,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 310
    },
    "311": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976289170872",
      "endTime": "578976294423389",
      "elapsedTime": "5252517",
      "asyncId": 528,
      "triggerAsyncId": 525,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 311
    },
    "312": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978972403125",
      "endTime": "578978972422070",
      "elapsedTime": "18945",
      "asyncId": 529,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        532,
        530,
        530,
        530,
        530
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 312
    },
    "313": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978899619354",
      "endTime": "578982355424855",
      "elapsedTime": "3455805501",
      "asyncId": 530,
      "triggerAsyncId": 529,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        531
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 313
    },
    "314": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976290128868",
      "endTime": "578976294113227",
      "elapsedTime": "3984359",
      "asyncId": 531,
      "triggerAsyncId": 530,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 314
    },
    "315": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976290365131",
      "endTime": "578976294607864",
      "elapsedTime": "4242733",
      "asyncId": 532,
      "triggerAsyncId": 529,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 315
    },
    "316": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976290648742",
      "endTime": "578976294142812",
      "elapsedTime": "3494070",
      "asyncId": 533,
      "triggerAsyncId": 369,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        536
      ],
      "uniqueid": 316
    },
    "317": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976290901656",
      "endTime": "578976290918468",
      "elapsedTime": "16812",
      "asyncId": 534,
      "triggerAsyncId": 369,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        535
      ],
      "uniqueid": 317
    },
    "318": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976291444173",
      "endTime": "578976294170635",
      "elapsedTime": "2726462",
      "asyncId": 535,
      "triggerAsyncId": 534,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 318
    },
    "319": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976291688371",
      "endTime": "578976294669900",
      "elapsedTime": "2981529",
      "asyncId": 536,
      "triggerAsyncId": 533,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 319
    },
    "320": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976292141481",
      "endTime": "578976294452884",
      "elapsedTime": "2311403",
      "asyncId": 537,
      "triggerAsyncId": 419,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        540
      ],
      "uniqueid": 320
    },
    "321": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976292405365",
      "endTime": "578976292422037",
      "elapsedTime": "16672",
      "asyncId": 538,
      "triggerAsyncId": 419,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        539
      ],
      "uniqueid": 321
    },
    "322": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976292691502",
      "endTime": "578976294481988",
      "elapsedTime": "1790486",
      "asyncId": 539,
      "triggerAsyncId": 538,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 322
    },
    "323": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976292930540",
      "endTime": "578976294823839",
      "elapsedTime": "1893299",
      "asyncId": 540,
      "triggerAsyncId": 537,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 323
    },
    "324": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976293228509",
      "endTime": "578976294511674",
      "elapsedTime": "1283165",
      "asyncId": 541,
      "triggerAsyncId": 435,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        544
      ],
      "uniqueid": 324
    },
    "325": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578976293479529",
      "endTime": "578976293495910",
      "elapsedTime": "16381",
      "asyncId": 542,
      "triggerAsyncId": 435,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        543
      ],
      "uniqueid": 325
    },
    "326": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578976293776466",
      "endTime": "578976294547551",
      "elapsedTime": "771085",
      "asyncId": 543,
      "triggerAsyncId": 542,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 326
    },
    "327": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976294029340",
      "endTime": "578976294879884",
      "elapsedTime": "850544",
      "asyncId": 544,
      "triggerAsyncId": 541,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 327
    },
    "328": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578976295487092",
      "endTime": "578976298356982",
      "elapsedTime": "2869890",
      "asyncId": 545,
      "triggerAsyncId": 409,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        548
      ],
      "uniqueid": 328
    },
    "329": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578976295722494",
      "endTime": "578976295738664",
      "elapsedTime": "16170",
      "asyncId": 546,
      "triggerAsyncId": 409,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        547
      ],
      "uniqueid": 329
    },
    "330": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578976295994423",
      "endTime": "578976298388672",
      "elapsedTime": "2394249",
      "asyncId": 547,
      "triggerAsyncId": 546,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 330
    },
    "331": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976296207974",
      "endTime": "578976299485027",
      "elapsedTime": "3277053",
      "asyncId": 548,
      "triggerAsyncId": 545,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        554,
        553
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 331
    },
    "332": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578976296459375",
      "endTime": "578976298418818",
      "elapsedTime": "1959443",
      "asyncId": 549,
      "triggerAsyncId": 442,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        552
      ],
      "uniqueid": 332
    },
    "333": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578976296682964",
      "endTime": "578976296698213",
      "elapsedTime": "15249",
      "asyncId": 550,
      "triggerAsyncId": 442,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        551
      ],
      "uniqueid": 333
    },
    "334": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578976298071187",
      "endTime": "578976298456519",
      "elapsedTime": "385332",
      "asyncId": 551,
      "triggerAsyncId": 550,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 334
    },
    "335": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976298302841",
      "endTime": "578976300447962",
      "elapsedTime": "2145121",
      "asyncId": 552,
      "triggerAsyncId": 549,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        558,
        557
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 335
    },
    "336": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578976298766560",
      "endTime": "578976300483438",
      "elapsedTime": "1716878",
      "asyncId": 553,
      "triggerAsyncId": 548,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        556
      ],
      "uniqueid": 336
    },
    "337": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578976298992223",
      "endTime": "578976299030896",
      "elapsedTime": "38673",
      "asyncId": 554,
      "triggerAsyncId": 548,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        555
      ],
      "uniqueid": 337
    },
    "338": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578976299270184",
      "endTime": "578976300512874",
      "elapsedTime": "1242690",
      "asyncId": 555,
      "triggerAsyncId": 554,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 338
    },
    "339": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976299469438",
      "endTime": "578976300672864",
      "elapsedTime": "1203426",
      "asyncId": 556,
      "triggerAsyncId": 553,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 339
    },
    "340": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578976299727432",
      "endTime": "578976300542670",
      "elapsedTime": "815238",
      "asyncId": 557,
      "triggerAsyncId": 552,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        560
      ],
      "uniqueid": 340
    },
    "341": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578976299964446",
      "endTime": "578976299980075",
      "elapsedTime": "15629",
      "asyncId": 558,
      "triggerAsyncId": 552,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        559
      ],
      "uniqueid": 341
    },
    "342": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578976300227479",
      "endTime": "578976300578256",
      "elapsedTime": "350777",
      "asyncId": 559,
      "triggerAsyncId": 558,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 342
    },
    "343": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976300432683",
      "endTime": "578976300844225",
      "elapsedTime": "411542",
      "asyncId": 560,
      "triggerAsyncId": 557,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 343
    },
    "344": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578976302258787",
      "endTime": "578976316137694",
      "elapsedTime": "13878907",
      "asyncId": 561,
      "triggerAsyncId": 277,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        570
      ],
      "uniqueid": 344
    },
    "345": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578976302445517",
      "endTime": "578976316169524",
      "elapsedTime": "13724007",
      "asyncId": 562,
      "triggerAsyncId": 277,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        567,
        567
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 345
    },
    "346": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578976302776688",
      "endTime": "578976302791746",
      "elapsedTime": "15058",
      "asyncId": 563,
      "triggerAsyncId": 277,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 346
    },
    "347": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578976303315337",
      "endTime": "578976303330776",
      "elapsedTime": "15439",
      "asyncId": 565,
      "triggerAsyncId": 277,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        566,
        566
      ],
      "uniqueid": 347
    },
    "348": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578976303591024",
      "endTime": "578976315907973",
      "elapsedTime": "12316949",
      "asyncId": 566,
      "triggerAsyncId": 565,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        574,
        576,
        582,
        573,
        580,
        596,
        584
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 348
    },
    "349": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578978923390195",
      "endTime": "578982355467043",
      "elapsedTime": "3432076848",
      "asyncId": 567,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        568
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 349
    },
    "350": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578976303964655",
      "endTime": "578976316193188",
      "elapsedTime": "12228533",
      "asyncId": 568,
      "triggerAsyncId": 567,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 350
    },
    "351": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578978997351032",
      "endTime": "578978997368365",
      "elapsedTime": "17333",
      "asyncId": 569,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        570,
        570,
        570,
        570
      ],
      "uniqueid": 351
    },
    "352": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978924384940",
      "endTime": "578982355503963",
      "elapsedTime": "3431119023",
      "asyncId": 570,
      "triggerAsyncId": 569,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 352
    },
    "353": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976304556554",
      "endTime": "578976304570600",
      "elapsedTime": "14046",
      "asyncId": 571,
      "triggerAsyncId": 277,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 353
    },
    "354": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578976304922340",
      "endTime": "578976315793479",
      "elapsedTime": "10871139",
      "asyncId": 573,
      "triggerAsyncId": 566,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        581
      ],
      "uniqueid": 354
    },
    "355": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578976305446272",
      "endTime": "578976305460579",
      "elapsedTime": "14307",
      "asyncId": 574,
      "triggerAsyncId": 566,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 355
    },
    "356": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578976305930600",
      "endTime": "578976305943444",
      "elapsedTime": "12844",
      "asyncId": 576,
      "triggerAsyncId": 566,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        577,
        577
      ],
      "uniqueid": 356
    },
    "357": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578976306200135",
      "endTime": "578976309429529",
      "elapsedTime": "3229394",
      "asyncId": 577,
      "triggerAsyncId": 576,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        587,
        590,
        588,
        592,
        598,
        578,
        578
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 357
    },
    "358": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578976306435456",
      "endTime": "578976315333847",
      "elapsedTime": "8898391",
      "asyncId": 578,
      "triggerAsyncId": 577,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        600,
        604,
        599,
        602,
        606,
        610,
        579
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 358
    },
    "359": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578976306623519",
      "endTime": "578976315825919",
      "elapsedTime": "9202400",
      "asyncId": 579,
      "triggerAsyncId": 578,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 359
    },
    "360": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976306758191",
      "endTime": "578976315850866",
      "elapsedTime": "9092675",
      "asyncId": 580,
      "triggerAsyncId": 566,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 360
    },
    "361": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976307031013",
      "endTime": "578976307043476",
      "elapsedTime": "12463",
      "asyncId": 582,
      "triggerAsyncId": 566,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 361
    },
    "362": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976307336315",
      "endTime": "578976315988584",
      "elapsedTime": "8652269",
      "asyncId": 584,
      "triggerAsyncId": 566,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 362
    },
    "363": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578976307724182",
      "endTime": "578976307790306",
      "elapsedTime": "66124",
      "asyncId": 587,
      "triggerAsyncId": 577,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        589
      ],
      "uniqueid": 363
    },
    "364": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976307946218",
      "endTime": "578976309070496",
      "elapsedTime": "1124278",
      "asyncId": 588,
      "triggerAsyncId": 577,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        594
      ],
      "uniqueid": 364
    },
    "365": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976308216635",
      "endTime": "578976308228798",
      "elapsedTime": "12163",
      "asyncId": 590,
      "triggerAsyncId": 577,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 365
    },
    "366": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578976308558045",
      "endTime": "578976309365870",
      "elapsedTime": "807825",
      "asyncId": 592,
      "triggerAsyncId": 577,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 366
    },
    "367": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578976308767728",
      "endTime": "578976309393561",
      "elapsedTime": "625833",
      "asyncId": 594,
      "triggerAsyncId": 588,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 367
    },
    "368": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578976309601611",
      "endTime": "578976314911766",
      "elapsedTime": "5310155",
      "asyncId": 599,
      "triggerAsyncId": 578,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        603
      ],
      "uniqueid": 368
    },
    "369": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578976309902796",
      "endTime": "578976313673344",
      "elapsedTime": "3770548",
      "asyncId": 600,
      "triggerAsyncId": 578,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        601
      ],
      "uniqueid": 369
    },
    "370": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578976313912352",
      "endTime": "578976314936643",
      "elapsedTime": "1024291",
      "asyncId": 601,
      "triggerAsyncId": 600,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 370
    },
    "371": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976314069257",
      "endTime": "578976315205356",
      "elapsedTime": "1136099",
      "asyncId": 602,
      "triggerAsyncId": 578,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        608
      ],
      "uniqueid": 371
    },
    "372": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578976314345204",
      "endTime": "578976314357337",
      "elapsedTime": "12133",
      "asyncId": 604,
      "triggerAsyncId": 578,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 372
    },
    "373": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578976314687816",
      "endTime": "578976315269336",
      "elapsedTime": "581520",
      "asyncId": 606,
      "triggerAsyncId": 578,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 373
    },
    "374": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578976314869446",
      "endTime": "578976315297489",
      "elapsedTime": "428043",
      "asyncId": 608,
      "triggerAsyncId": 602,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 374
    },
    "375": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578978945012719",
      "endTime": "578982355583793",
      "elapsedTime": "3410571074",
      "asyncId": 610,
      "triggerAsyncId": 609,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 375
    },
    "376": {
      "source": "node_modules/jest-runner/build/runTest.js:442:12:442:12",
      "startTime": "578976318128837",
      "endTime": "578976319457778",
      "elapsedTime": "1328941",
      "asyncId": 612,
      "triggerAsyncId": 269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    } // Delay the resolution to allow log messages to be output.\n\n    return new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector",
      "startLine": 442,
      "startCol": 12,
      "endLine": 442,
      "endCol": 12,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        616
      ],
      "uniqueid": 376
    },
    "377": {
      "source": "node_modules/jest-runner/build/runTest.js:453:23:453:23",
      "startTime": "578976318533125",
      "endTime": "578976318597565",
      "elapsedTime": "64440",
      "asyncId": 614,
      "triggerAsyncId": 269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    var _runtime$teardown;\n\n    await environment.teardown(); // TODO: this function might be missing, remove ? in Jest 26\n\n    (_runtime$teardown = runtime.teardown) === null ||\n    _runtime$teardown === void ",
      "startLine": 453,
      "startCol": 23,
      "endLine": 453,
      "endCol": 23,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        615
      ],
      "uniqueid": 377
    },
    "378": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976318788333",
      "endTime": "578976319082364",
      "elapsedTime": "294031",
      "asyncId": 615,
      "triggerAsyncId": 614,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 378
    },
    "379": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578976319264656",
      "endTime": "578976319516368",
      "elapsedTime": "251712",
      "asyncId": 616,
      "triggerAsyncId": 612,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 379
    },
    "380": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578979175805483",
      "endTime": "578979175825431",
      "elapsedTime": "19948",
      "asyncId": 1012,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1013,
        1013
      ],
      "uniqueid": 380
    },
    "381": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578979176267930",
      "endTime": "578979329483528",
      "elapsedTime": "153215598",
      "asyncId": 1013,
      "triggerAsyncId": 1012,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1022,
        1024,
        1031,
        1020,
        1021,
        1029,
        1062,
        1033
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 381
    },
    "382": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578979181600637",
      "endTime": "578979181614563",
      "elapsedTime": "13926",
      "asyncId": 1024,
      "triggerAsyncId": 1013,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1025,
        1025
      ],
      "uniqueid": 382
    },
    "383": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578979181895700",
      "endTime": "578979308969353",
      "elapsedTime": "127073653",
      "asyncId": 1025,
      "triggerAsyncId": 1024,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1041,
        1055,
        1043,
        1042,
        1041,
        1040,
        1039,
        1038,
        1037,
        1036,
        1035,
        1053,
        1057,
        1066,
        1026,
        1026
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 383
    },
    "384": {
      "source": "apps/api/src/model/lib/organization.service.spec.ts:84:8:84:8",
      "startTime": "578979185256550",
      "endTime": "578979308256587",
      "elapsedTime": "123000037",
      "asyncId": 1037,
      "triggerAsyncId": 1025,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n        mockDocumentNumberingServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<OrganizationService>(OrganizationService);\n  })",
      "startLine": 84,
      "startCol": 8,
      "endLine": 84,
      "endCol": 8,
      "file": "apps/api/src/model/lib/organization.service.spec.ts",
      "triggers": [
        1051
      ],
      "uniqueid": 384
    },
    "385": {
      "source": "node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js:244:12:244:12",
      "startTime": "578979982016228",
      "endTime": "578979982046054",
      "elapsedTime": "29826",
      "asyncId": 1048,
      "triggerAsyncId": 30,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) ",
      "startLine": 244,
      "startCol": 12,
      "endLine": 244,
      "endCol": 12,
      "file": "node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js",
      "triggers": [
        1049
      ],
      "uniqueid": 385
    },
    "386": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578979526578533",
      "endTime": "578982356463471",
      "elapsedTime": "2829884938",
      "asyncId": 1050,
      "triggerAsyncId": 1049,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1099,
        1105,
        1104,
        1109,
        1108,
        1115,
        1123,
        1131,
        1137,
        1136,
        1141,
        1140,
        1145,
        1144,
        1165,
        1171,
        1170,
        1175,
        1174,
        1184,
        1182,
        1190,
        1188,
        1196,
        1194,
        1202,
        1200,
        1215,
        1214,
        1219,
        1218,
        1225,
        1231,
        1230,
        1235,
        1234,
        1183,
        1189,
        1195,
        1201,
        1103,
        1107,
        1121,
        1129,
        1135,
        1139,
        1143,
        1169,
        1173,
        1183,
        1189,
        1195,
        1201,
        1213,
        1217,
        1229,
        1233,
        1097,
        1113,
        1122,
        1130,
        1163,
        1182,
        1188,
        1194,
        1200,
        1223,
        1098,
        1114,
        1120,
        1128,
        1164,
        1181,
        1187,
        1193,
        1199,
        1224,
        1096,
        1112,
        1162,
        1205,
        1222,
        1119,
        1127,
        1095,
        1111,
        1161,
        1221,
        1147,
        1179,
        1094,
        1180,
        1178,
        1177,
        1093,
        1237,
        1160,
        1159,
        1249,
        1092,
        1091
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 386
    },
    "387": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980286960116",
      "endTime": "578982335777203",
      "elapsedTime": "2048817087",
      "asyncId": 1051,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 387
    },
    "388": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980299018992",
      "endTime": "578982335851382",
      "elapsedTime": "2036832390",
      "asyncId": 1091,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1254
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 388
    },
    "389": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578979213274393",
      "endTime": "578979307941897",
      "elapsedTime": "94667504",
      "asyncId": 1092,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1253
      ],
      "uniqueid": 389
    },
    "390": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980299364770",
      "endTime": "578980299390648",
      "elapsedTime": "25878",
      "asyncId": 1093,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1250,
        1094
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 390
    },
    "391": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980299736477",
      "endTime": "578982335884814",
      "elapsedTime": "2036148337",
      "asyncId": 1094,
      "triggerAsyncId": 1093,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1158
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 391
    },
    "392": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979214365027",
      "endTime": "578979300639227",
      "elapsedTime": "86274200",
      "asyncId": 1095,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1148
      ],
      "uniqueid": 392
    },
    "393": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979214723149",
      "endTime": "578979289181378",
      "elapsedTime": "74458229",
      "asyncId": 1096,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1102
      ],
      "uniqueid": 393
    },
    "394": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979216839546",
      "endTime": "578979287625301",
      "elapsedTime": "70785755",
      "asyncId": 1097,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 394
    },
    "395": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979217257289",
      "endTime": "578979288646555",
      "elapsedTime": "71389266",
      "asyncId": 1098,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1101
      ],
      "uniqueid": 395
    },
    "396": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578979217627944",
      "endTime": "578979217649855",
      "elapsedTime": "21911",
      "asyncId": 1099,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1100
      ],
      "uniqueid": 396
    },
    "397": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979217936923",
      "endTime": "578979265445683",
      "elapsedTime": "47508760",
      "asyncId": 1100,
      "triggerAsyncId": 1099,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1257,
        1256,
        1255
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 397
    },
    "398": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979218192923",
      "endTime": "578979289203579",
      "elapsedTime": "71010656",
      "asyncId": 1101,
      "triggerAsyncId": 1098,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 398
    },
    "399": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979218431310",
      "endTime": "578979292084430",
      "elapsedTime": "73653120",
      "asyncId": 1102,
      "triggerAsyncId": 1096,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1364,
        1363
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 399
    },
    "400": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979218658596",
      "endTime": "578979284796328",
      "elapsedTime": "66137732",
      "asyncId": 1103,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1149
      ],
      "uniqueid": 400
    },
    "401": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979218903886",
      "endTime": "578979219205100",
      "elapsedTime": "301214",
      "asyncId": 1104,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1106
      ],
      "uniqueid": 401
    },
    "402": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979219152642",
      "endTime": "578979219169894",
      "elapsedTime": "17252",
      "asyncId": 1105,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 402
    },
    "403": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979219454197",
      "endTime": "578979266363413",
      "elapsedTime": "46909216",
      "asyncId": 1106,
      "triggerAsyncId": 1104,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1262,
        1261
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 403
    },
    "404": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979219689248",
      "endTime": "578979284872821",
      "elapsedTime": "65183573",
      "asyncId": 1107,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1150
      ],
      "uniqueid": 404
    },
    "405": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979219929669",
      "endTime": "578979220242976",
      "elapsedTime": "313307",
      "asyncId": 1108,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1110
      ],
      "uniqueid": 405
    },
    "406": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979220191920",
      "endTime": "578979220211086",
      "elapsedTime": "19166",
      "asyncId": 1109,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 406
    },
    "407": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979220514505",
      "endTime": "578979267161770",
      "elapsedTime": "46647265",
      "asyncId": 1110,
      "triggerAsyncId": 1108,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1266,
        1265
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 407
    },
    "408": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979220750367",
      "endTime": "578979300689331",
      "elapsedTime": "79938964",
      "asyncId": 1111,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1151
      ],
      "uniqueid": 408
    },
    "409": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979221008701",
      "endTime": "578979289227204",
      "elapsedTime": "68218503",
      "asyncId": 1112,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1118
      ],
      "uniqueid": 409
    },
    "410": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979221279820",
      "endTime": "578979287776294",
      "elapsedTime": "66496474",
      "asyncId": 1113,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 410
    },
    "411": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979223151027",
      "endTime": "578979288702510",
      "elapsedTime": "65551483",
      "asyncId": 1114,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1117
      ],
      "uniqueid": 411
    },
    "412": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578979223543573",
      "endTime": "578979223564833",
      "elapsedTime": "21260",
      "asyncId": 1115,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1116
      ],
      "uniqueid": 412
    },
    "413": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979223978118",
      "endTime": "578979268397917",
      "elapsedTime": "44419799",
      "asyncId": 1116,
      "triggerAsyncId": 1115,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1271,
        1270,
        1269
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 413
    },
    "414": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979224327092",
      "endTime": "578979289249806",
      "elapsedTime": "64922714",
      "asyncId": 1117,
      "triggerAsyncId": 1114,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 414
    },
    "415": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979224628667",
      "endTime": "578979296631564",
      "elapsedTime": "72002897",
      "asyncId": 1118,
      "triggerAsyncId": 1112,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1368,
        1367
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 415
    },
    "416": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979224865992",
      "endTime": "578979300367598",
      "elapsedTime": "75501606",
      "asyncId": 1119,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1152
      ],
      "uniqueid": 416
    },
    "417": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979225105391",
      "endTime": "578979288753636",
      "elapsedTime": "63648245",
      "asyncId": 1120,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1126
      ],
      "uniqueid": 417
    },
    "418": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979225395896",
      "endTime": "578979285521788",
      "elapsedTime": "60125892",
      "asyncId": 1121,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 418
    },
    "419": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979225657887",
      "endTime": "578979287855913",
      "elapsedTime": "62198026",
      "asyncId": 1122,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1125
      ],
      "uniqueid": 419
    },
    "420": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578979225902495",
      "endTime": "578979225920809",
      "elapsedTime": "18314",
      "asyncId": 1123,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1124
      ],
      "uniqueid": 420
    },
    "421": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979226219850",
      "endTime": "578979269231480",
      "elapsedTime": "43011630",
      "asyncId": 1124,
      "triggerAsyncId": 1123,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1276,
        1275
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 421
    },
    "422": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979226472053",
      "endTime": "578979288779214",
      "elapsedTime": "62307161",
      "asyncId": 1125,
      "triggerAsyncId": 1122,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 422
    },
    "423": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979226750114",
      "endTime": "578979290122272",
      "elapsedTime": "63372158",
      "asyncId": 1126,
      "triggerAsyncId": 1120,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1356,
        1355
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 423
    },
    "424": {
      "source": "node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js:32:28:32:28",
      "startTime": "578979981176403",
      "endTime": "578979981195489",
      "elapsedTime": "19086",
      "asyncId": 1127,
      "triggerAsyncId": 30,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1153
      ],
      "line": "\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    }",
      "startLine": 32,
      "startCol": 28,
      "endLine": 32,
      "endCol": 28,
      "file": "node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js",
      "uniqueid": 424
    },
    "425": {
      "source": "node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js:244:12:244:12",
      "startTime": "578979981761460",
      "endTime": "578979981783812",
      "elapsedTime": "22352",
      "asyncId": 1128,
      "triggerAsyncId": 30,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1134,
        1129
      ],
      "line": "\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) ",
      "startLine": 244,
      "startCol": 12,
      "endLine": 244,
      "endCol": 12,
      "file": "node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js",
      "uniqueid": 425
    },
    "426": {
      "source": "node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js:7:18:7:18",
      "startTime": "578980223928537",
      "endTime": "578980224064031",
      "elapsedTime": "135494",
      "asyncId": 1130,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PromiseCapability",
      "userCode": false,
      "triggers": [
        1133
      ],
      "line": "\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject",
      "startLine": 7,
      "startCol": 18,
      "endLine": 7,
      "endCol": 18,
      "file": "node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js",
      "uniqueid": 426
    },
    "427": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980282785150",
      "endTime": "578982356639381",
      "elapsedTime": "2073854231",
      "asyncId": 1131,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1132
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 427
    },
    "428": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979228811919",
      "endTime": "578979270056306",
      "elapsedTime": "41244387",
      "asyncId": 1132,
      "triggerAsyncId": 1131,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1133,
        1280,
        1279,
        1133
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 428
    },
    "429": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980313876003",
      "endTime": "578980313893325",
      "elapsedTime": "17322",
      "asyncId": 1133,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1142,
        1144,
        1151,
        1140,
        1141,
        1149,
        1182,
        1153,
        1134,
        1134
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 429
    },
    "430": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980283583025",
      "endTime": "578982356671772",
      "elapsedTime": "2073088747",
      "asyncId": 1134,
      "triggerAsyncId": 1133,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1360,
        1359,
        1135
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 430
    },
    "431": {
      "source": "node_modules/jest-jasmine2/build/treeProcessor.js:78:10:78:10",
      "startTime": "578979181806092",
      "endTime": "578979322425768",
      "elapsedTime": "140619676",
      "asyncId": 1135,
      "triggerAsyncId": 1134,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " treeProcessor",
      "userCode": false,
      "triggers": [
        1154
      ],
      "line": "\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}",
      "startLine": 78,
      "startCol": 10,
      "endLine": 78,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/treeProcessor.js",
      "uniqueid": 431
    },
    "432": {
      "source": "node_modules/jest-jasmine2/build/index.js:233:13:233:13",
      "startTime": "578979182125160",
      "endTime": "578979322535784",
      "elapsedTime": "140410624",
      "asyncId": 1136,
      "triggerAsyncId": 1129,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " jasmine2",
      "userCode": false,
      "triggers": [
        1138
      ],
      "line": "\n  }\n\n  await env.execute();\n  const results = await reporter.getResults();\n  return addSnapshotData(results, snapshotState);\n",
      "startLine": 233,
      "startCol": 13,
      "endLine": 233,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/index.js",
      "uniqueid": 432
    },
    "433": {
      "source": "node_modules/jest-runner/build/runTest.js:380:22:380:22",
      "startTime": "578979182356935",
      "endTime": "578979322582512",
      "elapsedTime": "140225577",
      "asyncId": 1137,
      "triggerAsyncId": 37,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment",
      "startLine": 380,
      "startCol": 22,
      "endLine": 380,
      "endCol": 22,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        1154,
        1138
      ],
      "uniqueid": 433
    },
    "434": {
      "source": "node_modules/jest-runner/build/runTest.js:380:22:380:22",
      "startTime": "578979184337878",
      "endTime": "578979322896531",
      "elapsedTime": "138558653",
      "asyncId": 1138,
      "triggerAsyncId": 1137,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "triggers": [
        1284,
        1283
      ],
      "line": "\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment",
      "startLine": 380,
      "startCol": 22,
      "endLine": 380,
      "endCol": 22,
      "file": "node_modules/jest-runner/build/runTest.js",
      "uniqueid": 434
    },
    "435": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979184597715",
      "endTime": "578979324812292",
      "elapsedTime": "140214577",
      "asyncId": 1139,
      "triggerAsyncId": 37,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1155,
        1538,
        1536
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 435
    },
    "436": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979187009386",
      "endTime": "578979321781530",
      "elapsedTime": "134772144",
      "asyncId": 1140,
      "triggerAsyncId": 1133,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        1142,
        1150
      ],
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 436
    },
    "437": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578979187326711",
      "endTime": "578979321814121",
      "elapsedTime": "134487410",
      "asyncId": 1141,
      "triggerAsyncId": 1133,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1147,
        1147
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 437
    },
    "438": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979231499628",
      "endTime": "578979271689237",
      "elapsedTime": "40189609",
      "asyncId": 1142,
      "triggerAsyncId": 1140,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1288,
        1287
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 438
    },
    "439": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979232533065",
      "endTime": "578979285843400",
      "elapsedTime": "53310335",
      "asyncId": 1143,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1156
      ],
      "uniqueid": 439
    },
    "440": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979232750312",
      "endTime": "578979233022042",
      "elapsedTime": "271730",
      "asyncId": 1144,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1145,
        1146,
        1145
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 440
    },
    "441": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578979188592654",
      "endTime": "578979303629252",
      "elapsedTime": "115036598",
      "asyncId": 1145,
      "triggerAsyncId": 1144,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1161,
        1175,
        1163,
        1162,
        1161,
        1160,
        1159,
        1158,
        1157,
        1156,
        1155,
        1173,
        1177,
        1186,
        1146,
        1146
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 441
    },
    "442": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578979188827595",
      "endTime": "578979321553182",
      "elapsedTime": "132725587",
      "asyncId": 1146,
      "triggerAsyncId": 1145,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1292,
        1291,
        1489,
        1491,
        1497,
        1488,
        1495,
        1508,
        1180
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 442
    },
    "443": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578979189057436",
      "endTime": "578979321608987",
      "elapsedTime": "132551551",
      "asyncId": 1147,
      "triggerAsyncId": 1141,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1157,
        1148
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 443
    },
    "444": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578979189268020",
      "endTime": "578979321837715",
      "elapsedTime": "132569695",
      "asyncId": 1148,
      "triggerAsyncId": 1147,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 444
    },
    "445": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979189503031",
      "endTime": "578979321862572",
      "elapsedTime": "132359541",
      "asyncId": 1149,
      "triggerAsyncId": 1133,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 445
    },
    "446": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979190313711",
      "endTime": "578979322012694",
      "elapsedTime": "131698983",
      "asyncId": 1153,
      "triggerAsyncId": 1133,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 446
    },
    "447": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979190659629",
      "endTime": "578979303372841",
      "elapsedTime": "112713212",
      "asyncId": 1155,
      "triggerAsyncId": 1145,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1174
      ],
      "uniqueid": 447
    },
    "448": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:58:37:58:37",
      "startTime": "578979191085357",
      "endTime": "578979303273445",
      "elapsedTime": "112188088",
      "asyncId": 1156,
      "triggerAsyncId": 1145,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 58,
      "startCol": 37,
      "endLine": 58,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        1172
      ],
      "uniqueid": 448
    },
    "449": {
      "source": "apps/api/src/model/lib/factoring.provider.service.spec.ts:68:8:68:8",
      "startTime": "578979191882040",
      "endTime": "578979302849530",
      "elapsedTime": "110967490",
      "asyncId": 1157,
      "triggerAsyncId": 1145,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n        mockAccountingSchemeServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<FactoringProviderService>(FactoringProviderService);\n  })",
      "startLine": 68,
      "startCol": 8,
      "endLine": 68,
      "endCol": 8,
      "file": "apps/api/src/model/lib/factoring.provider.service.spec.ts",
      "triggers": [
        1171
      ],
      "uniqueid": 449
    },
    "450": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578979236665682",
      "endTime": "578979305610235",
      "elapsedTime": "68944553",
      "asyncId": 1160,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1168,
        1248
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 450
    },
    "451": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979236899069",
      "endTime": "578979300797824",
      "elapsedTime": "63898755",
      "asyncId": 1161,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1167,
        1238
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 451
    },
    "452": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979238149784",
      "endTime": "578979290973007",
      "elapsedTime": "52823223",
      "asyncId": 1162,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1184,
        1168
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 452
    },
    "453": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979238427875",
      "endTime": "578979288055478",
      "elapsedTime": "49627603",
      "asyncId": 1163,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        1164,
        1166
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 453
    },
    "454": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979238660542",
      "endTime": "578979288858182",
      "elapsedTime": "50197640",
      "asyncId": 1164,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1165,
        1167
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 454
    },
    "455": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578979238905000",
      "endTime": "578979238919587",
      "elapsedTime": "14587",
      "asyncId": 1165,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1166
      ],
      "uniqueid": 455
    },
    "456": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979239165789",
      "endTime": "578979273796397",
      "elapsedTime": "34630608",
      "asyncId": 1166,
      "triggerAsyncId": 1165,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1188,
        1187,
        1297,
        1296,
        1295
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 456
    },
    "457": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979239365934",
      "endTime": "578979290997883",
      "elapsedTime": "51631949",
      "asyncId": 1167,
      "triggerAsyncId": 1164,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 457
    },
    "458": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979239560048",
      "endTime": "578979297596643",
      "elapsedTime": "58036595",
      "asyncId": 1168,
      "triggerAsyncId": 1162,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1372,
        1371
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 458
    },
    "459": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979239772396",
      "endTime": "578979286469344",
      "elapsedTime": "46696948",
      "asyncId": 1169,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1192,
        1194,
        1193,
        1192,
        1191,
        1239
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 459
    },
    "460": {
      "source": "apps/api/src/model/lib/factoring.provider.service.spec.ts:68:8:68:8",
      "startTime": "578979197084834",
      "endTime": "578979259269716",
      "elapsedTime": "62184882",
      "asyncId": 1170,
      "triggerAsyncId": 1158,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        1219,
        1225,
        1224,
        1229,
        1228,
        1235,
        1243,
        1251,
        1257,
        1256,
        1261,
        1260,
        1265,
        1264,
        1285,
        1291,
        1290,
        1295,
        1294,
        1304,
        1302,
        1314,
        1313,
        1318,
        1317,
        1324,
        1330,
        1329,
        1303,
        1172,
        1223,
        1227,
        1241,
        1249,
        1255,
        1259,
        1263,
        1289,
        1293,
        1303,
        1312,
        1316,
        1328,
        1217,
        1233,
        1242,
        1250,
        1283,
        1302,
        1322,
        1218,
        1234,
        1240,
        1248,
        1284,
        1301,
        1323,
        1216,
        1232,
        1282,
        1307,
        1321,
        1239,
        1247,
        1215,
        1231,
        1281,
        1320,
        1267,
        1299,
        1214,
        1300,
        1298,
        1297,
        1213,
        1332,
        1280,
        1279,
        1343,
        1212,
        1211
      ],
      "line": "\n        mockAccountingSchemeServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<FactoringProviderService>(FactoringProviderService);\n  })",
      "startLine": 68,
      "startCol": 8,
      "endLine": 68,
      "endCol": 8,
      "file": "apps/api/src/model/lib/factoring.provider.service.spec.ts",
      "uniqueid": 460
    },
    "461": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980299027648",
      "endTime": "578982356705265",
      "elapsedTime": "2057677617",
      "asyncId": 1171,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 461
    },
    "462": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:61:21:61:21",
      "startTime": "578979197616590",
      "endTime": "578979303404030",
      "elapsedTime": "105787440",
      "asyncId": 1172,
      "triggerAsyncId": 1156,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "triggers": [
        1302,
        1301
      ],
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 61,
      "startCol": 21,
      "endLine": 61,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 462
    },
    "463": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980325730044",
      "endTime": "578980325746625",
      "elapsedTime": "16581",
      "asyncId": 1173,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1240,
        1179,
        1174,
        1174
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 463
    },
    "464": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980299777083",
      "endTime": "578982356739489",
      "elapsedTime": "2056962406",
      "asyncId": 1174,
      "triggerAsyncId": 1173,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1176
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 464
    },
    "465": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979241081219",
      "endTime": "578979241103391",
      "elapsedTime": "22172",
      "asyncId": 1175,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 465
    },
    "466": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979241348801",
      "endTime": "578979275430240",
      "elapsedTime": "34081439",
      "asyncId": 1176,
      "triggerAsyncId": 1174,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1306,
        1305
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 466
    },
    "467": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979241545139",
      "endTime": "578979305400703",
      "elapsedTime": "63855564",
      "asyncId": 1177,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1241
      ],
      "uniqueid": 467
    },
    "468": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979241747689",
      "endTime": "578979303145906",
      "elapsedTime": "61398217",
      "asyncId": 1178,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1212
      ],
      "uniqueid": 468
    },
    "469": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578979199119598",
      "endTime": "578979303571153",
      "elapsedTime": "104451555",
      "asyncId": 1179,
      "triggerAsyncId": 1173,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 469
    },
    "470": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979199301199",
      "endTime": "578979321630607",
      "elapsedTime": "122329408",
      "asyncId": 1180,
      "triggerAsyncId": 1146,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1211
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 470
    },
    "471": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979243100164",
      "endTime": "578979286585432",
      "elapsedTime": "43485268",
      "asyncId": 1183,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1310
      ],
      "uniqueid": 471
    },
    "472": {
      "source": "node_modules/@nestjs/core/injector/injector.js:144:44:144:44",
      "startTime": "578979243394826",
      "endTime": "578979243471470",
      "elapsedTime": "76644",
      "asyncId": 1184,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n    async resolveComponentInstance(moduleRef, name, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) ",
      "startLine": 144,
      "startCol": 44,
      "endLine": 144,
      "endCol": 44,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1185
      ],
      "uniqueid": 472
    },
    "473": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979243709857",
      "endTime": "578979275782931",
      "elapsedTime": "32073074",
      "asyncId": 1185,
      "triggerAsyncId": 1184,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        1309
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 473
    },
    "474": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578979244346961",
      "endTime": "578979288287452",
      "elapsedTime": "43940491",
      "asyncId": 1188,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        1189,
        1192
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 474
    },
    "475": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979244547768",
      "endTime": "578979286649552",
      "elapsedTime": "42101784",
      "asyncId": 1189,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1312
      ],
      "uniqueid": 475
    },
    "476": {
      "source": "node_modules/@nestjs/core/injector/injector.js:144:44:144:44",
      "startTime": "578979244755557",
      "endTime": "578979244771197",
      "elapsedTime": "15640",
      "asyncId": 1190,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n    async resolveComponentInstance(moduleRef, name, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) ",
      "startLine": 144,
      "startCol": 44,
      "endLine": 144,
      "endCol": 44,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1191
      ],
      "uniqueid": 476
    },
    "477": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979244995497",
      "endTime": "578979276114362",
      "elapsedTime": "31118865",
      "asyncId": 1191,
      "triggerAsyncId": 1190,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        1199,
        1311
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 477
    },
    "478": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578979245624897",
      "endTime": "578979288344599",
      "elapsedTime": "42719702",
      "asyncId": 1194,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        1195,
        1197,
        1198
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 478
    },
    "479": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979245967549",
      "endTime": "578979286728620",
      "elapsedTime": "40761071",
      "asyncId": 1195,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        1196,
        1314
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 479
    },
    "480": {
      "source": "node_modules/@nestjs/core/injector/injector.js:144:44:144:44",
      "startTime": "578979246171161",
      "endTime": "578979246186520",
      "elapsedTime": "15359",
      "asyncId": 1196,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n    async resolveComponentInstance(moduleRef, name, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) ",
      "startLine": 144,
      "startCol": 44,
      "endLine": 144,
      "endCol": 44,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1197
      ],
      "uniqueid": 480
    },
    "481": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979246388068",
      "endTime": "578979276445523",
      "elapsedTime": "30057455",
      "asyncId": 1197,
      "triggerAsyncId": 1196,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        1201,
        1313
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 481
    },
    "482": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578979246983414",
      "endTime": "578979288412877",
      "elapsedTime": "41429463",
      "asyncId": 1200,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1204
      ],
      "uniqueid": 482
    },
    "483": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979247190532",
      "endTime": "578979286794293",
      "elapsedTime": "39603761",
      "asyncId": 1201,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        1202,
        1316
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 483
    },
    "484": {
      "source": "node_modules/@nestjs/core/injector/injector.js:144:44:144:44",
      "startTime": "578979247386860",
      "endTime": "578979247404102",
      "elapsedTime": "17242",
      "asyncId": 1202,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n    async resolveComponentInstance(moduleRef, name, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) ",
      "startLine": 144,
      "startCol": 44,
      "endLine": 144,
      "endCol": 44,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1203
      ],
      "uniqueid": 484
    },
    "485": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979247621019",
      "endTime": "578979276818052",
      "elapsedTime": "29197033",
      "asyncId": 1203,
      "triggerAsyncId": 1202,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        1206,
        1315
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 485
    },
    "486": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578979248018975",
      "endTime": "578979291101688",
      "elapsedTime": "43082713",
      "asyncId": 1205,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        1207,
        1210
      ],
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 486
    },
    "487": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979248900086",
      "endTime": "578979298884808",
      "elapsedTime": "49984722",
      "asyncId": 1210,
      "triggerAsyncId": 1205,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1377,
        1376,
        1375
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 487
    },
    "488": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980311788840",
      "endTime": "578982356784714",
      "elapsedTime": "2044995874",
      "asyncId": 1211,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1348
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 488
    },
    "489": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979249296339",
      "endTime": "578979304024383",
      "elapsedTime": "54728044",
      "asyncId": 1212,
      "triggerAsyncId": 1178,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1347,
        1392,
        1391
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 489
    },
    "490": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980358996435",
      "endTime": "578980359022124",
      "elapsedTime": "25689",
      "asyncId": 1213,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1242,
        1344,
        1214,
        1214
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 490
    },
    "491": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980312401328",
      "endTime": "578982356813538",
      "elapsedTime": "2044412210",
      "asyncId": 1214,
      "triggerAsyncId": 1213,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1216,
        1278
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 491
    },
    "492": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979217385068",
      "endTime": "578979293676835",
      "elapsedTime": "76291767",
      "asyncId": 1215,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1268
      ],
      "uniqueid": 492
    },
    "493": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979217730426",
      "endTime": "578979286164392",
      "elapsedTime": "68433966",
      "asyncId": 1216,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1318,
        1317,
        1222
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 493
    },
    "494": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979250588301",
      "endTime": "578979286895944",
      "elapsedTime": "36307643",
      "asyncId": 1217,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1243
      ],
      "uniqueid": 494
    },
    "495": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979218418476",
      "endTime": "578979285798286",
      "elapsedTime": "67379810",
      "asyncId": 1218,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1220,
        1221
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 495
    },
    "496": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979256610961",
      "endTime": "578979256640387",
      "elapsedTime": "29426",
      "asyncId": 1219,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1220
      ],
      "uniqueid": 496
    },
    "497": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979256943585",
      "endTime": "578979278523759",
      "elapsedTime": "21580174",
      "asyncId": 1220,
      "triggerAsyncId": 1218,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1351,
        1350,
        1322,
        1321,
        1349
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 497
    },
    "498": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979257132519",
      "endTime": "578979301654199",
      "elapsedTime": "44521680",
      "asyncId": 1221,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1244
      ],
      "uniqueid": 498
    },
    "499": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979257329869",
      "endTime": "578979291170236",
      "elapsedTime": "33840367",
      "asyncId": 1222,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1445,
        1444,
        1228
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 499
    },
    "500": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979257757451",
      "endTime": "578979288520670",
      "elapsedTime": "30763219",
      "asyncId": 1223,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        1269
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 500
    },
    "501": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979257968196",
      "endTime": "578979289134771",
      "elapsedTime": "31166575",
      "asyncId": 1224,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1226,
        1227
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 501
    },
    "502": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578979258240396",
      "endTime": "578979258256216",
      "elapsedTime": "15820",
      "asyncId": 1225,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1226
      ],
      "uniqueid": 502
    },
    "503": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979258467662",
      "endTime": "578979279758805",
      "elapsedTime": "21291143",
      "asyncId": 1226,
      "triggerAsyncId": 1225,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1356,
        1355,
        1327,
        1326,
        1325
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 503
    },
    "504": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979258641969",
      "endTime": "578979291200914",
      "elapsedTime": "32558945",
      "asyncId": 1227,
      "triggerAsyncId": 1224,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1270
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 504
    },
    "505": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979259013135",
      "endTime": "578979299777221",
      "elapsedTime": "40764086",
      "asyncId": 1228,
      "triggerAsyncId": 1222,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1230,
        1382,
        1381
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 505
    },
    "506": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979259190026",
      "endTime": "578979287488354",
      "elapsedTime": "28298328",
      "asyncId": 1229,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1245
      ],
      "uniqueid": 506
    },
    "507": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979221807950",
      "endTime": "578979262602293",
      "elapsedTime": "40794343",
      "asyncId": 1230,
      "triggerAsyncId": 1228,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1360,
        1359,
        1232
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 507
    },
    "508": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979222037119",
      "endTime": "578979293727841",
      "elapsedTime": "71690722",
      "asyncId": 1231,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1271
      ],
      "uniqueid": 508
    },
    "509": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979222270046",
      "endTime": "578979286224936",
      "elapsedTime": "63954890",
      "asyncId": 1232,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1332,
        1331,
        1238
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 509
    },
    "510": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979259972022",
      "endTime": "578979287546704",
      "elapsedTime": "27574682",
      "asyncId": 1233,
      "triggerAsyncId": 1050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1246
      ],
      "uniqueid": 510
    },
    "511": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979222740398",
      "endTime": "578979285856756",
      "elapsedTime": "63116358",
      "asyncId": 1234,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1236,
        1237
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 511
    },
    "512": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979260360991",
      "endTime": "578979260378634",
      "elapsedTime": "17643",
      "asyncId": 1235,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1236
      ],
      "uniqueid": 512
    },
    "513": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979260612132",
      "endTime": "578979281428544",
      "elapsedTime": "20816412",
      "asyncId": 1236,
      "triggerAsyncId": 1234,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1365,
        1364,
        1336,
        1335,
        1363
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 513
    },
    "514": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:23:43:23",
      "startTime": "578979260819601",
      "endTime": "578979305530556",
      "elapsedTime": "44710955",
      "asyncId": 1237,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfProviders",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 23,
      "endLine": 43,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1247
      ],
      "uniqueid": 514
    },
    "515": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979225886055",
      "endTime": "578979293424542",
      "elapsedTime": "67538487",
      "asyncId": 1239,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1272
      ],
      "uniqueid": 515
    },
    "516": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578979262612141",
      "endTime": "578979305633549",
      "elapsedTime": "43021408",
      "asyncId": 1247,
      "triggerAsyncId": 1237,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1273
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 516
    },
    "517": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:27:23:27:23",
      "startTime": "578979263021308",
      "endTime": "578979307891682",
      "elapsedTime": "44870374",
      "asyncId": 1249,
      "triggerAsyncId": 1050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstances",
      "userCode": false,
      "line": "\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module)",
      "startLine": 27,
      "startCol": 23,
      "endLine": 27,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1252
      ],
      "uniqueid": 517
    },
    "518": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980322045367",
      "endTime": "578982356849525",
      "elapsedTime": "2034804158",
      "asyncId": 1251,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1252
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 518
    },
    "519": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578979263581448",
      "endTime": "578979307968717",
      "elapsedTime": "44387269",
      "asyncId": 1252,
      "triggerAsyncId": 1249,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "triggers": [
        1374,
        1373
      ],
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 519
    },
    "520": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980380976239",
      "endTime": "578980380994042",
      "elapsedTime": "17803",
      "asyncId": 1253,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        1254,
        1254
      ],
      "uniqueid": 520
    },
    "521": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980322637748",
      "endTime": "578982356877848",
      "elapsedTime": "2034240100",
      "asyncId": 1254,
      "triggerAsyncId": 1253,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1441,
        1440
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 521
    },
    "522": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979264210928",
      "endTime": "578979287654375",
      "elapsedTime": "23443447",
      "asyncId": 1255,
      "triggerAsyncId": 1100,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        1274,
        1260
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 522
    },
    "523": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578979264525438",
      "endTime": "578979281465794",
      "elapsedTime": "16940356",
      "asyncId": 1256,
      "triggerAsyncId": 1100,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        1258,
        1259
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 523
    },
    "524": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578979264793611",
      "endTime": "578979264807196",
      "elapsedTime": "13585",
      "asyncId": 1257,
      "triggerAsyncId": 1100,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1258
      ],
      "uniqueid": 524
    },
    "525": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578979265027259",
      "endTime": "578979281490531",
      "elapsedTime": "16463272",
      "asyncId": 1258,
      "triggerAsyncId": 1257,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        1378,
        1377
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 525
    },
    "526": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979265231962",
      "endTime": "578979284760450",
      "elapsedTime": "19528488",
      "asyncId": 1259,
      "triggerAsyncId": 1256,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        1347,
        1275
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 526
    },
    "527": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979265428641",
      "endTime": "578979288672514",
      "elapsedTime": "23243873",
      "asyncId": 1260,
      "triggerAsyncId": 1255,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1262
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 527
    },
    "528": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979265710309",
      "endTime": "578979281514866",
      "elapsedTime": "15804557",
      "asyncId": 1261,
      "triggerAsyncId": 1106,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1264
      ],
      "uniqueid": 528
    },
    "529": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979232662458",
      "endTime": "578979267272527",
      "elapsedTime": "34610069",
      "asyncId": 1262,
      "triggerAsyncId": 1260,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1382,
        1381,
        1263
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 529
    },
    "530": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979232895725",
      "endTime": "578979283296476",
      "elapsedTime": "50400751",
      "asyncId": 1263,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1276
      ],
      "uniqueid": 530
    },
    "531": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979266350479",
      "endTime": "578979284835852",
      "elapsedTime": "18485373",
      "asyncId": 1264,
      "triggerAsyncId": 1261,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1266
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 531
    },
    "532": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979266567305",
      "endTime": "578979281566423",
      "elapsedTime": "14999118",
      "asyncId": 1265,
      "triggerAsyncId": 1110,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1268
      ],
      "uniqueid": 532
    },
    "533": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979233730610",
      "endTime": "578979268083839",
      "elapsedTime": "34353229",
      "asyncId": 1266,
      "triggerAsyncId": 1264,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1386,
        1385,
        1267
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 533
    },
    "534": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:23:43:23",
      "startTime": "578979233976952",
      "endTime": "578979294676650",
      "elapsedTime": "60699698",
      "asyncId": 1267,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfProviders",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 23,
      "endLine": 43,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1277
      ],
      "uniqueid": 534
    },
    "535": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979267383195",
      "endTime": "578979287806070",
      "elapsedTime": "20422875",
      "asyncId": 1269,
      "triggerAsyncId": 1116,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1274
      ],
      "uniqueid": 535
    },
    "536": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979268385614",
      "endTime": "578979288728689",
      "elapsedTime": "20343075",
      "asyncId": 1274,
      "triggerAsyncId": 1269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 536
    },
    "537": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979268609073",
      "endTime": "578979285559328",
      "elapsedTime": "16950255",
      "asyncId": 1275,
      "triggerAsyncId": 1124,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1278
      ],
      "uniqueid": 537
    },
    "538": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578979237458037",
      "endTime": "578979295354630",
      "elapsedTime": "57896593",
      "asyncId": 1277,
      "triggerAsyncId": 1267,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1339
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 538
    },
    "539": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578979238169992",
      "endTime": "578979299617432",
      "elapsedTime": "61447440",
      "asyncId": 1280,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1281,
        1342
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 539
    },
    "540": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979238386628",
      "endTime": "578979293825274",
      "elapsedTime": "55438646",
      "asyncId": 1281,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1341,
        1333
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 540
    },
    "541": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979238589468",
      "endTime": "578979288040639",
      "elapsedTime": "49451171",
      "asyncId": 1282,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1288
      ],
      "uniqueid": 541
    },
    "542": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979238823717",
      "endTime": "578979285378329",
      "elapsedTime": "46554612",
      "asyncId": 1283,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1286
      ],
      "uniqueid": 542
    },
    "543": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979239069658",
      "endTime": "578979286014381",
      "elapsedTime": "46944723",
      "asyncId": 1284,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1285,
        1287
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 543
    },
    "544": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979270645801",
      "endTime": "578979283039695",
      "elapsedTime": "12393894",
      "asyncId": 1285,
      "triggerAsyncId": 1284,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1286
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 544
    },
    "545": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979270836038",
      "endTime": "578979285754564",
      "elapsedTime": "14918526",
      "asyncId": 1286,
      "triggerAsyncId": 1283,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1391,
        1390,
        1389
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 545
    },
    "546": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979239809044",
      "endTime": "578979288070586",
      "elapsedTime": "48261542",
      "asyncId": 1287,
      "triggerAsyncId": 1284,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1290
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 546
    },
    "547": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979240013167",
      "endTime": "578979290927191",
      "elapsedTime": "50914024",
      "asyncId": 1288,
      "triggerAsyncId": 1282,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1289,
        1453,
        1452
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 547
    },
    "548": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979240221277",
      "endTime": "578979283993613",
      "elapsedTime": "43772336",
      "asyncId": 1289,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1334
      ],
      "uniqueid": 548
    },
    "549": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979271677225",
      "endTime": "578979285813384",
      "elapsedTime": "14136159",
      "asyncId": 1290,
      "triggerAsyncId": 1287,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1292
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 549
    },
    "550": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980341280796",
      "endTime": "578982356915278",
      "elapsedTime": "2015634482",
      "asyncId": 1291,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1294
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 550
    },
    "551": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979272099296",
      "endTime": "578979272113242",
      "elapsedTime": "13946",
      "asyncId": 1292,
      "triggerAsyncId": 1146,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "triggers": [
        1396,
        1395,
        1293
      ],
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 551
    },
    "552": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980407773122",
      "endTime": "578980407791477",
      "elapsedTime": "18355",
      "asyncId": 1293,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1335,
        1294,
        1294
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 552
    },
    "553": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980341858719",
      "endTime": "578982356945755",
      "elapsedTime": "2015087036",
      "asyncId": 1294,
      "triggerAsyncId": 1293,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1296
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 553
    },
    "554": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979272734597",
      "endTime": "578979288090252",
      "elapsedTime": "15355655",
      "asyncId": 1295,
      "triggerAsyncId": 1166,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1300
      ],
      "uniqueid": 554
    },
    "555": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578979272938349",
      "endTime": "578979283212258",
      "elapsedTime": "10273909",
      "asyncId": 1296,
      "triggerAsyncId": 1166,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        1400,
        1399,
        1299
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 555
    },
    "556": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979247886256",
      "endTime": "578979299372032",
      "elapsedTime": "51485776",
      "asyncId": 1297,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1298,
        1336
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 556
    },
    "557": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979248107471",
      "endTime": "578979296966111",
      "elapsedTime": "48858640",
      "asyncId": 1298,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1311
      ],
      "uniqueid": 557
    },
    "558": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979248293249",
      "endTime": "578979295224296",
      "elapsedTime": "46931047",
      "asyncId": 1299,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        1351
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 558
    },
    "559": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979248485650",
      "endTime": "578979295380379",
      "elapsedTime": "46894729",
      "asyncId": 1300,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1310
      ],
      "uniqueid": 559
    },
    "560": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578979249234012",
      "endTime": "578979285531636",
      "elapsedTime": "36297624",
      "asyncId": 1302,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        1303,
        1306
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 560
    },
    "561": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578979249527753",
      "endTime": "578979284176165",
      "elapsedTime": "34648412",
      "asyncId": 1303,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1404
      ],
      "uniqueid": 561
    },
    "562": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979274610363",
      "endTime": "578979286500512",
      "elapsedTime": "11890149",
      "asyncId": 1304,
      "triggerAsyncId": 1301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1305
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 562
    },
    "563": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979274833201",
      "endTime": "578979283335850",
      "elapsedTime": "8502649",
      "asyncId": 1305,
      "triggerAsyncId": 1176,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1403,
        1308
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 563
    },
    "564": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578979250565829",
      "endTime": "578979288102265",
      "elapsedTime": "37536436",
      "asyncId": 1307,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1309
      ],
      "uniqueid": 564
    },
    "565": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979250939369",
      "endTime": "578979292331483",
      "elapsedTime": "41392114",
      "asyncId": 1309,
      "triggerAsyncId": 1307,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        1343,
        1458,
        1457,
        1456
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 565
    },
    "566": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979251124627",
      "endTime": "578979296995266",
      "elapsedTime": "45870639",
      "asyncId": 1310,
      "triggerAsyncId": 1300,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 566
    },
    "567": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979251310395",
      "endTime": "578979298058038",
      "elapsedTime": "46747643",
      "asyncId": 1311,
      "triggerAsyncId": 1298,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1344,
        1473,
        1472
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 567
    },
    "568": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979276242312",
      "endTime": "578979288310476",
      "elapsedTime": "12068164",
      "asyncId": 1312,
      "triggerAsyncId": 1189,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1337
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 568
    },
    "569": {
      "source": "node_modules/@nestjs/core/injector/injector.js:145:21:145:21",
      "startTime": "578979276374250",
      "endTime": "578979276391241",
      "elapsedTime": "16991",
      "asyncId": 1313,
      "triggerAsyncId": 1197,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "triggers": [
        1315,
        1345
      ],
      "line": "\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer)",
      "startLine": 145,
      "startCol": 21,
      "endLine": 145,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 569
    },
    "570": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979276587560",
      "endTime": "578979288370317",
      "elapsedTime": "11782757",
      "asyncId": 1314,
      "triggerAsyncId": 1195,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 570
    },
    "571": {
      "source": "node_modules/@nestjs/core/injector/injector.js:145:21:145:21",
      "startTime": "578979276743061",
      "endTime": "578979276757739",
      "elapsedTime": "14678",
      "asyncId": 1315,
      "triggerAsyncId": 1203,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "triggers": [
        1406,
        1405,
        1346
      ],
      "line": "\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer)",
      "startLine": 145,
      "startCol": 21,
      "endLine": 145,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 571
    },
    "572": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979276939369",
      "endTime": "578979288444166",
      "elapsedTime": "11504797",
      "asyncId": 1316,
      "triggerAsyncId": 1201,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1338
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 572
    },
    "573": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979277127492",
      "endTime": "578979283906349",
      "elapsedTime": "6778857",
      "asyncId": 1317,
      "triggerAsyncId": 1216,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1319,
        1320
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 573
    },
    "574": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979277308151",
      "endTime": "578979277323058",
      "elapsedTime": "14907",
      "asyncId": 1318,
      "triggerAsyncId": 1216,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1319
      ],
      "uniqueid": 574
    },
    "575": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979277513115",
      "endTime": "578979283944231",
      "elapsedTime": "6431116",
      "asyncId": 1319,
      "triggerAsyncId": 1318,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1410,
        1409
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 575
    },
    "576": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979253060806",
      "endTime": "578979294600407",
      "elapsedTime": "41539601",
      "asyncId": 1320,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1339
      ],
      "uniqueid": 576
    },
    "577": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979253238209",
      "endTime": "578979288170954",
      "elapsedTime": "34932745",
      "asyncId": 1321,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1324,
        1327
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 577
    },
    "578": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578979253420170",
      "endTime": "578979285670266",
      "elapsedTime": "32250096",
      "asyncId": 1322,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        1323
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 578
    },
    "579": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578979253606539",
      "endTime": "578979286115861",
      "elapsedTime": "32509322",
      "asyncId": 1323,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1326
      ],
      "uniqueid": 579
    },
    "580": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979278511356",
      "endTime": "578979286918446",
      "elapsedTime": "8407090",
      "asyncId": 1324,
      "triggerAsyncId": 1321,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1325
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 580
    },
    "581": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979278735516",
      "endTime": "578979288545476",
      "elapsedTime": "9809960",
      "asyncId": 1325,
      "triggerAsyncId": 1226,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        1415,
        1414,
        1413,
        1330
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 581
    },
    "582": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578979254234005",
      "endTime": "578979288204667",
      "elapsedTime": "33970662",
      "asyncId": 1326,
      "triggerAsyncId": 1323,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1329
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 582
    },
    "583": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979254418622",
      "endTime": "578979293290781",
      "elapsedTime": "38872159",
      "asyncId": 1327,
      "triggerAsyncId": 1321,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1328,
        1463,
        1462
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 583
    },
    "584": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578979254619438",
      "endTime": "578979284867882",
      "elapsedTime": "30248444",
      "asyncId": 1328,
      "triggerAsyncId": 1170,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1340
      ],
      "uniqueid": 584
    },
    "585": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979279562076",
      "endTime": "578979287459190",
      "elapsedTime": "7897114",
      "asyncId": 1329,
      "triggerAsyncId": 1326,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        1331,
        1353
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 585
    },
    "586": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979279746050",
      "endTime": "578979289158625",
      "elapsedTime": "9412575",
      "asyncId": 1330,
      "triggerAsyncId": 1325,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 586
    },
    "587": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980351054127",
      "endTime": "578982356987083",
      "elapsedTime": "2005932956",
      "asyncId": 1331,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1420,
        1419,
        1334
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 587
    },
    "588": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578980450645942",
      "endTime": "578980450665729",
      "elapsedTime": "19787",
      "asyncId": 1332,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "triggers": [
        1333,
        1341
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 588
    },
    "589": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578980462628314",
      "endTime": "578980462646959",
      "elapsedTime": "18645",
      "asyncId": 1333,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1334
      ],
      "uniqueid": 589
    },
    "590": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980351631580",
      "endTime": "578982357029873",
      "elapsedTime": "2005398293",
      "asyncId": 1334,
      "triggerAsyncId": 1333,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 590
    },
    "591": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578981763265632",
      "endTime": "578981763289306",
      "elapsedTime": "23674",
      "asyncId": 1336,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1337,
        1337
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 591
    },
    "592": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578981763599618",
      "endTime": "578982336337173",
      "elapsedTime": "572737555",
      "asyncId": 1337,
      "triggerAsyncId": 1336,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 592
    },
    "593": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979281415640",
      "endTime": "578979287578043",
      "elapsedTime": "6162403",
      "asyncId": 1338,
      "triggerAsyncId": 1335,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 593
    },
    "594": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578979257942718",
      "endTime": "578979299643991",
      "elapsedTime": "41701273",
      "asyncId": 1341,
      "triggerAsyncId": 1332,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1342
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 594
    },
    "595": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:27:23:27:23",
      "startTime": "578979258341976",
      "endTime": "578979302457024",
      "elapsedTime": "44115048",
      "asyncId": 1343,
      "triggerAsyncId": 1170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstances",
      "userCode": false,
      "line": "\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module)",
      "startLine": 27,
      "startCol": 23,
      "endLine": 27,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1346
      ],
      "uniqueid": 595
    },
    "596": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578979258930660",
      "endTime": "578979302544899",
      "elapsedTime": "43614239",
      "asyncId": 1346,
      "triggerAsyncId": 1343,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 596
    },
    "597": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:43:35:43:35",
      "startTime": "578979259106539",
      "endTime": "578979302604721",
      "elapsedTime": "43498182",
      "asyncId": 1347,
      "triggerAsyncId": 1212,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "triggers": [
        1348
      ],
      "line": "\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders();\n        const root = this.getRootModule();\n        return new testing_module_1.TestingModule(this.container, [], root, this.applicationConfig)",
      "startLine": 43,
      "startCol": 35,
      "endLine": 43,
      "endCol": 35,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "uniqueid": 597
    },
    "598": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979259256461",
      "endTime": "578979302890748",
      "elapsedTime": "43634287",
      "asyncId": 1348,
      "triggerAsyncId": 1211,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 598
    },
    "599": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578979285138279",
      "endTime": "578979285181630",
      "elapsedTime": "43351",
      "asyncId": 1349,
      "triggerAsyncId": 1273,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1354,
        1350
      ],
      "uniqueid": 599
    },
    "600": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979285420588",
      "endTime": "578979287832750",
      "elapsedTime": "2412162",
      "asyncId": 1350,
      "triggerAsyncId": 1349,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1353
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 600
    },
    "601": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578979286111643",
      "endTime": "578979286171716",
      "elapsedTime": "60073",
      "asyncId": 1351,
      "triggerAsyncId": 1299,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        1352,
        1352
      ],
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 601
    },
    "602": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979286415533",
      "endTime": "578979288119798",
      "elapsedTime": "1704265",
      "asyncId": 1352,
      "triggerAsyncId": 1351,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 602
    },
    "603": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578979287161812",
      "endTime": "578979287212958",
      "elapsedTime": "51146",
      "asyncId": 1353,
      "triggerAsyncId": 1329,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        1428,
        1354
      ],
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 603
    },
    "604": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979287446185",
      "endTime": "578979288567587",
      "elapsedTime": "1121402",
      "asyncId": 1354,
      "triggerAsyncId": 1353,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 604
    },
    "605": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979289476371",
      "endTime": "578979296666600",
      "elapsedTime": "7190229",
      "asyncId": 1355,
      "triggerAsyncId": 1126,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1358,
        1358
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 605
    },
    "606": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979289667710",
      "endTime": "578979289691033",
      "elapsedTime": "23323",
      "asyncId": 1356,
      "triggerAsyncId": 1126,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "triggers": [
        1357,
        1357
      ],
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 606
    },
    "607": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979289896819",
      "endTime": "578979296692939",
      "elapsedTime": "6796120",
      "asyncId": 1357,
      "triggerAsyncId": 1356,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 607
    },
    "608": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979290109328",
      "endTime": "578979300394348",
      "elapsedTime": "10285020",
      "asyncId": 1358,
      "triggerAsyncId": 1355,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 608
    },
    "609": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979290336704",
      "endTime": "578979296716654",
      "elapsedTime": "6379950",
      "asyncId": 1359,
      "triggerAsyncId": 1134,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1362,
        1362
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 609
    },
    "610": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979290527441",
      "endTime": "578979290540957",
      "elapsedTime": "13516",
      "asyncId": 1360,
      "triggerAsyncId": 1134,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "triggers": [
        1361,
        1361
      ],
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 610
    },
    "611": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979290748335",
      "endTime": "578979296739867",
      "elapsedTime": "5991532",
      "asyncId": 1361,
      "triggerAsyncId": 1360,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 611
    },
    "612": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979290922762",
      "endTime": "578979300449100",
      "elapsedTime": "9526338",
      "asyncId": 1362,
      "triggerAsyncId": 1359,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 612
    },
    "613": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979291422018",
      "endTime": "578979299813339",
      "elapsedTime": "8391321",
      "asyncId": 1363,
      "triggerAsyncId": 1102,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1368,
        1366
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 613
    },
    "614": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979291621111",
      "endTime": "578979291635559",
      "elapsedTime": "14448",
      "asyncId": 1364,
      "triggerAsyncId": 1102,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "triggers": [
        1367,
        1365
      ],
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 614
    },
    "615": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979291851964",
      "endTime": "578979300271187",
      "elapsedTime": "8419223",
      "asyncId": 1365,
      "triggerAsyncId": 1364,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1366
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 615
    },
    "616": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979292061327",
      "endTime": "578979300663893",
      "elapsedTime": "8602566",
      "asyncId": 1366,
      "triggerAsyncId": 1363,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 616
    },
    "617": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979295941741",
      "endTime": "578979300309269",
      "elapsedTime": "4367528",
      "asyncId": 1367,
      "triggerAsyncId": 1118,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1430,
        1370
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 617
    },
    "618": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979296150653",
      "endTime": "578979296165541",
      "elapsedTime": "14888",
      "asyncId": 1368,
      "triggerAsyncId": 1118,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1369
      ],
      "uniqueid": 618
    },
    "619": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979296388739",
      "endTime": "578979300335137",
      "elapsedTime": "3946398",
      "asyncId": 1369,
      "triggerAsyncId": 1368,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1372
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 619
    },
    "620": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979296617798",
      "endTime": "578979300712334",
      "elapsedTime": "4094536",
      "asyncId": 1370,
      "triggerAsyncId": 1367,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1371
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 620
    },
    "621": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980369697005",
      "endTime": "578982357070059",
      "elapsedTime": "1987373054",
      "asyncId": 1371,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1423,
        1374
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 621
    },
    "622": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979297172318",
      "endTime": "578979297185132",
      "elapsedTime": "12814",
      "asyncId": 1372,
      "triggerAsyncId": 1168,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1373
      ],
      "uniqueid": 622
    },
    "623": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980370167096",
      "endTime": "578980370183277",
      "elapsedTime": "16181",
      "asyncId": 1373,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1376,
        1374
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 623
    },
    "624": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980370513766",
      "endTime": "578982357102820",
      "elapsedTime": "1986589054",
      "asyncId": 1374,
      "triggerAsyncId": 1373,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1375
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 624
    },
    "625": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979297818709",
      "endTime": "578979301919026",
      "elapsedTime": "4100317",
      "asyncId": 1375,
      "triggerAsyncId": 1210,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        1425,
        1380
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 625
    },
    "626": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578981771627056",
      "endTime": "578981771644589",
      "elapsedTime": "17533",
      "asyncId": 1376,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1379,
        1377
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 626
    },
    "627": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578981771965941",
      "endTime": "578982336411362",
      "elapsedTime": "564445421",
      "asyncId": 1377,
      "triggerAsyncId": 1376,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1380,
        1378
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 627
    },
    "628": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578979298493424",
      "endTime": "578979300567272",
      "elapsedTime": "2073848",
      "asyncId": 1378,
      "triggerAsyncId": 1377,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        1379
      ],
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 628
    },
    "629": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578979298688129",
      "endTime": "578979301618944",
      "elapsedTime": "2930815",
      "asyncId": 1379,
      "triggerAsyncId": 1376,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        1385
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 629
    },
    "630": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979298872144",
      "endTime": "578979302129681",
      "elapsedTime": "3257537",
      "asyncId": 1380,
      "triggerAsyncId": 1375,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 630
    },
    "631": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979299148132",
      "endTime": "578979300591317",
      "elapsedTime": "1443185",
      "asyncId": 1381,
      "triggerAsyncId": 1228,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1384,
        1384
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 631
    },
    "632": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979299351663",
      "endTime": "578979299365970",
      "elapsedTime": "14307",
      "asyncId": 1382,
      "triggerAsyncId": 1228,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "triggers": [
        1383,
        1383
      ],
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 632
    },
    "633": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979299576535",
      "endTime": "578979300615883",
      "elapsedTime": "1039348",
      "asyncId": 1383,
      "triggerAsyncId": 1382,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 633
    },
    "634": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979299762954",
      "endTime": "578979301682723",
      "elapsedTime": "1919769",
      "asyncId": 1384,
      "triggerAsyncId": 1381,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 634
    },
    "635": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578979301099350",
      "endTime": "578979301368694",
      "elapsedTime": "269344",
      "asyncId": 1385,
      "triggerAsyncId": 1379,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "triggers": [
        1388,
        1386
      ],
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 635
    },
    "636": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979301606120",
      "endTime": "578979301952509",
      "elapsedTime": "346389",
      "asyncId": 1386,
      "triggerAsyncId": 1385,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1387
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 636
    },
    "637": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979302465791",
      "endTime": "578979303193044",
      "elapsedTime": "727253",
      "asyncId": 1387,
      "triggerAsyncId": 1158,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1390
      ],
      "uniqueid": 637
    },
    "638": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578979302659845",
      "endTime": "578979302676376",
      "elapsedTime": "16531",
      "asyncId": 1388,
      "triggerAsyncId": 1158,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1389
      ],
      "uniqueid": 638
    },
    "639": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979302904964",
      "endTime": "578979303221137",
      "elapsedTime": "316173",
      "asyncId": 1389,
      "triggerAsyncId": 1388,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1394
      ],
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 639
    },
    "640": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979303102665",
      "endTime": "578979305047731",
      "elapsedTime": "1945066",
      "asyncId": 1390,
      "triggerAsyncId": 1387,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1393,
        1396,
        1395
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 640
    },
    "641": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979303419028",
      "endTime": "578979305078649",
      "elapsedTime": "1659621",
      "asyncId": 1391,
      "triggerAsyncId": 1212,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1392,
        1394
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 641
    },
    "642": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979303599326",
      "endTime": "578979303624834",
      "elapsedTime": "25508",
      "asyncId": 1392,
      "triggerAsyncId": 1212,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1393
      ],
      "uniqueid": 642
    },
    "643": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979303826351",
      "endTime": "578979305111892",
      "elapsedTime": "1285541",
      "asyncId": 1393,
      "triggerAsyncId": 1392,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        1432
      ],
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 643
    },
    "644": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979304011669",
      "endTime": "578979305423025",
      "elapsedTime": "1411356",
      "asyncId": 1394,
      "triggerAsyncId": 1391,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 644
    },
    "645": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979304330096",
      "endTime": "578979305334789",
      "elapsedTime": "1004693",
      "asyncId": 1395,
      "triggerAsyncId": 1390,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1398,
        1398
      ],
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 645
    },
    "646": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578979304543456",
      "endTime": "578979304556440",
      "elapsedTime": "12984",
      "asyncId": 1396,
      "triggerAsyncId": 1390,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "triggers": [
        1397,
        1397
      ],
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 646
    },
    "647": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979304816227",
      "endTime": "578979305374734",
      "elapsedTime": "558507",
      "asyncId": 1397,
      "triggerAsyncId": 1396,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 647
    },
    "648": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979305035498",
      "endTime": "578979305504047",
      "elapsedTime": "468549",
      "asyncId": 1398,
      "triggerAsyncId": 1395,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 648
    },
    "649": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979305959300",
      "endTime": "578979306757727",
      "elapsedTime": "798427",
      "asyncId": 1399,
      "triggerAsyncId": 1248,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1402,
        1402
      ],
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 649
    },
    "650": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578979306183370",
      "endTime": "578979306196194",
      "elapsedTime": "12824",
      "asyncId": 1400,
      "triggerAsyncId": 1248,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "triggers": [
        1401,
        1401
      ],
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 650
    },
    "651": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979306466611",
      "endTime": "578979306783685",
      "elapsedTime": "317074",
      "asyncId": 1401,
      "triggerAsyncId": 1400,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 651
    },
    "652": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979306707953",
      "endTime": "578979307638337",
      "elapsedTime": "930384",
      "asyncId": 1402,
      "triggerAsyncId": 1399,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1404,
        1403
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 652
    },
    "653": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979307010931",
      "endTime": "578979307665789",
      "elapsedTime": "654858",
      "asyncId": 1403,
      "triggerAsyncId": 1402,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1427,
        1406
      ],
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 653
    },
    "654": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578979307189286",
      "endTime": "578979307201579",
      "elapsedTime": "12293",
      "asyncId": 1404,
      "triggerAsyncId": 1402,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1405
      ],
      "uniqueid": 654
    },
    "655": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979307434515",
      "endTime": "578979307688061",
      "elapsedTime": "253546",
      "asyncId": 1405,
      "triggerAsyncId": 1404,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1408
      ],
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 655
    },
    "656": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979307626485",
      "endTime": "578979307866886",
      "elapsedTime": "240401",
      "asyncId": 1406,
      "triggerAsyncId": 1403,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1407
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 656
    },
    "657": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979309191399",
      "endTime": "578979328983521",
      "elapsedTime": "19792122",
      "asyncId": 1407,
      "triggerAsyncId": 1026,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1415
      ],
      "uniqueid": 657
    },
    "658": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578979309682910",
      "endTime": "578979309695624",
      "elapsedTime": "12714",
      "asyncId": 1408,
      "triggerAsyncId": 1026,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 658
    },
    "659": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979272472746",
      "endTime": "578979281228129",
      "elapsedTime": "8755383",
      "asyncId": 1409,
      "triggerAsyncId": 1319,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1412
      ],
      "uniqueid": 659
    },
    "660": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578979310110322",
      "endTime": "578979310121933",
      "elapsedTime": "11611",
      "asyncId": 1410,
      "triggerAsyncId": 1026,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "triggers": [
        1411,
        1411,
        1411
      ],
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 660
    },
    "661": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578980411006293",
      "endTime": "578982357144869",
      "elapsedTime": "1946138576",
      "asyncId": 1411,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1418,
        1421,
        1419,
        1423,
        1429,
        1412,
        1412
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 661
    },
    "662": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578979310492278",
      "endTime": "578979328497190",
      "elapsedTime": "18004912",
      "asyncId": 1412,
      "triggerAsyncId": 1411,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1433,
        1439,
        1432,
        1431,
        1430,
        1437,
        1441,
        1447,
        1413
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 662
    },
    "663": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578980411325261",
      "endTime": "578980411343956",
      "elapsedTime": "18695",
      "asyncId": 1413,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1418,
        1414
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 663
    },
    "664": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578980411619162",
      "endTime": "578982357172240",
      "elapsedTime": "1945553078",
      "asyncId": 1414,
      "triggerAsyncId": 1413,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1417
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 664
    },
    "665": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578981782243918",
      "endTime": "578981782261271",
      "elapsedTime": "17353",
      "asyncId": 1416,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        1417
      ],
      "uniqueid": 665
    },
    "666": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578981782530596",
      "endTime": "578982336477576",
      "elapsedTime": "553946980",
      "asyncId": 1417,
      "triggerAsyncId": 1416,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1434
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 666
    },
    "667": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979311499415",
      "endTime": "578979311574997",
      "elapsedTime": "75582",
      "asyncId": 1418,
      "triggerAsyncId": 1411,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1420
      ],
      "uniqueid": 667
    },
    "668": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979311751087",
      "endTime": "578979312863252",
      "elapsedTime": "1112165",
      "asyncId": 1419,
      "triggerAsyncId": 1411,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        1422,
        1425
      ],
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 668
    },
    "669": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979312037003",
      "endTime": "578979312048555",
      "elapsedTime": "11552",
      "asyncId": 1421,
      "triggerAsyncId": 1411,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 669
    },
    "670": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979275313391",
      "endTime": "578979284902036",
      "elapsedTime": "9588645",
      "asyncId": 1422,
      "triggerAsyncId": 1419,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 670
    },
    "671": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578979312387230",
      "endTime": "578979313157604",
      "elapsedTime": "770374",
      "asyncId": 1423,
      "triggerAsyncId": 1411,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "triggers": [
        1424
      ],
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "uniqueid": 671
    },
    "672": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979276321060",
      "endTime": "578979282737478",
      "elapsedTime": "6416418",
      "asyncId": 1424,
      "triggerAsyncId": 1423,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 672
    },
    "673": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578979312583167",
      "endTime": "578979313183653",
      "elapsedTime": "600486",
      "asyncId": 1425,
      "triggerAsyncId": 1419,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1426
      ],
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "uniqueid": 673
    },
    "674": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979280573091",
      "endTime": "578979283129443",
      "elapsedTime": "2556352",
      "asyncId": 1426,
      "triggerAsyncId": 1425,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 674
    },
    "675": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578979281590598",
      "endTime": "578979281661561",
      "elapsedTime": "70963",
      "asyncId": 1428,
      "triggerAsyncId": 1353,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1429
      ],
      "uniqueid": 675
    },
    "676": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979313384159",
      "endTime": "578979328316501",
      "elapsedTime": "14932342",
      "asyncId": 1430,
      "triggerAsyncId": 1412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        1431,
        1438
      ],
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 676
    },
    "677": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578979313744544",
      "endTime": "578979328255597",
      "elapsedTime": "14511053",
      "asyncId": 1431,
      "triggerAsyncId": 1412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        1436
      ],
      "uniqueid": 677
    },
    "678": {
      "source": "apps/api/src/model/lib/organization.service.spec.ts:91:19:91:19",
      "startTime": "578979316479912",
      "endTime": "578979327099950",
      "elapsedTime": "10620038",
      "asyncId": 1432,
      "triggerAsyncId": 1412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        1433,
        1444,
        1460,
        1435
      ],
      "line": "\n  it('will create a new bank account if needed and set the document numbering', async () => {\n    mockBankAccountServiceCalled = false;\n    await service.save(\n      mockEntityManager,\n      {\n        displayName: ''",
      "startLine": 91,
      "startCol": 19,
      "endLine": 91,
      "endCol": 19,
      "file": "apps/api/src/model/lib/organization.service.spec.ts",
      "uniqueid": 678
    },
    "679": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578979318241214",
      "endTime": "578979318259017",
      "elapsedTime": "17803",
      "asyncId": 1433,
      "triggerAsyncId": 1412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " OrganizationService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        1434
      ],
      "uniqueid": 679
    },
    "680": {
      "source": "apps/api/src/model/lib/organization.service.spec.ts:91:19:91:19",
      "startTime": "578979318549602",
      "endTime": "578979320536276",
      "elapsedTime": "1986674",
      "asyncId": 1434,
      "triggerAsyncId": 1433,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        1435
      ],
      "line": "\n  it('will create a new bank account if needed and set the document numbering', async () => {\n    mockBankAccountServiceCalled = false;\n    await service.save(\n      mockEntityManager,\n      {\n        displayName: ''",
      "startLine": 91,
      "startCol": 19,
      "endLine": 91,
      "endCol": 19,
      "file": "apps/api/src/model/lib/organization.service.spec.ts",
      "uniqueid": 680
    },
    "681": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578979318787538",
      "endTime": "578979328289059",
      "elapsedTime": "9501521",
      "asyncId": 1435,
      "triggerAsyncId": 1432,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 681
    },
    "682": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578979318981020",
      "endTime": "578979328340145",
      "elapsedTime": "9359125",
      "asyncId": 1436,
      "triggerAsyncId": 1431,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "triggers": [
        1439
      ],
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 682
    },
    "683": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979319142052",
      "endTime": "578979328363579",
      "elapsedTime": "9221527",
      "asyncId": 1437,
      "triggerAsyncId": 1412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        1438,
        1443
      ],
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 683
    },
    "684": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979319442045",
      "endTime": "578979319453546",
      "elapsedTime": "11501",
      "asyncId": 1439,
      "triggerAsyncId": 1412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 684
    },
    "685": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979287368580",
      "endTime": "578979290024248",
      "elapsedTime": "2655668",
      "asyncId": 1440,
      "triggerAsyncId": 1254,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1443
      ],
      "uniqueid": 685
    },
    "686": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578979319828790",
      "endTime": "578979328429092",
      "elapsedTime": "8600302",
      "asyncId": 1441,
      "triggerAsyncId": 1412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "triggers": [
        1442
      ],
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "uniqueid": 686
    },
    "687": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979287793627",
      "endTime": "578979290049245",
      "elapsedTime": "2255618",
      "asyncId": 1442,
      "triggerAsyncId": 1441,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 687
    },
    "688": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578979320076143",
      "endTime": "578979328454018",
      "elapsedTime": "8377875",
      "asyncId": 1443,
      "triggerAsyncId": 1437,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 688
    },
    "689": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979320324419",
      "endTime": "578979320509105",
      "elapsedTime": "184686",
      "asyncId": 1444,
      "triggerAsyncId": 1432,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1447,
        1445
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 689
    },
    "690": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979320497663",
      "endTime": "578979323833748",
      "elapsedTime": "3336085",
      "asyncId": 1445,
      "triggerAsyncId": 1444,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1446,
        1448
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 690
    },
    "691": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979288870445",
      "endTime": "578979293347307",
      "elapsedTime": "4476862",
      "asyncId": 1446,
      "triggerAsyncId": 1445,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 691
    },
    "692": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578979323148853",
      "endTime": "578979326610072",
      "elapsedTime": "3461219",
      "asyncId": 1448,
      "triggerAsyncId": 1445,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " OrganizationService.save",
      "userCode": false,
      "triggers": [
        1451,
        1449,
        1452,
        1458,
        1451
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 692
    },
    "693": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578979323390076",
      "endTime": "578979323609337",
      "elapsedTime": "219261",
      "asyncId": 1449,
      "triggerAsyncId": 1448,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " OrganizationService.save",
      "userCode": false,
      "triggers": [
        1450,
        1450
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 693
    },
    "694": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578979323597354",
      "endTime": "578979324361477",
      "elapsedTime": "764123",
      "asyncId": 1450,
      "triggerAsyncId": 1449,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " OrganizationService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [],
      "uniqueid": 694
    },
    "695": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979323817667",
      "endTime": "578979327075795",
      "elapsedTime": "3258128",
      "asyncId": 1451,
      "triggerAsyncId": 1448,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 695
    },
    "696": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578980450556514",
      "endTime": "578980450574879",
      "elapsedTime": "18365",
      "asyncId": 1452,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "triggers": [
        1455,
        1453
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 696
    },
    "697": {
      "source": "(/internal/bootstrap/loaders:259:10:259:10)",
      "startTime": "578980462593198",
      "endTime": "578980462607966",
      "elapsedTime": "14768",
      "asyncId": 1453,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " NativeModule.compileForPublicLoader",
      "userCode": false,
      "triggers": [
        1454,
        1454
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 697
    },
    "698": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578981764262911",
      "endTime": "578982357205833",
      "elapsedTime": "592942922",
      "asyncId": 1454,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "triggers": [
        1455,
        1457
      ],
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 698
    },
    "699": {
      "source": "apps/api/src/model/lib/organization.service.ts:90:28:90:28",
      "startTime": "578979324973734",
      "endTime": "578979325234874",
      "elapsedTime": "261140",
      "asyncId": 1455,
      "triggerAsyncId": 1454,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " OrganizationService.doSave",
      "userCode": false,
      "line": "\n    organization.vatNumber = args.vatNumber;\n\n    const org = await this.persist(\n      transactionalEntityManager,\n      organization,\n      currentUser",
      "startLine": 90,
      "startCol": 28,
      "endLine": 90,
      "endCol": 28,
      "file": "apps/api/src/model/lib/organization.service.ts",
      "triggers": [
        1456
      ],
      "uniqueid": 699
    },
    "700": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578981791265520",
      "endTime": "578981791281851",
      "elapsedTime": "16331",
      "asyncId": 1456,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1461,
        1457,
        1457
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 700
    },
    "701": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578981764920123",
      "endTime": "578982357235378",
      "elapsedTime": "592315255",
      "asyncId": 1457,
      "triggerAsyncId": 1456,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "triggers": [
        1460
      ],
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 701
    },
    "702": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979325870526",
      "endTime": "578979326558245",
      "elapsedTime": "687719",
      "asyncId": 1458,
      "triggerAsyncId": 1448,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1459,
        1459
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 702
    },
    "703": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979326545952",
      "endTime": "578979326633716",
      "elapsedTime": "87764",
      "asyncId": 1459,
      "triggerAsyncId": 1458,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 703
    },
    "704": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979326856714",
      "endTime": "578979327048213",
      "elapsedTime": "191499",
      "asyncId": 1460,
      "triggerAsyncId": 1432,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1466,
        1461
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 704
    },
    "705": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979327036391",
      "endTime": "578979327159492",
      "elapsedTime": "123101",
      "asyncId": 1461,
      "triggerAsyncId": 1460,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 705
    },
    "706": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979330412350",
      "endTime": "578979330670774",
      "elapsedTime": "258424",
      "asyncId": 1462,
      "triggerAsyncId": 38,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1465
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 706
    },
    "707": {
      "source": "node_modules/jest-runner/build/runTest.js:442:12:442:12",
      "startTime": "578979331191420",
      "endTime": "578979332515803",
      "elapsedTime": "1324383",
      "asyncId": 1463,
      "triggerAsyncId": 1019,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "triggers": [
        1464,
        1467
      ],
      "line": "\n    } // Delay the resolution to allow log messages to be output.\n\n    return new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector",
      "startLine": 442,
      "startCol": 12,
      "endLine": 442,
      "endCol": 12,
      "file": "node_modules/jest-runner/build/runTest.js",
      "uniqueid": 707
    },
    "708": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979293054549",
      "endTime": "578979293645987",
      "elapsedTime": "591438",
      "asyncId": 1464,
      "triggerAsyncId": 1463,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 708
    },
    "709": {
      "source": "node_modules/jest-runner/build/runTest.js:453:23:453:23",
      "startTime": "578979331581451",
      "endTime": "578979331650361",
      "elapsedTime": "68910",
      "asyncId": 1465,
      "triggerAsyncId": 1019,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    var _runtime$teardown;\n\n    await environment.teardown(); // TODO: this function might be missing, remove ? in Jest 26\n\n    (_runtime$teardown = runtime.teardown) === null ||\n    _runtime$teardown === void ",
      "startLine": 453,
      "startCol": 23,
      "endLine": 453,
      "endCol": 23,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        1466
      ],
      "uniqueid": 709
    },
    "710": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979331827653",
      "endTime": "578979332136301",
      "elapsedTime": "308648",
      "asyncId": 1466,
      "triggerAsyncId": 1465,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1467
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 710
    },
    "711": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979332280351",
      "endTime": "578979332565606",
      "elapsedTime": "285255",
      "asyncId": 1467,
      "triggerAsyncId": 1463,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 711
    },
    "712": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979295791569",
      "endTime": "578979297042925",
      "elapsedTime": "1251356",
      "asyncId": 1468,
      "triggerAsyncId": 1278,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1471
      ],
      "uniqueid": 712
    },
    "713": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578979296048060",
      "endTime": "578979296244248",
      "elapsedTime": "196188",
      "asyncId": 1469,
      "triggerAsyncId": 1278,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1470
      ],
      "uniqueid": 713
    },
    "714": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979296553398",
      "endTime": "578979297067361",
      "elapsedTime": "513963",
      "asyncId": 1470,
      "triggerAsyncId": 1469,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 714
    },
    "715": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979296908022",
      "endTime": "578979299230045",
      "elapsedTime": "2322023",
      "asyncId": 1471,
      "triggerAsyncId": 1468,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1477,
        1476
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 715
    },
    "716": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979297316158",
      "endTime": "578979299264310",
      "elapsedTime": "1948152",
      "asyncId": 1472,
      "triggerAsyncId": 1311,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1475
      ],
      "uniqueid": 716
    },
    "717": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578979297527153",
      "endTime": "578979297543424",
      "elapsedTime": "16271",
      "asyncId": 1473,
      "triggerAsyncId": 1311,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1474
      ],
      "uniqueid": 717
    },
    "718": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578979297808981",
      "endTime": "578979299288836",
      "elapsedTime": "1479855",
      "asyncId": 1474,
      "triggerAsyncId": 1473,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 718
    },
    "719": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979298045234",
      "endTime": "578979299412557",
      "elapsedTime": "1367323",
      "asyncId": 1475,
      "triggerAsyncId": 1472,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 719
    },
    "720": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979298401432",
      "endTime": "578979299318601",
      "elapsedTime": "917169",
      "asyncId": 1476,
      "triggerAsyncId": 1471,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1479
      ],
      "uniqueid": 720
    },
    "721": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578979298627356",
      "endTime": "578979298641632",
      "elapsedTime": "14276",
      "asyncId": 1477,
      "triggerAsyncId": 1471,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1478
      ],
      "uniqueid": 721
    },
    "722": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979298958566",
      "endTime": "578979299342766",
      "elapsedTime": "384200",
      "asyncId": 1478,
      "triggerAsyncId": 1477,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 722
    },
    "723": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979299217091",
      "endTime": "578979299502406",
      "elapsedTime": "285315",
      "asyncId": 1479,
      "triggerAsyncId": 1476,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 723
    },
    "724": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979300224239",
      "endTime": "578979301117564",
      "elapsedTime": "893325",
      "asyncId": 1480,
      "triggerAsyncId": 1342,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1483
      ],
      "uniqueid": 724
    },
    "725": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578979300472374",
      "endTime": "578979300489035",
      "elapsedTime": "16661",
      "asyncId": 1481,
      "triggerAsyncId": 1342,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1482
      ],
      "uniqueid": 725
    },
    "726": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578979300793887",
      "endTime": "578979301145095",
      "elapsedTime": "351208",
      "asyncId": 1482,
      "triggerAsyncId": 1481,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 726
    },
    "727": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979301068041",
      "endTime": "578979302175407",
      "elapsedTime": "1107366",
      "asyncId": 1483,
      "triggerAsyncId": 1480,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        1485,
        1484
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 727
    },
    "728": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979301424409",
      "endTime": "578979302207467",
      "elapsedTime": "783058",
      "asyncId": 1484,
      "triggerAsyncId": 1483,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1487
      ],
      "uniqueid": 728
    },
    "729": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578979301634823",
      "endTime": "578979301658277",
      "elapsedTime": "23454",
      "asyncId": 1485,
      "triggerAsyncId": 1483,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        1486
      ],
      "uniqueid": 729
    },
    "730": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578979301929065",
      "endTime": "578979302234317",
      "elapsedTime": "305252",
      "asyncId": 1486,
      "triggerAsyncId": 1485,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 730
    },
    "731": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979302163093",
      "endTime": "578979302428190",
      "elapsedTime": "265097",
      "asyncId": 1487,
      "triggerAsyncId": 1484,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 731
    },
    "732": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979303902444",
      "endTime": "578979321410445",
      "elapsedTime": "17508001",
      "asyncId": 1488,
      "triggerAsyncId": 1146,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1496
      ],
      "uniqueid": 732
    },
    "733": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578979304430905",
      "endTime": "578979304444140",
      "elapsedTime": "13235",
      "asyncId": 1489,
      "triggerAsyncId": 1146,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 733
    },
    "734": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578979304879886",
      "endTime": "578979304891348",
      "elapsedTime": "11462",
      "asyncId": 1491,
      "triggerAsyncId": 1146,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1492,
        1492
      ],
      "uniqueid": 734
    },
    "735": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578979305128803",
      "endTime": "578979308580904",
      "elapsedTime": "3452101",
      "asyncId": 1492,
      "triggerAsyncId": 1491,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1499,
        1502,
        1500,
        1504,
        1510,
        1493,
        1493
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 735
    },
    "736": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578979305340269",
      "endTime": "578979320847078",
      "elapsedTime": "15506809",
      "asyncId": 1493,
      "triggerAsyncId": 1492,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1514,
        1520,
        1513,
        1512,
        1511,
        1518,
        1522,
        1528,
        1494
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 736
    },
    "737": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578981778262214",
      "endTime": "578982357268601",
      "elapsedTime": "579006387",
      "asyncId": 1494,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 737
    },
    "738": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979305730571",
      "endTime": "578979321490134",
      "elapsedTime": "15759563",
      "asyncId": 1495,
      "triggerAsyncId": 1146,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 738
    },
    "739": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578981804048313",
      "endTime": "578981804065585",
      "elapsedTime": "17272",
      "asyncId": 1496,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [
        1497,
        1497
      ],
      "uniqueid": 739
    },
    "740": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578981778853132",
      "endTime": "578982357296443",
      "elapsedTime": "578443311",
      "asyncId": 1497,
      "triggerAsyncId": 1496,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 740
    },
    "741": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979306492469",
      "endTime": "578979306561268",
      "elapsedTime": "68799",
      "asyncId": 1499,
      "triggerAsyncId": 1492,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1501
      ],
      "uniqueid": 741
    },
    "742": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979306745784",
      "endTime": "578979308165315",
      "elapsedTime": "1419531",
      "asyncId": 1500,
      "triggerAsyncId": 1492,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1506
      ],
      "uniqueid": 742
    },
    "743": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979307095079",
      "endTime": "578979307106761",
      "elapsedTime": "11682",
      "asyncId": 1502,
      "triggerAsyncId": 1492,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 743
    },
    "744": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578979307500599",
      "endTime": "578979308513488",
      "elapsedTime": "1012889",
      "asyncId": 1504,
      "triggerAsyncId": 1492,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 744
    },
    "745": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578979307769674",
      "endTime": "578979308543474",
      "elapsedTime": "773800",
      "asyncId": 1506,
      "triggerAsyncId": 1500,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 745
    },
    "746": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578979308800917",
      "endTime": "578979320668043",
      "elapsedTime": "11867126",
      "asyncId": 1511,
      "triggerAsyncId": 1493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1519
      ],
      "uniqueid": 746
    },
    "747": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578979309178264",
      "endTime": "578979320596459",
      "elapsedTime": "11418195",
      "asyncId": 1512,
      "triggerAsyncId": 1493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        1517
      ],
      "uniqueid": 747
    },
    "748": {
      "source": "apps/api/src/model/lib/factoring.provider.service.spec.ts:75:19:75:19",
      "startTime": "578979311593201",
      "endTime": "578979319637762",
      "elapsedTime": "8044561",
      "asyncId": 1513,
      "triggerAsyncId": 1493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        1525,
        1533,
        1516
      ],
      "line": "\n  it('will create a new bank account if needed and set the document numbering', async () => {\n    mockBankAccountServiceCalled = false;\n    await service.save(\n      mockEntityManager,\n      {\n        displayName: ''",
      "startLine": 75,
      "startCol": 19,
      "endLine": 75,
      "endCol": 19,
      "file": "apps/api/src/model/lib/factoring.provider.service.spec.ts",
      "uniqueid": 748
    },
    "749": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578979313686586",
      "endTime": "578979313705972",
      "elapsedTime": "19386",
      "asyncId": 1514,
      "triggerAsyncId": 1493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " FactoringProviderService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        1515
      ],
      "uniqueid": 749
    },
    "750": {
      "source": "apps/api/src/model/lib/factoring.provider.service.spec.ts:75:19:75:19",
      "startTime": "578979314093939",
      "endTime": "578979316152408",
      "elapsedTime": "2058469",
      "asyncId": 1515,
      "triggerAsyncId": 1514,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n  it('will create a new bank account if needed and set the document numbering', async () => {\n    mockBankAccountServiceCalled = false;\n    await service.save(\n      mockEntityManager,\n      {\n        displayName: ''",
      "startLine": 75,
      "startCol": 19,
      "endLine": 75,
      "endCol": 19,
      "file": "apps/api/src/model/lib/factoring.provider.service.spec.ts",
      "triggers": [],
      "uniqueid": 750
    },
    "751": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578979314330543",
      "endTime": "578979320633518",
      "elapsedTime": "6302975",
      "asyncId": 1516,
      "triggerAsyncId": 1513,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 751
    },
    "752": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578979314521691",
      "endTime": "578979320695685",
      "elapsedTime": "6173994",
      "asyncId": 1517,
      "triggerAsyncId": 1512,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 752
    },
    "753": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979314662705",
      "endTime": "578979320729037",
      "elapsedTime": "6066332",
      "asyncId": 1518,
      "triggerAsyncId": 1493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1524
      ],
      "uniqueid": 753
    },
    "754": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578979314937971",
      "endTime": "578979314949563",
      "elapsedTime": "11592",
      "asyncId": 1520,
      "triggerAsyncId": 1493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 754
    },
    "755": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578979315314778",
      "endTime": "578979320780945",
      "elapsedTime": "5466167",
      "asyncId": 1522,
      "triggerAsyncId": 1493,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 755
    },
    "756": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578979315509332",
      "endTime": "578979320809047",
      "elapsedTime": "5299715",
      "asyncId": 1524,
      "triggerAsyncId": 1518,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 756
    },
    "757": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979315745766",
      "endTime": "578979315920944",
      "elapsedTime": "175178",
      "asyncId": 1525,
      "triggerAsyncId": 1513,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1526
      ],
      "uniqueid": 757
    },
    "758": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979315909473",
      "endTime": "578979319065178",
      "elapsedTime": "3155705",
      "asyncId": 1526,
      "triggerAsyncId": 1525,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1529
      ],
      "uniqueid": 758
    },
    "759": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578979318291197",
      "endTime": "578979319098190",
      "elapsedTime": "806993",
      "asyncId": 1529,
      "triggerAsyncId": 1526,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " FactoringProviderService.save",
      "userCode": false,
      "triggers": [
        1530,
        1532
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 759
    },
    "760": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578979318575961",
      "endTime": "578979318826301",
      "elapsedTime": "250340",
      "asyncId": 1530,
      "triggerAsyncId": 1529,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " FactoringProviderService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        1531
      ],
      "uniqueid": 760
    },
    "761": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578979318810821",
      "endTime": "578979319126834",
      "elapsedTime": "316013",
      "asyncId": 1531,
      "triggerAsyncId": 1530,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " FactoringProviderService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [],
      "uniqueid": 761
    },
    "762": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979319052545",
      "endTime": "578979319607735",
      "elapsedTime": "555190",
      "asyncId": 1532,
      "triggerAsyncId": 1529,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 762
    },
    "763": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979319388624",
      "endTime": "578979319568512",
      "elapsedTime": "179888",
      "asyncId": 1533,
      "triggerAsyncId": 1513,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        1534
      ],
      "uniqueid": 763
    },
    "764": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:15:12:15:12",
      "startTime": "578981787522584",
      "endTime": "578982357338702",
      "elapsedTime": "569816118",
      "asyncId": 1534,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " __awaiter",
      "userCode": false,
      "line": "\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); ",
      "startLine": 15,
      "startCol": 12,
      "endLine": 15,
      "endCol": 12,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 764
    },
    "765": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:14:65:14:65",
      "startTime": "578981819412635",
      "endTime": "578981819430398",
      "elapsedTime": "17763",
      "asyncId": 1536,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " adopt",
      "userCode": false,
      "triggers": [
        1540,
        1537,
        1537
      ],
      "line": "\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } ",
      "startLine": 14,
      "startCol": 65,
      "endLine": 14,
      "endCol": 65,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "uniqueid": 765
    },
    "766": {
      "source": "node_modules/ts-jest/dist/compiler/language-service.js:18:91:18:91",
      "startTime": "578981788093083",
      "endTime": "578982357367636",
      "elapsedTime": "569274553",
      "asyncId": 1537,
      "triggerAsyncId": 1536,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " step",
      "userCode": false,
      "line": "\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}",
      "startLine": 18,
      "startCol": 91,
      "endLine": 18,
      "endCol": 91,
      "file": "node_modules/ts-jest/dist/compiler/language-service.js",
      "triggers": [],
      "uniqueid": 766
    },
    "767": {
      "source": "node_modules/jest-runner/build/runTest.js:453:23:453:23",
      "startTime": "578979324317224",
      "endTime": "578979324449281",
      "elapsedTime": "132057",
      "asyncId": 1538,
      "triggerAsyncId": 1139,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    var _runtime$teardown;\n\n    await environment.teardown(); // TODO: this function might be missing, remove ? in Jest 26\n\n    (_runtime$teardown = runtime.teardown) === null ||\n    _runtime$teardown === void ",
      "startLine": 453,
      "startCol": 23,
      "endLine": 453,
      "endCol": 23,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        1539
      ],
      "uniqueid": 767
    },
    "768": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979324793947",
      "endTime": "578979325232590",
      "elapsedTime": "438643",
      "asyncId": 1539,
      "triggerAsyncId": 1538,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 768
    },
    "769": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578979325418167",
      "endTime": "578979325771770",
      "elapsedTime": "353603",
      "asyncId": 1540,
      "triggerAsyncId": 1536,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 769
    },
    "770": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982331092782",
      "endTime": "578982331110845",
      "elapsedTime": "18063",
      "asyncId": 1875,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1876,
        1876
      ],
      "uniqueid": 770
    },
    "771": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982331828340",
      "endTime": "578982574577699",
      "elapsedTime": "242749359",
      "asyncId": 1876,
      "triggerAsyncId": 1875,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1886,
        1888,
        1898,
        1884,
        1885,
        1896,
        1929,
        1900
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 771
    },
    "772": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982338995817",
      "endTime": "578982339031614",
      "elapsedTime": "35797",
      "asyncId": 1888,
      "triggerAsyncId": 1876,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        1889,
        1889
      ],
      "uniqueid": 772
    },
    "773": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982339388142",
      "endTime": "578982515099962",
      "elapsedTime": "175711820",
      "asyncId": 1889,
      "triggerAsyncId": 1888,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        1908,
        1922,
        1910,
        1909,
        1908,
        1907,
        1906,
        1905,
        1904,
        1903,
        1902,
        1920,
        1924,
        1933,
        1890,
        1890
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 773
    },
    "774": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982339716227",
      "endTime": "578982537943825",
      "elapsedTime": "198227598",
      "asyncId": 1890,
      "triggerAsyncId": 1889,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2265,
        2267,
        2273,
        2264,
        2271,
        2284,
        1891,
        1891
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 774
    },
    "775": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982340007974",
      "endTime": "578982549023695",
      "elapsedTime": "209015721",
      "asyncId": 1891,
      "triggerAsyncId": 1890,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2312,
        2314,
        2320,
        2311,
        2318,
        2331,
        1892,
        1892
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 775
    },
    "776": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982340290133",
      "endTime": "578982561720366",
      "elapsedTime": "221430233",
      "asyncId": 1892,
      "triggerAsyncId": 1891,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2359,
        2361,
        2367,
        2358,
        2365,
        2378,
        1893,
        1893
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 776
    },
    "777": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982341307981",
      "endTime": "578982574147492",
      "elapsedTime": "232839511",
      "asyncId": 1893,
      "triggerAsyncId": 1892,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2406,
        2408,
        2414,
        2405,
        2412,
        2425,
        1927
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 777
    },
    "778": {
      "source": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts:155:8:155:8",
      "startTime": "578982344786021",
      "endTime": "578982514108163",
      "elapsedTime": "169322142",
      "asyncId": 1904,
      "triggerAsyncId": 1889,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n        mockCustomerPriceListServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<SalesInvoiceLineService>(SalesInvoiceLineService);\n  })",
      "startLine": 155,
      "startCol": 8,
      "endLine": 155,
      "endCol": 8,
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "triggers": [
        1918
      ],
      "uniqueid": 778
    },
    "779": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:41:28:41:28",
      "startTime": "578982345466446",
      "endTime": "578982374245025",
      "elapsedTime": "28778579",
      "asyncId": 1905,
      "triggerAsyncId": 1889,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "line": "\n    async compile() {\n        this.applyLogger();\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders()",
      "startLine": 41,
      "startCol": 28,
      "endLine": 41,
      "endCol": 28,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "triggers": [
        1917
      ],
      "uniqueid": 779
    },
    "780": {
      "source": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts:155:8:155:8",
      "startTime": "578982350506104",
      "endTime": "578982439533104",
      "elapsedTime": "89027000",
      "asyncId": 1917,
      "triggerAsyncId": 1905,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        1966,
        1972,
        1971,
        1976,
        1975,
        1982,
        1990,
        1998,
        2004,
        2003,
        2008,
        2007,
        2012,
        2011,
        2032,
        2038,
        2037,
        2042,
        2041,
        2051,
        2049,
        2057,
        2055,
        2063,
        2061,
        2075,
        2074,
        2079,
        2078,
        2083,
        2082,
        2089,
        2095,
        2094,
        2050,
        2056,
        2062,
        1970,
        1974,
        1988,
        1996,
        2002,
        2006,
        2010,
        2036,
        2040,
        2050,
        2056,
        2062,
        2073,
        2077,
        2081,
        2093,
        1964,
        1980,
        1989,
        1997,
        2030,
        2049,
        2055,
        2061,
        2087,
        1965,
        1981,
        1987,
        1995,
        2031,
        2048,
        2054,
        2060,
        2088,
        1963,
        1979,
        2029,
        2066,
        2086,
        1986,
        1994,
        1962,
        1978,
        2028,
        2085,
        2014,
        2046,
        1961,
        2047,
        2045,
        2044,
        1960,
        2097,
        2027,
        2026,
        2109,
        1959,
        1958
      ],
      "line": "\n        mockCustomerPriceListServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<SalesInvoiceLineService>(SalesInvoiceLineService);\n  })",
      "startLine": 155,
      "startCol": 8,
      "endLine": 155,
      "endCol": 8,
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "uniqueid": 780
    },
    "781": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:58:37:58:37",
      "startTime": "578982350753868",
      "endTime": "578982514601287",
      "elapsedTime": "163847419",
      "asyncId": 1918,
      "triggerAsyncId": 1904,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 58,
      "startCol": 37,
      "endLine": 58,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 781
    },
    "782": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:43:35:43:35",
      "startTime": "578982374690811",
      "endTime": "578982513761663",
      "elapsedTime": "139070852",
      "asyncId": 1958,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "line": "\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders();\n        const root = this.getRootModule();\n        return new testing_module_1.TestingModule(this.container, [], root, this.applicationConfig)",
      "startLine": 43,
      "startCol": 35,
      "endLine": 43,
      "endCol": 35,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "triggers": [
        2114
      ],
      "uniqueid": 782
    },
    "783": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578982375350477",
      "endTime": "578982513715286",
      "elapsedTime": "138364809",
      "asyncId": 1959,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2113
      ],
      "uniqueid": 783
    },
    "784": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578982376716878",
      "endTime": "578982499503685",
      "elapsedTime": "122786807",
      "asyncId": 1961,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2025
      ],
      "uniqueid": 784
    },
    "785": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982377269534",
      "endTime": "578982497962336",
      "elapsedTime": "120692802",
      "asyncId": 1962,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2015
      ],
      "uniqueid": 785
    },
    "786": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982377802704",
      "endTime": "578982487199249",
      "elapsedTime": "109396545",
      "asyncId": 1963,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1969
      ],
      "uniqueid": 786
    },
    "787": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982378191783",
      "endTime": "578982485711520",
      "elapsedTime": "107519737",
      "asyncId": 1964,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 787
    },
    "788": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982378656685",
      "endTime": "578982486724399",
      "elapsedTime": "108067714",
      "asyncId": 1965,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1968
      ],
      "uniqueid": 788
    },
    "789": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578982379095377",
      "endTime": "578982379111307",
      "elapsedTime": "15930",
      "asyncId": 1966,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1967
      ],
      "uniqueid": 789
    },
    "790": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982379472865",
      "endTime": "578982442140261",
      "elapsedTime": "62667396",
      "asyncId": 1967,
      "triggerAsyncId": 1966,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2117,
        2116,
        2115
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 790
    },
    "791": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982379794678",
      "endTime": "578982487226901",
      "elapsedTime": "107432223",
      "asyncId": 1968,
      "triggerAsyncId": 1965,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 791
    },
    "792": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982380111973",
      "endTime": "578982491276883",
      "elapsedTime": "111164910",
      "asyncId": 1969,
      "triggerAsyncId": 1963,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2221,
        2220
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 792
    },
    "793": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982380458022",
      "endTime": "578982481967221",
      "elapsedTime": "101509199",
      "asyncId": 1970,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2016
      ],
      "uniqueid": 793
    },
    "794": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982380773313",
      "endTime": "578982381166931",
      "elapsedTime": "393618",
      "asyncId": 1971,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1973
      ],
      "uniqueid": 794
    },
    "795": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982381109723",
      "endTime": "578982381126625",
      "elapsedTime": "16902",
      "asyncId": 1972,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 795
    },
    "796": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982381522197",
      "endTime": "578982443553390",
      "elapsedTime": "62031193",
      "asyncId": 1973,
      "triggerAsyncId": 1971,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2122,
        2121
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 796
    },
    "797": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982381812992",
      "endTime": "578982482046449",
      "elapsedTime": "100233457",
      "asyncId": 1974,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2017
      ],
      "uniqueid": 797
    },
    "798": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982382142670",
      "endTime": "578982382649660",
      "elapsedTime": "506990",
      "asyncId": 1975,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1977
      ],
      "uniqueid": 798
    },
    "799": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982382580761",
      "endTime": "578982382605528",
      "elapsedTime": "24767",
      "asyncId": 1976,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 799
    },
    "800": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982383042887",
      "endTime": "578982444929119",
      "elapsedTime": "61886232",
      "asyncId": 1977,
      "triggerAsyncId": 1975,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2126,
        2125
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 800
    },
    "801": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982383342168",
      "endTime": "578982498011778",
      "elapsedTime": "114669610",
      "asyncId": 1978,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2018
      ],
      "uniqueid": 801
    },
    "802": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982383697264",
      "endTime": "578982487252198",
      "elapsedTime": "103554934",
      "asyncId": 1979,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1985
      ],
      "uniqueid": 802
    },
    "803": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982384073620",
      "endTime": "578982485877732",
      "elapsedTime": "101804112",
      "asyncId": 1980,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 803
    },
    "804": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982384404470",
      "endTime": "578982486781826",
      "elapsedTime": "102377356",
      "asyncId": 1981,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1984
      ],
      "uniqueid": 804
    },
    "805": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578982384751651",
      "endTime": "578982384767641",
      "elapsedTime": "15990",
      "asyncId": 1982,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1983
      ],
      "uniqueid": 805
    },
    "806": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982385136572",
      "endTime": "578982448276254",
      "elapsedTime": "63139682",
      "asyncId": 1983,
      "triggerAsyncId": 1982,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2131,
        2130,
        2129
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 806
    },
    "807": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982385470077",
      "endTime": "578982487281393",
      "elapsedTime": "101811316",
      "asyncId": 1984,
      "triggerAsyncId": 1981,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 807
    },
    "808": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982385807470",
      "endTime": "578982492625150",
      "elapsedTime": "106817680",
      "asyncId": 1985,
      "triggerAsyncId": 1979,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2225,
        2224
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 808
    },
    "809": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982386168877",
      "endTime": "578982497714441",
      "elapsedTime": "111545564",
      "asyncId": 1986,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2019
      ],
      "uniqueid": 809
    },
    "810": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982386510548",
      "endTime": "578982486838573",
      "elapsedTime": "100328025",
      "asyncId": 1987,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1993
      ],
      "uniqueid": 810
    },
    "811": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982386875582",
      "endTime": "578982483023070",
      "elapsedTime": "96147488",
      "asyncId": 1988,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 811
    },
    "812": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982387268118",
      "endTime": "578982485957922",
      "elapsedTime": "98689804",
      "asyncId": 1989,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1992
      ],
      "uniqueid": 812
    },
    "813": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578982387624526",
      "endTime": "578982388503574",
      "elapsedTime": "879048",
      "asyncId": 1990,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        1991
      ],
      "uniqueid": 813
    },
    "814": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982388907030",
      "endTime": "578982458511180",
      "elapsedTime": "69604150",
      "asyncId": 1991,
      "triggerAsyncId": 1990,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2136,
        2135
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 814
    },
    "815": {
      "source": "node_modules/jest-jasmine2/build/index.js:233:13:233:13",
      "startTime": "578982348569914",
      "endTime": "578982711131603",
      "elapsedTime": "362561689",
      "asyncId": 1992,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " jasmine2",
      "userCode": false,
      "line": "\n  }\n\n  await env.execute();\n  const results = await reporter.getResults();\n  return addSnapshotData(results, snapshotState);\n",
      "startLine": 233,
      "startCol": 13,
      "endLine": 233,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/index.js",
      "triggers": [],
      "uniqueid": 815
    },
    "816": {
      "source": "node_modules/jest-jasmine2/build/treeProcessor.js:78:10:78:10",
      "startTime": "578982349322685",
      "endTime": "578982710935776",
      "elapsedTime": "361613091",
      "asyncId": 1993,
      "triggerAsyncId": 30,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " treeProcessor",
      "userCode": false,
      "triggers": [
        1998,
        2213,
        2212,
        1998,
        2000
      ],
      "line": "\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}",
      "startLine": 78,
      "startCol": 10,
      "endLine": 78,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/treeProcessor.js",
      "uniqueid": 816
    },
    "817": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982389878391",
      "endTime": "578982497765266",
      "elapsedTime": "107886875",
      "asyncId": 1994,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2020
      ],
      "uniqueid": 817
    },
    "818": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982390225782",
      "endTime": "578982486894918",
      "elapsedTime": "96669136",
      "asyncId": 1995,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2001
      ],
      "uniqueid": 818
    },
    "819": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982390597339",
      "endTime": "578982483112849",
      "elapsedTime": "92515510",
      "asyncId": 1996,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        1997,
        1997
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 819
    },
    "820": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982352574862",
      "endTime": "578982710436921",
      "elapsedTime": "357862059",
      "asyncId": 1997,
      "triggerAsyncId": 1996,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2007,
        2009,
        2016,
        2000,
        2005,
        2006,
        2014,
        2047,
        2018
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 820
    },
    "821": {
      "source": "node_modules/jest-jasmine2/build/treeProcessor.js:78:10:78:10",
      "startTime": "578982352912505",
      "endTime": "578982710496162",
      "elapsedTime": "357583657",
      "asyncId": 1998,
      "triggerAsyncId": 1993,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " treeProcessor",
      "userCode": false,
      "triggers": [
        1999,
        1999
      ],
      "line": "\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}",
      "startLine": 78,
      "startCol": 10,
      "endLine": 78,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/treeProcessor.js",
      "uniqueid": 821
    },
    "822": {
      "source": "node_modules/jest-jasmine2/build/treeProcessor.js:78:10:78:10",
      "startTime": "578982353232224",
      "endTime": "578982710962235",
      "elapsedTime": "357730011",
      "asyncId": 1999,
      "triggerAsyncId": 1998,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " treeProcessor",
      "userCode": false,
      "triggers": [
        2140,
        2139
      ],
      "line": "\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}",
      "startLine": 78,
      "startCol": 10,
      "endLine": 78,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/treeProcessor.js",
      "uniqueid": 822
    },
    "823": {
      "source": "node_modules/jest-jasmine2/build/index.js:233:13:233:13",
      "startTime": "578982353547645",
      "endTime": "578982711163833",
      "elapsedTime": "357616188",
      "asyncId": 2000,
      "triggerAsyncId": 1993,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " jasmine2",
      "userCode": false,
      "line": "\n  }\n\n  await env.execute();\n  const results = await reporter.getResults();\n  return addSnapshotData(results, snapshotState);\n",
      "startLine": 233,
      "startCol": 13,
      "endLine": 233,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/index.js",
      "triggers": [],
      "uniqueid": 823
    },
    "824": {
      "source": "node_modules/jest-runner/build/runTest.js:380:22:380:22",
      "startTime": "578982353789298",
      "endTime": "578982711200412",
      "elapsedTime": "357411114",
      "asyncId": 2001,
      "triggerAsyncId": 37,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "triggers": [
        2217,
        2216,
        2019,
        2002
      ],
      "line": "\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment",
      "startLine": 380,
      "startCol": 22,
      "endLine": 380,
      "endCol": 22,
      "file": "node_modules/jest-runner/build/runTest.js",
      "uniqueid": 824
    },
    "825": {
      "source": "node_modules/jest-runner/build/runTest.js:380:22:380:22",
      "startTime": "578982354025050",
      "endTime": "578982711490797",
      "elapsedTime": "357465747",
      "asyncId": 2002,
      "triggerAsyncId": 2001,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "triggers": [
        2021
      ],
      "line": "\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment",
      "startLine": 380,
      "startCol": 22,
      "endLine": 380,
      "endCol": 22,
      "file": "node_modules/jest-runner/build/runTest.js",
      "uniqueid": 825
    },
    "826": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982354286430",
      "endTime": "578982712968206",
      "elapsedTime": "358681776",
      "asyncId": 2003,
      "triggerAsyncId": 37,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2005,
        3073,
        3071
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 826
    },
    "827": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982393916741",
      "endTime": "578982393936659",
      "elapsedTime": "19918",
      "asyncId": 2004,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 827
    },
    "828": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982358607591",
      "endTime": "578982710300665",
      "elapsedTime": "351693074",
      "asyncId": 2005,
      "triggerAsyncId": 1997,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        2144,
        2143,
        2015
      ],
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 828
    },
    "829": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578982358890130",
      "endTime": "578982710327746",
      "elapsedTime": "351437616",
      "asyncId": 2006,
      "triggerAsyncId": 1997,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2012,
        2022,
        2012
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 829
    },
    "830": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982395034256",
      "endTime": "578982395453693",
      "elapsedTime": "419437",
      "asyncId": 2007,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2009
      ],
      "uniqueid": 830
    },
    "831": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982395407206",
      "endTime": "578982395422574",
      "elapsedTime": "15368",
      "asyncId": 2008,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 831
    },
    "832": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982395776257",
      "endTime": "578982462749586",
      "elapsedTime": "66973329",
      "asyncId": 2009,
      "triggerAsyncId": 2007,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2010,
        2148,
        2147,
        2010
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 832
    },
    "833": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982360188665",
      "endTime": "578982590145913",
      "elapsedTime": "229957248",
      "asyncId": 2010,
      "triggerAsyncId": 2009,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2026,
        2040,
        2028,
        2027,
        2026,
        2025,
        2024,
        2023,
        2023,
        2022,
        2021,
        2020,
        2038,
        2042,
        2051,
        2011,
        2011
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 833
    },
    "834": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982360694633",
      "endTime": "578982710161404",
      "elapsedTime": "349466771",
      "asyncId": 2011,
      "triggerAsyncId": 2010,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2013,
        2612,
        2614,
        2627,
        2610,
        2611,
        2625,
        2642,
        2045
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 834
    },
    "835": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578982360933701",
      "endTime": "578982710223060",
      "elapsedTime": "349289359",
      "asyncId": 2012,
      "triggerAsyncId": 2006,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2013
      ],
      "uniqueid": 835
    },
    "836": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578982361221721",
      "endTime": "578982710351571",
      "elapsedTime": "349129850",
      "asyncId": 2013,
      "triggerAsyncId": 2012,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2152,
        2151
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 836
    },
    "837": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982361472682",
      "endTime": "578982710376227",
      "elapsedTime": "348903545",
      "asyncId": 2014,
      "triggerAsyncId": 1997,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        2024
      ],
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 837
    },
    "838": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982362306865",
      "endTime": "578982710519826",
      "elapsedTime": "348212961",
      "asyncId": 2018,
      "triggerAsyncId": 1997,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 838
    },
    "839": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982362780483",
      "endTime": "578982589919949",
      "elapsedTime": "227139466",
      "asyncId": 2020,
      "triggerAsyncId": 2010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2039
      ],
      "uniqueid": 839
    },
    "840": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:58:37:58:37",
      "startTime": "578982363205991",
      "endTime": "578982589823929",
      "elapsedTime": "226617938",
      "asyncId": 2021,
      "triggerAsyncId": 2010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 58,
      "startCol": 37,
      "endLine": 58,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2037
      ],
      "uniqueid": 840
    },
    "841": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:266:8:266:8",
      "startTime": "578982364067967",
      "endTime": "578982589403011",
      "elapsedTime": "225335044",
      "asyncId": 2022,
      "triggerAsyncId": 2010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n    const app = await Test.createTestingModule({\n      providers,\n    }).compile();\n\n    service = app.get<SalesInvoiceService>(SalesInvoiceService);\n  })",
      "startLine": 266,
      "startCol": 8,
      "endLine": 266,
      "endCol": 8,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [
        2036
      ],
      "uniqueid": 841
    },
    "842": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578982400300869",
      "endTime": "578982499530796",
      "elapsedTime": "99229927",
      "asyncId": 2024,
      "triggerAsyncId": 2014,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2034
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 842
    },
    "843": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578982401150612",
      "endTime": "578982504376339",
      "elapsedTime": "103225727",
      "asyncId": 2027,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2049,
        2108
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 843
    },
    "844": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982401481032",
      "endTime": "578982498114140",
      "elapsedTime": "96633108",
      "asyncId": 2028,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2029,
        2031,
        2098
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 844
    },
    "845": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982401856525",
      "endTime": "578982489864495",
      "elapsedTime": "88007970",
      "asyncId": 2029,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        2030,
        2035
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 845
    },
    "846": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982402267516",
      "endTime": "578982486182824",
      "elapsedTime": "83915308",
      "asyncId": 2030,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 846
    },
    "847": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982402665642",
      "endTime": "578982486941406",
      "elapsedTime": "84275764",
      "asyncId": 2031,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2053,
        2052,
        2034
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 847
    },
    "848": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578982403123611",
      "endTime": "578982403139941",
      "elapsedTime": "16330",
      "asyncId": 2032,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2033
      ],
      "uniqueid": 848
    },
    "849": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982403530062",
      "endTime": "578982466386533",
      "elapsedTime": "62856471",
      "asyncId": 2033,
      "triggerAsyncId": 2032,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2157,
        2156,
        2155
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 849
    },
    "850": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982404796236",
      "endTime": "578982489889122",
      "elapsedTime": "85092886",
      "asyncId": 2034,
      "triggerAsyncId": 2031,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        2057,
        2059,
        2058,
        2057,
        2056
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 850
    },
    "851": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:266:8:266:8",
      "startTime": "578982370186367",
      "endTime": "578982510899317",
      "elapsedTime": "140712950",
      "asyncId": 2035,
      "triggerAsyncId": 2023,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2085,
        2091,
        2090,
        2095,
        2094,
        2101,
        2109,
        2117,
        2123,
        2122,
        2127,
        2126,
        2131,
        2130,
        2151,
        2157,
        2156,
        2161,
        2160,
        2170,
        2168,
        2176,
        2174,
        2182,
        2180,
        2188,
        2186,
        2194,
        2192,
        2200,
        2198,
        2206,
        2204,
        2212,
        2210,
        2218,
        2216,
        2224,
        2222,
        2230,
        2228,
        2236,
        2234,
        2242,
        2240,
        2248,
        2246,
        2271,
        2270,
        2275,
        2274,
        2279,
        2278,
        2283,
        2282,
        2287,
        2286,
        2291,
        2290,
        2295,
        2294,
        2299,
        2298,
        2303,
        2302,
        2307,
        2306,
        2311,
        2310,
        2315,
        2314,
        2229,
        2321,
        2327,
        2326,
        2331,
        2330,
        2228,
        2335,
        2334,
        2339,
        2338,
        2343,
        2342,
        2169,
        2175,
        2181,
        2187,
        2193,
        2199,
        2205,
        2211,
        2217,
        2223,
        2229,
        2235,
        2241,
        2247,
        2089,
        2093,
        2107,
        2115,
        2121,
        2125,
        2129,
        2155,
        2159,
        2169,
        2175,
        2181,
        2187,
        2193,
        2199,
        2205,
        2211,
        2217,
        2223,
        2229,
        2235,
        2241,
        2247,
        2269,
        2273,
        2277,
        2281,
        2285,
        2289,
        2293,
        2297,
        2301,
        2305,
        2309,
        2313,
        2325,
        2329,
        2333,
        2337,
        2341,
        2083,
        2099,
        2108,
        2116,
        2149,
        2168,
        2174,
        2180,
        2186,
        2192,
        2198,
        2204,
        2210,
        2216,
        2222,
        2228,
        2234,
        2240,
        2246,
        2319,
        2084,
        2100,
        2106,
        2114,
        2150,
        2167,
        2173,
        2179,
        2185,
        2191,
        2197,
        2203,
        2209,
        2215,
        2221,
        2227,
        2233,
        2239,
        2245,
        2320,
        2082,
        2098,
        2148,
        2251,
        2318,
        2105,
        2113,
        2081,
        2097,
        2147,
        2317,
        2133,
        2165,
        2080,
        2166,
        2164,
        2163,
        2079,
        2345,
        2146,
        2145,
        2370,
        2078,
        2077
      ],
      "line": "\n    const app = await Test.createTestingModule({\n      providers,\n    }).compile();\n\n    service = app.get<SalesInvoiceService>(SalesInvoiceService);\n  })",
      "startLine": 266,
      "startCol": 8,
      "endLine": 266,
      "endCol": 8,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 851
    },
    "852": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:58:37:58:37",
      "startTime": "578982370457395",
      "endTime": "578982589855639",
      "elapsedTime": "219398244",
      "asyncId": 2036,
      "triggerAsyncId": 2022,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "triggers": [
        2099
      ],
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 58,
      "startCol": 37,
      "endLine": 58,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 852
    },
    "853": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:61:21:61:21",
      "startTime": "578982370726539",
      "endTime": "578982589946279",
      "elapsedTime": "219219740",
      "asyncId": 2037,
      "triggerAsyncId": 2021,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestLifecycle",
      "userCode": false,
      "triggers": [
        2039
      ],
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 61,
      "startCol": 21,
      "endLine": 61,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 853
    },
    "854": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982370892019",
      "endTime": "578982589969502",
      "elapsedTime": "219077483",
      "asyncId": 2038,
      "triggerAsyncId": 2010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2044
      ],
      "uniqueid": 854
    },
    "855": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982415614797",
      "endTime": "578982484321585",
      "elapsedTime": "68706788",
      "asyncId": 2040,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2100
      ],
      "uniqueid": 855
    },
    "856": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982415917965",
      "endTime": "578982416329106",
      "elapsedTime": "411141",
      "asyncId": 2041,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2043
      ],
      "uniqueid": 856
    },
    "857": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982371878438",
      "endTime": "578982590084107",
      "elapsedTime": "218205669",
      "asyncId": 2042,
      "triggerAsyncId": 2010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 857
    },
    "858": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982416637193",
      "endTime": "578982469143562",
      "elapsedTime": "52506369",
      "asyncId": 2043,
      "triggerAsyncId": 2041,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2166,
        2165
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 858
    },
    "859": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982372758117",
      "endTime": "578982590110336",
      "elapsedTime": "217352219",
      "asyncId": 2044,
      "triggerAsyncId": 2038,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2101
      ],
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "uniqueid": 859
    },
    "860": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982372932584",
      "endTime": "578982710253427",
      "elapsedTime": "337320843",
      "asyncId": 2045,
      "triggerAsyncId": 2011,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2072
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 860
    },
    "861": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982417544855",
      "endTime": "578982499396785",
      "elapsedTime": "81851930",
      "asyncId": 2046,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 861
    },
    "862": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982418904844",
      "endTime": "578982486325581",
      "elapsedTime": "67420737",
      "asyncId": 2049,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2053
      ],
      "uniqueid": 862
    },
    "863": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982419331504",
      "endTime": "578982484388009",
      "elapsedTime": "65056505",
      "asyncId": 2050,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2170
      ],
      "uniqueid": 863
    },
    "864": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982420148355",
      "endTime": "578982469632959",
      "elapsedTime": "49484604",
      "asyncId": 2052,
      "triggerAsyncId": 2051,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2055,
        2169
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 864
    },
    "865": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982421213883",
      "endTime": "578982486407074",
      "elapsedTime": "65193191",
      "asyncId": 2055,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2059
      ],
      "uniqueid": 865
    },
    "866": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982421489990",
      "endTime": "578982484459323",
      "elapsedTime": "62969333",
      "asyncId": 2056,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2064,
        2172
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 866
    },
    "867": {
      "source": "node_modules/@nestjs/core/injector/injector.js:144:44:144:44",
      "startTime": "578982421794180",
      "endTime": "578982421810852",
      "elapsedTime": "16672",
      "asyncId": 2057,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "triggers": [
        2063,
        2058
      ],
      "line": "\n    async resolveComponentInstance(moduleRef, name, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) ",
      "startLine": 144,
      "startCol": 44,
      "endLine": 144,
      "endCol": 44,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 867
    },
    "868": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982422108259",
      "endTime": "578982469993254",
      "elapsedTime": "47884995",
      "asyncId": 2058,
      "triggerAsyncId": 2057,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2065,
        2171
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 868
    },
    "869": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982422983690",
      "endTime": "578982486482335",
      "elapsedTime": "63498645",
      "asyncId": 2061,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2065
      ],
      "uniqueid": 869
    },
    "870": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982423280587",
      "endTime": "578982484530937",
      "elapsedTime": "61250350",
      "asyncId": 2062,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2066,
        2174
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 870
    },
    "871": {
      "source": "node_modules/@nestjs/core/injector/injector.js:144:44:144:44",
      "startTime": "578982423582693",
      "endTime": "578982423598774",
      "elapsedTime": "16081",
      "asyncId": 2063,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n    async resolveComponentInstance(moduleRef, name, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) ",
      "startLine": 144,
      "startCol": 44,
      "endLine": 144,
      "endCol": 44,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2064
      ],
      "uniqueid": 871
    },
    "872": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982423929453",
      "endTime": "578982470348641",
      "elapsedTime": "46419188",
      "asyncId": 2064,
      "triggerAsyncId": 2063,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2069,
        2068,
        2173
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 872
    },
    "873": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578982424573481",
      "endTime": "578982489974181",
      "elapsedTime": "65400700",
      "asyncId": 2066,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2067,
        2070
      ],
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 873
    },
    "874": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982425892162",
      "endTime": "578982496319506",
      "elapsedTime": "70427344",
      "asyncId": 2070,
      "triggerAsyncId": 2066,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2072,
        2234,
        2233,
        2232
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 874
    },
    "875": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982426239103",
      "endTime": "578982500848215",
      "elapsedTime": "74609112",
      "asyncId": 2071,
      "triggerAsyncId": 2047,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 875
    },
    "876": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982426529427",
      "endTime": "578982502784224",
      "elapsedTime": "76254797",
      "asyncId": 2072,
      "triggerAsyncId": 2045,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2073,
        2249,
        2248
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 876
    },
    "877": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982426826915",
      "endTime": "578982484584066",
      "elapsedTime": "57757151",
      "asyncId": 2073,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2076,
        2102
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 877
    },
    "878": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982427166983",
      "endTime": "578982427564778",
      "elapsedTime": "397795",
      "asyncId": 2074,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2076
      ],
      "uniqueid": 878
    },
    "879": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982427506619",
      "endTime": "578982427526306",
      "elapsedTime": "19687",
      "asyncId": 2075,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 879
    },
    "880": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982427878937",
      "endTime": "578982471677612",
      "elapsedTime": "43798675",
      "asyncId": 2076,
      "triggerAsyncId": 2074,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2176,
        2175
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 880
    },
    "881": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:43:35:43:35",
      "startTime": "578982388776365",
      "endTime": "578982589147371",
      "elapsedTime": "200371006",
      "asyncId": 2077,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "triggers": [
        2103,
        2375
      ],
      "line": "\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders();\n        const root = this.getRootModule();\n        return new testing_module_1.TestingModule(this.container, [], root, this.applicationConfig)",
      "startLine": 43,
      "startCol": 35,
      "endLine": 43,
      "endCol": 35,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "uniqueid": 881
    },
    "882": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578982389555546",
      "endTime": "578982589101065",
      "elapsedTime": "199545519",
      "asyncId": 2078,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "triggers": [
        2080,
        2374
      ],
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 882
    },
    "883": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578982390262902",
      "endTime": "578982583476701",
      "elapsedTime": "193213799",
      "asyncId": 2080,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2180,
        2179,
        2144
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 883
    },
    "884": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982390829905",
      "endTime": "578982581837148",
      "elapsedTime": "191007243",
      "asyncId": 2081,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2104,
        2134
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 884
    },
    "885": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982391281552",
      "endTime": "578982570221523",
      "elapsedTime": "178939971",
      "asyncId": 2082,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        2084,
        2088
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 885
    },
    "886": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982397138190",
      "endTime": "578982567417016",
      "elapsedTime": "170278826",
      "asyncId": 2083,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 886
    },
    "887": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982397764845",
      "endTime": "578982569249460",
      "elapsedTime": "171484615",
      "asyncId": 2084,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2184,
        2183,
        2087
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 887
    },
    "888": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982430942480",
      "endTime": "578982499233819",
      "elapsedTime": "68291339",
      "asyncId": 2085,
      "triggerAsyncId": 1917,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2105,
        2086
      ],
      "uniqueid": 888
    },
    "889": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982398701461",
      "endTime": "578982513590282",
      "elapsedTime": "114888821",
      "asyncId": 2086,
      "triggerAsyncId": 2085,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2092,
        2378,
        2377,
        2376
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 889
    },
    "890": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982399063910",
      "endTime": "578982570256428",
      "elapsedTime": "171192518",
      "asyncId": 2087,
      "triggerAsyncId": 2084,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 890
    },
    "891": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982399385784",
      "endTime": "578982576567138",
      "elapsedTime": "177181354",
      "asyncId": 2088,
      "triggerAsyncId": 2082,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2091,
        2567,
        2566
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 891
    },
    "892": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982399716474",
      "endTime": "578982563038016",
      "elapsedTime": "163321542",
      "asyncId": 2089,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2090,
        2135
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 892
    },
    "893": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982432762031",
      "endTime": "578982476559253",
      "elapsedTime": "43797222",
      "asyncId": 2090,
      "triggerAsyncId": 2089,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2189,
        2188,
        2187,
        2092
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 893
    },
    "894": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982433060791",
      "endTime": "578982490057998",
      "elapsedTime": "56997207",
      "asyncId": 2091,
      "triggerAsyncId": 2088,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 894
    },
    "895": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982401043992",
      "endTime": "578982515094882",
      "elapsedTime": "114050890",
      "asyncId": 2092,
      "triggerAsyncId": 2090,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2239,
        2238,
        2383,
        2382
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 895
    },
    "896": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982401382026",
      "endTime": "578982563092599",
      "elapsedTime": "161710573",
      "asyncId": 2093,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2106,
        2136
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 896
    },
    "897": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982434024618",
      "endTime": "578982434398228",
      "elapsedTime": "373610",
      "asyncId": 2094,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2096,
        2096
      ],
      "uniqueid": 897
    },
    "898": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982434349507",
      "endTime": "578982434364745",
      "elapsedTime": "15238",
      "asyncId": 2095,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 898
    },
    "899": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982402435651",
      "endTime": "578982516590135",
      "elapsedTime": "114154484",
      "asyncId": 2096,
      "triggerAsyncId": 2094,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2194,
        2193,
        2387,
        2386
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 899
    },
    "900": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982402771130",
      "endTime": "578982581899835",
      "elapsedTime": "179128705",
      "asyncId": 2097,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2107,
        2137
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 900
    },
    "901": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982403090228",
      "endTime": "578982570284601",
      "elapsedTime": "167194373",
      "asyncId": 2098,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2104
      ],
      "uniqueid": 901
    },
    "902": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982403468517",
      "endTime": "578982567565975",
      "elapsedTime": "164097458",
      "asyncId": 2099,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 902
    },
    "903": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982403822731",
      "endTime": "578982569292741",
      "elapsedTime": "165470010",
      "asyncId": 2100,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2103
      ],
      "uniqueid": 903
    },
    "904": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982404551407",
      "endTime": "578982518715379",
      "elapsedTime": "114163972",
      "asyncId": 2102,
      "triggerAsyncId": 2101,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2392,
        2391,
        2390
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 904
    },
    "905": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982404872599",
      "endTime": "578982570305991",
      "elapsedTime": "165433392",
      "asyncId": 2103,
      "triggerAsyncId": 2100,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 905
    },
    "906": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982405169266",
      "endTime": "578982577601537",
      "elapsedTime": "172432271",
      "asyncId": 2104,
      "triggerAsyncId": 2098,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2571,
        2570
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 906
    },
    "907": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982405509002",
      "endTime": "578982581565989",
      "elapsedTime": "176056987",
      "asyncId": 2105,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2138
      ],
      "uniqueid": 907
    },
    "908": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982405815046",
      "endTime": "578982569350660",
      "elapsedTime": "163535614",
      "asyncId": 2106,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2112
      ],
      "uniqueid": 908
    },
    "909": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982406483800",
      "endTime": "578982563870046",
      "elapsedTime": "157386246",
      "asyncId": 2107,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 909
    },
    "910": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982406856278",
      "endTime": "578982567659811",
      "elapsedTime": "160803533",
      "asyncId": 2108,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2257,
        2256,
        2111
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 910
    },
    "911": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:27:23:27:23",
      "startTime": "578982438464330",
      "endTime": "578982513666034",
      "elapsedTime": "75201704",
      "asyncId": 2109,
      "triggerAsyncId": 1917,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstances",
      "userCode": false,
      "line": "\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module)",
      "startLine": 27,
      "startCol": 23,
      "endLine": 27,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2112,
        2110
      ],
      "uniqueid": 911
    },
    "912": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982407542975",
      "endTime": "578982520040724",
      "elapsedTime": "112497749",
      "asyncId": 2110,
      "triggerAsyncId": 2109,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2397,
        2396
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 912
    },
    "913": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982407836345",
      "endTime": "578982569373313",
      "elapsedTime": "161536968",
      "asyncId": 2111,
      "triggerAsyncId": 2108,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 913
    },
    "914": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982408132330",
      "endTime": "578982571358184",
      "elapsedTime": "163225854",
      "asyncId": 2112,
      "triggerAsyncId": 2106,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2559,
        2558
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 914
    },
    "915": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982408418526",
      "endTime": "578982581617686",
      "elapsedTime": "173199160",
      "asyncId": 2113,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2139
      ],
      "uniqueid": 915
    },
    "916": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982408753184",
      "endTime": "578982569400604",
      "elapsedTime": "160647420",
      "asyncId": 2114,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2120
      ],
      "uniqueid": 916
    },
    "917": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982411477781",
      "endTime": "578982563952040",
      "elapsedTime": "152474259",
      "asyncId": 2115,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        2120
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 917
    },
    "918": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982411983960",
      "endTime": "578982567716797",
      "elapsedTime": "155732837",
      "asyncId": 2116,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2119,
        2119
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 918
    },
    "919": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578982440977732",
      "endTime": "578982440993201",
      "elapsedTime": "15469",
      "asyncId": 2117,
      "triggerAsyncId": 1967,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2118,
        2118
      ],
      "uniqueid": 919
    },
    "920": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982412757200",
      "endTime": "578982521232398",
      "elapsedTime": "108475198",
      "asyncId": 2118,
      "triggerAsyncId": 2117,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2401,
        2400
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 920
    },
    "921": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982413068914",
      "endTime": "578982569425000",
      "elapsedTime": "156356086",
      "asyncId": 2119,
      "triggerAsyncId": 2116,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        2204
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 921
    },
    "922": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982413371802",
      "endTime": "578982574927915",
      "elapsedTime": "161556113",
      "asyncId": 2120,
      "triggerAsyncId": 2114,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2563,
        2562
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 922
    },
    "923": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982413671454",
      "endTime": "578982564035506",
      "elapsedTime": "150364052",
      "asyncId": 2121,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2124,
        2140
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 923
    },
    "924": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982442849771",
      "endTime": "578982442864409",
      "elapsedTime": "14638",
      "asyncId": 2122,
      "triggerAsyncId": 1973,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2123,
        2124
      ],
      "uniqueid": 924
    },
    "925": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982443226748",
      "endTime": "578982477851345",
      "elapsedTime": "34624597",
      "asyncId": 2123,
      "triggerAsyncId": 2122,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 925
    },
    "926": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982414791564",
      "endTime": "578982522267117",
      "elapsedTime": "107475553",
      "asyncId": 2124,
      "triggerAsyncId": 2122,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2405,
        2404
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 926
    },
    "927": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982415131140",
      "endTime": "578982564087654",
      "elapsedTime": "148956514",
      "asyncId": 2125,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2128,
        2141
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 927
    },
    "928": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982444229287",
      "endTime": "578982444243434",
      "elapsedTime": "14147",
      "asyncId": 2126,
      "triggerAsyncId": 1977,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2127,
        2128
      ],
      "uniqueid": 928
    },
    "929": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982444606124",
      "endTime": "578982477901490",
      "elapsedTime": "33295366",
      "asyncId": 2127,
      "triggerAsyncId": 2126,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 929
    },
    "930": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982416249807",
      "endTime": "578982525747612",
      "elapsedTime": "109497805",
      "asyncId": 2128,
      "triggerAsyncId": 2126,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2409,
        2408
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 930
    },
    "931": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982416613950",
      "endTime": "578982564132158",
      "elapsedTime": "147518208",
      "asyncId": 2129,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2134,
        2142
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 931
    },
    "932": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982445734098",
      "endTime": "578982477927098",
      "elapsedTime": "32193000",
      "asyncId": 2130,
      "triggerAsyncId": 1983,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2133,
        2132
      ],
      "uniqueid": 932
    },
    "933": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578982446050421",
      "endTime": "578982446064097",
      "elapsedTime": "13676",
      "asyncId": 2131,
      "triggerAsyncId": 1983,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2132
      ],
      "uniqueid": 933
    },
    "934": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982417669298",
      "endTime": "578982527098584",
      "elapsedTime": "109429286",
      "asyncId": 2132,
      "triggerAsyncId": 2130,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2413,
        2412
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 934
    },
    "935": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:23:43:23",
      "startTime": "578982417929836",
      "endTime": "578982583296493",
      "elapsedTime": "165366657",
      "asyncId": 2133,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfProviders",
      "userCode": false,
      "triggers": [
        2206,
        2143
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 23,
      "endLine": 43,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 935
    },
    "936": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578982422037116",
      "endTime": "578982583499834",
      "elapsedTime": "161462718",
      "asyncId": 2143,
      "triggerAsyncId": 2133,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2146
      ],
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 936
    },
    "937": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578982422876229",
      "endTime": "578982586865263",
      "elapsedTime": "163989034",
      "asyncId": 2146,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2369
      ],
      "uniqueid": 937
    },
    "938": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982423237516",
      "endTime": "578982582008819",
      "elapsedTime": "158771303",
      "asyncId": 2147,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2150,
        2346
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 938
    },
    "939": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982423636965",
      "endTime": "578982574963632",
      "elapsedTime": "151326667",
      "asyncId": 2148,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        2149,
        2154
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 939
    },
    "940": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982424101877",
      "endTime": "578982567838826",
      "elapsedTime": "143736949",
      "asyncId": 2149,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 940
    },
    "941": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982424507657",
      "endTime": "578982569447041",
      "elapsedTime": "144939384",
      "asyncId": 2150,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2153
      ],
      "uniqueid": 941
    },
    "942": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982463083652",
      "endTime": "578982480132532",
      "elapsedTime": "17048880",
      "asyncId": 2151,
      "triggerAsyncId": 2013,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2154,
        2152
      ],
      "uniqueid": 942
    },
    "943": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982425393407",
      "endTime": "578982529311863",
      "elapsedTime": "103918456",
      "asyncId": 2152,
      "triggerAsyncId": 2151,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2153,
        2418,
        2417,
        2416
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 943
    },
    "944": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982425818925",
      "endTime": "578982574987447",
      "elapsedTime": "149168522",
      "asyncId": 2153,
      "triggerAsyncId": 2150,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 944
    },
    "945": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982426228583",
      "endTime": "578982578710085",
      "elapsedTime": "152481502",
      "asyncId": 2154,
      "triggerAsyncId": 2148,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2575,
        2574
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 945
    },
    "946": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982426610940",
      "endTime": "578982564859771",
      "elapsedTime": "138248831",
      "asyncId": 2155,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2160,
        2347
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 946
    },
    "947": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982464683300",
      "endTime": "578982480178367",
      "elapsedTime": "15495067",
      "asyncId": 2156,
      "triggerAsyncId": 2033,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2159,
        2158
      ],
      "uniqueid": 947
    },
    "948": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578982465051992",
      "endTime": "578982465070106",
      "elapsedTime": "18114",
      "asyncId": 2157,
      "triggerAsyncId": 2033,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2158
      ],
      "uniqueid": 948
    },
    "949": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982427954739",
      "endTime": "578982530618633",
      "elapsedTime": "102663894",
      "asyncId": 2158,
      "triggerAsyncId": 2156,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2423,
        2422
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 949
    },
    "950": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982428301149",
      "endTime": "578982564918942",
      "elapsedTime": "136617793",
      "asyncId": 2159,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2208,
        2348
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 950
    },
    "951": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982466374281",
      "endTime": "578982486963337",
      "elapsedTime": "20589056",
      "asyncId": 2160,
      "triggerAsyncId": 2155,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2162
      ],
      "uniqueid": 951
    },
    "952": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982466732101",
      "endTime": "578982480243790",
      "elapsedTime": "13511689",
      "asyncId": 2161,
      "triggerAsyncId": 2039,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2164
      ],
      "uniqueid": 952
    },
    "953": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982429565148",
      "endTime": "578982531882342",
      "elapsedTime": "102317194",
      "asyncId": 2162,
      "triggerAsyncId": 2160,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2163,
        2427,
        2426
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 953
    },
    "954": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982429963174",
      "endTime": "578982586637276",
      "elapsedTime": "156674102",
      "asyncId": 2163,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2349
      ],
      "uniqueid": 954
    },
    "955": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982430471056",
      "endTime": "578982584518534",
      "elapsedTime": "154047478",
      "asyncId": 2164,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2268
      ],
      "uniqueid": 955
    },
    "956": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982430830811",
      "endTime": "578982583379609",
      "elapsedTime": "152548798",
      "asyncId": 2165,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "triggers": [
        2168
      ],
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 956
    },
    "957": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982431183001",
      "endTime": "578982583529620",
      "elapsedTime": "152346619",
      "asyncId": 2166,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2167,
        2267
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 957
    },
    "958": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982432291038",
      "endTime": "578982567971284",
      "elapsedTime": "135680246",
      "asyncId": 2168,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2172
      ],
      "uniqueid": 958
    },
    "959": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982432700936",
      "endTime": "578982564995967",
      "elapsedTime": "132295031",
      "asyncId": 2169,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2201,
        2431
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 959
    },
    "960": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982469776508",
      "endTime": "578982486353704",
      "elapsedTime": "16577196",
      "asyncId": 2170,
      "triggerAsyncId": 2050,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2171
      ],
      "uniqueid": 960
    },
    "961": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982433610061",
      "endTime": "578982532703662",
      "elapsedTime": "99093601",
      "asyncId": 2171,
      "triggerAsyncId": 2170,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2202,
        2430
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 961
    },
    "962": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982434595999",
      "endTime": "578982568061974",
      "elapsedTime": "133465975",
      "asyncId": 2174,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2178
      ],
      "uniqueid": 962
    },
    "963": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982434892024",
      "endTime": "578982565081517",
      "elapsedTime": "130189493",
      "asyncId": 2175,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2178,
        2433
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 963
    },
    "964": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982471053642",
      "endTime": "578982471071085",
      "elapsedTime": "17443",
      "asyncId": 2176,
      "triggerAsyncId": 2076,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2177,
        2177
      ],
      "uniqueid": 964
    },
    "965": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982435635818",
      "endTime": "578982533103120",
      "elapsedTime": "97467302",
      "asyncId": 2177,
      "triggerAsyncId": 2176,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2432
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 965
    },
    "966": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982436661721",
      "endTime": "578982568118921",
      "elapsedTime": "131457200",
      "asyncId": 2180,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        2181,
        2184
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 966
    },
    "967": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982443771970",
      "endTime": "578982565144535",
      "elapsedTime": "121372565",
      "asyncId": 2181,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2435
      ],
      "uniqueid": 967
    },
    "968": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982472842406",
      "endTime": "578982484656302",
      "elapsedTime": "11813896",
      "asyncId": 2182,
      "triggerAsyncId": 2179,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2183
      ],
      "uniqueid": 968
    },
    "969": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982444550159",
      "endTime": "578982533526604",
      "elapsedTime": "88976445",
      "asyncId": 2183,
      "triggerAsyncId": 2182,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2186,
        2434
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 969
    },
    "970": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982445640563",
      "endTime": "578982568178824",
      "elapsedTime": "122538261",
      "asyncId": 2186,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2190
      ],
      "uniqueid": 970
    },
    "971": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982445948480",
      "endTime": "578982565199478",
      "elapsedTime": "119250998",
      "asyncId": 2187,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2192,
        2437
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 971
    },
    "972": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982475227296",
      "endTime": "578982480928925",
      "elapsedTime": "5701629",
      "asyncId": 2188,
      "triggerAsyncId": 2090,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2191,
        2189
      ],
      "uniqueid": 972
    },
    "973": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982446691413",
      "endTime": "578982533886890",
      "elapsedTime": "87195477",
      "asyncId": 2189,
      "triggerAsyncId": 2188,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2190,
        2436
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 973
    },
    "974": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982447683643",
      "endTime": "578982568254365",
      "elapsedTime": "120570722",
      "asyncId": 2192,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2196
      ],
      "uniqueid": 974
    },
    "975": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982447997862",
      "endTime": "578982565258940",
      "elapsedTime": "117261078",
      "asyncId": 2193,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2196,
        2439
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 975
    },
    "976": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982477144400",
      "endTime": "578982477158346",
      "elapsedTime": "13946",
      "asyncId": 2194,
      "triggerAsyncId": 2096,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2195,
        2195
      ],
      "uniqueid": 976
    },
    "977": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982448603758",
      "endTime": "578982534265259",
      "elapsedTime": "85661501",
      "asyncId": 2195,
      "triggerAsyncId": 2194,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2438
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 977
    },
    "978": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982449557516",
      "endTime": "578982568310119",
      "elapsedTime": "118752603",
      "asyncId": 2198,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2202
      ],
      "uniqueid": 978
    },
    "979": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982449865012",
      "endTime": "578982565322679",
      "elapsedTime": "115457667",
      "asyncId": 2199,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2200,
        2441
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 979
    },
    "980": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982479978052",
      "endTime": "578982483172210",
      "elapsedTime": "3194158",
      "asyncId": 2200,
      "triggerAsyncId": 2199,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2201
      ],
      "uniqueid": 980
    },
    "981": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982450542382",
      "endTime": "578982534651714",
      "elapsedTime": "84109332",
      "asyncId": 2201,
      "triggerAsyncId": 2200,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2440
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 981
    },
    "982": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982451531686",
      "endTime": "578982568366395",
      "elapsedTime": "116834709",
      "asyncId": 2204,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        2205,
        2208
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 982
    },
    "983": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982451841086",
      "endTime": "578982565394474",
      "elapsedTime": "113553388",
      "asyncId": 2205,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2443
      ],
      "uniqueid": 983
    },
    "984": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982482460816",
      "endTime": "578982482514758",
      "elapsedTime": "53942",
      "asyncId": 2206,
      "triggerAsyncId": 2133,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2207,
        2207
      ],
      "uniqueid": 984
    },
    "985": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982452565575",
      "endTime": "578982535050321",
      "elapsedTime": "82484746",
      "asyncId": 2207,
      "triggerAsyncId": 2206,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2442
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 985
    },
    "986": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982453573915",
      "endTime": "578982568421709",
      "elapsedTime": "114847794",
      "asyncId": 2210,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        2211,
        2214
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 986
    },
    "987": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982453914704",
      "endTime": "578982565448896",
      "elapsedTime": "111534192",
      "asyncId": 2211,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2445
      ],
      "uniqueid": 987
    },
    "988": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982487628213",
      "endTime": "578982492654726",
      "elapsedTime": "5026513",
      "asyncId": 2212,
      "triggerAsyncId": 1993,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2215,
        2213
      ],
      "uniqueid": 988
    },
    "989": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982454628562",
      "endTime": "578982535454298",
      "elapsedTime": "80825736",
      "asyncId": 2213,
      "triggerAsyncId": 2212,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2214,
        2444
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 989
    },
    "990": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982455614550",
      "endTime": "578982568478225",
      "elapsedTime": "112863675",
      "asyncId": 2216,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        2219,
        2220
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 990
    },
    "991": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982455981368",
      "endTime": "578982565517124",
      "elapsedTime": "109535756",
      "asyncId": 2217,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2218,
        2447
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 991
    },
    "992": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982489548473",
      "endTime": "578982492731370",
      "elapsedTime": "3182897",
      "asyncId": 2218,
      "triggerAsyncId": 2217,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2219
      ],
      "uniqueid": 992
    },
    "993": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982456687311",
      "endTime": "578982535827538",
      "elapsedTime": "79140227",
      "asyncId": 2219,
      "triggerAsyncId": 2218,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2446
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 993
    },
    "994": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982457649274",
      "endTime": "578982568533839",
      "elapsedTime": "110884565",
      "asyncId": 2222,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2226
      ],
      "uniqueid": 994
    },
    "995": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982457985054",
      "endTime": "578982565575513",
      "elapsedTime": "107590459",
      "asyncId": 2223,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2449
      ],
      "uniqueid": 995
    },
    "996": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982491601561",
      "endTime": "578982497659999",
      "elapsedTime": "6058438",
      "asyncId": 2224,
      "triggerAsyncId": 1985,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2227,
        2225
      ],
      "uniqueid": 996
    },
    "997": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982458629061",
      "endTime": "578982536206128",
      "elapsedTime": "77577067",
      "asyncId": 2225,
      "triggerAsyncId": 2224,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2226,
        2448
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 997
    },
    "998": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982459731658",
      "endTime": "578982568590926",
      "elapsedTime": "108859268",
      "asyncId": 2228,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        2231,
        2232
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 998
    },
    "999": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982460055756",
      "endTime": "578982565629164",
      "elapsedTime": "105573408",
      "asyncId": 2229,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2230,
        2451
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 999
    },
    "1000": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982493760078",
      "endTime": "578982497842100",
      "elapsedTime": "4082022",
      "asyncId": 2230,
      "triggerAsyncId": 2229,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2231
      ],
      "uniqueid": 1000
    },
    "1001": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982460815610",
      "endTime": "578982536522370",
      "elapsedTime": "75706760",
      "asyncId": 2231,
      "triggerAsyncId": 2230,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2450
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1001
    },
    "1002": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982461831835",
      "endTime": "578982568648424",
      "elapsedTime": "106816589",
      "asyncId": 2234,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "triggers": [
        2235,
        2238
      ],
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1002
    },
    "1003": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982462137899",
      "endTime": "578982565687513",
      "elapsedTime": "103549614",
      "asyncId": 2235,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2453
      ],
      "uniqueid": 1003
    },
    "1004": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982495984297",
      "endTime": "578982499203142",
      "elapsedTime": "3218845",
      "asyncId": 2236,
      "triggerAsyncId": 2233,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2242,
        2237
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1004
    },
    "1005": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982462744466",
      "endTime": "578982536846167",
      "elapsedTime": "74101701",
      "asyncId": 2237,
      "triggerAsyncId": 2236,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2452
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1005
    },
    "1006": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982463649803",
      "endTime": "578982568708907",
      "elapsedTime": "105059104",
      "asyncId": 2240,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2244
      ],
      "uniqueid": 1006
    },
    "1007": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982463944406",
      "endTime": "578982565749179",
      "elapsedTime": "101804773",
      "asyncId": 2241,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2455
      ],
      "uniqueid": 1007
    },
    "1008": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982498532745",
      "endTime": "578982498801609",
      "elapsedTime": "268864",
      "asyncId": 2242,
      "triggerAsyncId": 2236,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2243,
        2243
      ],
      "uniqueid": 1008
    },
    "1009": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982464490008",
      "endTime": "578982537209699",
      "elapsedTime": "72719691",
      "asyncId": 2243,
      "triggerAsyncId": 2242,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2454
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1009
    },
    "1010": {
      "source": "node_modules/@nestjs/core/injector/injector.js:98:49:98:49",
      "startTime": "578982465385948",
      "endTime": "578982568766034",
      "elapsedTime": "103380086",
      "asyncId": 2246,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " resolveParam",
      "userCode": false,
      "line": "\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false",
      "startLine": 98,
      "startCol": 49,
      "endLine": 98,
      "endCol": 49,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2250
      ],
      "uniqueid": 1010
    },
    "1011": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982465664169",
      "endTime": "578982565805805",
      "elapsedTime": "100141636",
      "asyncId": 2247,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2253,
        2252,
        2457
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1011
    },
    "1012": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982501292688",
      "endTime": "578982504042413",
      "elapsedTime": "2749725",
      "asyncId": 2248,
      "triggerAsyncId": 2072,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2251,
        2249
      ],
      "uniqueid": 1012
    },
    "1013": {
      "source": "node_modules/@nestjs/core/injector/injector.js:133:21:133:21",
      "startTime": "578982466515375",
      "endTime": "578982537529909",
      "elapsedTime": "71014534",
      "asyncId": 2249,
      "triggerAsyncId": 2248,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveSingleParam",
      "userCode": false,
      "triggers": [
        2250,
        2456
      ],
      "line": "\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) ",
      "startLine": 133,
      "startCol": 21,
      "endLine": 133,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1013
    },
    "1014": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578982467255673",
      "endTime": "578982575359044",
      "elapsedTime": "108103371",
      "asyncId": 2251,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2266
      ],
      "uniqueid": 1014
    },
    "1015": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982471965351",
      "endTime": "578982580381248",
      "elapsedTime": "108415897",
      "asyncId": 2266,
      "triggerAsyncId": 2251,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2580,
        2579,
        2578
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1015
    },
    "1016": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982472265564",
      "endTime": "578982584541988",
      "elapsedTime": "112276424",
      "asyncId": 2267,
      "triggerAsyncId": 2166,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        2268,
        2268
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1016
    },
    "1017": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982472518098",
      "endTime": "578982585571919",
      "elapsedTime": "113053821",
      "asyncId": 2268,
      "triggerAsyncId": 2164,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2275,
        2278,
        2276,
        2280,
        2286,
        2269,
        2269,
        2595,
        2594
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1017
    },
    "1018": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982472856121",
      "endTime": "578982565857231",
      "elapsedTime": "93001110",
      "asyncId": 2269,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2290,
        2296,
        2289,
        2288,
        2287,
        2294,
        2298,
        2304,
        2270,
        2350
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1018
    },
    "1019": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982517786678",
      "endTime": "578982537825152",
      "elapsedTime": "20038474",
      "asyncId": 2270,
      "triggerAsyncId": 2269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [
        2272
      ],
      "uniqueid": 1019
    },
    "1020": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982518046135",
      "endTime": "578982537862562",
      "elapsedTime": "19816427",
      "asyncId": 2271,
      "triggerAsyncId": 1890,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1020
    },
    "1021": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982473943129",
      "endTime": "578982538696275",
      "elapsedTime": "64753146",
      "asyncId": 2272,
      "triggerAsyncId": 2270,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2459,
        2458
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1021
    },
    "1022": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982474285601",
      "endTime": "578982565925890",
      "elapsedTime": "91640289",
      "asyncId": 2273,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2351
      ],
      "uniqueid": 1022
    },
    "1023": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982477801562",
      "endTime": "578982478253770",
      "elapsedTime": "452208",
      "asyncId": 2274,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2276
      ],
      "uniqueid": 1023
    },
    "1024": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982518936343",
      "endTime": "578982519008719",
      "elapsedTime": "72376",
      "asyncId": 2275,
      "triggerAsyncId": 2268,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2277
      ],
      "uniqueid": 1024
    },
    "1025": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982478589159",
      "endTime": "578982539736696",
      "elapsedTime": "61147537",
      "asyncId": 2276,
      "triggerAsyncId": 2274,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2282,
        2463,
        2462
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1025
    },
    "1026": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982478879753",
      "endTime": "578982565974782",
      "elapsedTime": "87095029",
      "asyncId": 2277,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2352
      ],
      "uniqueid": 1026
    },
    "1027": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982519548661",
      "endTime": "578982519559732",
      "elapsedTime": "11071",
      "asyncId": 2278,
      "triggerAsyncId": 2268,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2280
      ],
      "uniqueid": 1027
    },
    "1028": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982479510406",
      "endTime": "578982479554769",
      "elapsedTime": "44363",
      "asyncId": 2279,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1028
    },
    "1029": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982479962142",
      "endTime": "578982540760355",
      "elapsedTime": "60798213",
      "asyncId": 2280,
      "triggerAsyncId": 2278,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2467,
        2466
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1029
    },
    "1030": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982480238640",
      "endTime": "578982566035025",
      "elapsedTime": "85796385",
      "asyncId": 2281,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2353
      ],
      "uniqueid": 1030
    },
    "1031": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982520237663",
      "endTime": "578982521035258",
      "elapsedTime": "797595",
      "asyncId": 2282,
      "triggerAsyncId": 2276,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [
        2284
      ],
      "uniqueid": 1031
    },
    "1032": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982480926661",
      "endTime": "578982480945275",
      "elapsedTime": "18614",
      "asyncId": 2283,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1032
    },
    "1033": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982481275725",
      "endTime": "578982541799373",
      "elapsedTime": "60523648",
      "asyncId": 2284,
      "triggerAsyncId": 2282,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2471,
        2470
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1033
    },
    "1034": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982481532145",
      "endTime": "578982566087243",
      "elapsedTime": "84555098",
      "asyncId": 2285,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2354
      ],
      "uniqueid": 1034
    },
    "1035": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982521291699",
      "endTime": "578982537067853",
      "elapsedTime": "15776154",
      "asyncId": 2287,
      "triggerAsyncId": 2269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2295
      ],
      "uniqueid": 1035
    },
    "1036": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982482537881",
      "endTime": "578982542875640",
      "elapsedTime": "60337759",
      "asyncId": 2288,
      "triggerAsyncId": 2286,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2293,
        2475,
        2474
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1036
    },
    "1037": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982482815571",
      "endTime": "578982566136495",
      "elapsedTime": "83320924",
      "asyncId": 2289,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2301,
        2309,
        2292,
        2355
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1037
    },
    "1038": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578982524219918",
      "endTime": "578982524234405",
      "elapsedTime": "14487",
      "asyncId": 2290,
      "triggerAsyncId": 2269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        2291,
        2292
      ],
      "uniqueid": 1038
    },
    "1039": {
      "source": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts:161:32:161:32",
      "startTime": "578982524613365",
      "endTime": "578982527186790",
      "elapsedTime": "2573425",
      "asyncId": 2291,
      "triggerAsyncId": 2290,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n\n  it('line price is taken from the linePrice field (no calculation yet)', async () => {\n    const line = await service.save(\n      mockEntityManager,\n      {\n        narration: ''",
      "startLine": 161,
      "startCol": 32,
      "endLine": 161,
      "endCol": 32,
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "triggers": [],
      "uniqueid": 1039
    },
    "1040": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982483877131",
      "endTime": "578982543993756",
      "elapsedTime": "60116625",
      "asyncId": 2292,
      "triggerAsyncId": 2290,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2479,
        2478
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1040
    },
    "1041": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982484173617",
      "endTime": "578982566187130",
      "elapsedTime": "82013513",
      "asyncId": 2293,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2356
      ],
      "uniqueid": 1041
    },
    "1042": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982525317115",
      "endTime": "578982537125411",
      "elapsedTime": "11808296",
      "asyncId": 2294,
      "triggerAsyncId": 2269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2300,
        2296
      ],
      "uniqueid": 1042
    },
    "1043": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982485280973",
      "endTime": "578982545021373",
      "elapsedTime": "59740400",
      "asyncId": 2296,
      "triggerAsyncId": 2294,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2483,
        2482
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1043
    },
    "1044": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982485527735",
      "endTime": "578982566231022",
      "elapsedTime": "80703287",
      "asyncId": 2297,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2357
      ],
      "uniqueid": 1044
    },
    "1045": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982526200631",
      "endTime": "578982537188389",
      "elapsedTime": "10987758",
      "asyncId": 2298,
      "triggerAsyncId": 2269,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [
        2300
      ],
      "uniqueid": 1045
    },
    "1046": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982486099337",
      "endTime": "578982486116910",
      "elapsedTime": "17573",
      "asyncId": 2299,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1046
    },
    "1047": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982486435047",
      "endTime": "578982546108891",
      "elapsedTime": "59673844",
      "asyncId": 2300,
      "triggerAsyncId": 2298,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2487,
        2486
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1047
    },
    "1048": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982486720371",
      "endTime": "578982566274383",
      "elapsedTime": "79554012",
      "asyncId": 2301,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2302,
        2358
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1048
    },
    "1049": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982527134201",
      "endTime": "578982535312963",
      "elapsedTime": "8178762",
      "asyncId": 2302,
      "triggerAsyncId": 2301,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2305,
        2304
      ],
      "uniqueid": 1049
    },
    "1050": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982487327409",
      "endTime": "578982487341546",
      "elapsedTime": "14137",
      "asyncId": 2303,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1050
    },
    "1051": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982487637741",
      "endTime": "578982547152247",
      "elapsedTime": "59514506",
      "asyncId": 2304,
      "triggerAsyncId": 2302,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2491,
        2490
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1051
    },
    "1052": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982487908128",
      "endTime": "578982566321181",
      "elapsedTime": "78413053",
      "asyncId": 2305,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2306,
        2308,
        2359
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1052
    },
    "1053": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982534841960",
      "endTime": "578982535093522",
      "elapsedTime": "251562",
      "asyncId": 2306,
      "triggerAsyncId": 2305,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        2307,
        2308
      ],
      "uniqueid": 1053
    },
    "1054": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982535078564",
      "endTime": "578982535388855",
      "elapsedTime": "310291",
      "asyncId": 2307,
      "triggerAsyncId": 2306,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [],
      "uniqueid": 1054
    },
    "1055": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982488886762",
      "endTime": "578982548176938",
      "elapsedTime": "59290176",
      "asyncId": 2308,
      "triggerAsyncId": 2306,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2495,
        2494
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1055
    },
    "1056": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982489198577",
      "endTime": "578982566369762",
      "elapsedTime": "77171185",
      "asyncId": 2309,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2310,
        2360
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1056
    },
    "1057": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982535874967",
      "endTime": "578982535981957",
      "elapsedTime": "106990",
      "asyncId": 2310,
      "triggerAsyncId": 2309,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2312
      ],
      "uniqueid": 1057
    },
    "1058": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982538225823",
      "endTime": "578982548859958",
      "elapsedTime": "10634135",
      "asyncId": 2311,
      "triggerAsyncId": 1891,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2319
      ],
      "uniqueid": 1058
    },
    "1059": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982490305442",
      "endTime": "578982549231575",
      "elapsedTime": "58926133",
      "asyncId": 2312,
      "triggerAsyncId": 2310,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2499,
        2498
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1059
    },
    "1060": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982490627576",
      "endTime": "578982566419445",
      "elapsedTime": "75791869",
      "asyncId": 2313,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2361
      ],
      "uniqueid": 1060
    },
    "1061": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982539214216",
      "endTime": "578982539231489",
      "elapsedTime": "17273",
      "asyncId": 2314,
      "triggerAsyncId": 1891,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2315,
        2315,
        2316
      ],
      "uniqueid": 1061
    },
    "1062": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982539621270",
      "endTime": "578982543414500",
      "elapsedTime": "3793230",
      "asyncId": 2315,
      "triggerAsyncId": 2314,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2322,
        2325,
        2323,
        2327,
        2333,
        2316,
        2316
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1062
    },
    "1063": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982491742776",
      "endTime": "578982550320917",
      "elapsedTime": "58578141",
      "asyncId": 2316,
      "triggerAsyncId": 2314,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2337,
        2343,
        2336,
        2335,
        2334,
        2341,
        2345,
        2351,
        2317,
        2503,
        2502
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1063
    },
    "1064": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982492050694",
      "endTime": "578982583225149",
      "elapsedTime": "91174455",
      "asyncId": 2317,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2362
      ],
      "uniqueid": 1064
    },
    "1065": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982492388547",
      "endTime": "578982575428213",
      "elapsedTime": "83039666",
      "asyncId": 2318,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2324
      ],
      "uniqueid": 1065
    },
    "1066": {
      "source": "node_modules/@nestjs/core/injector/injector.js:73:31:73:31",
      "startTime": "578982492744043",
      "endTime": "578982569080303",
      "elapsedTime": "76336260",
      "asyncId": 2319,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.applyDoneHook",
      "userCode": false,
      "line": "\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true",
      "startLine": 73,
      "startCol": 31,
      "endLine": 73,
      "endCol": 31,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1066
    },
    "1067": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982493097486",
      "endTime": "578982570170718",
      "elapsedTime": "77073232",
      "asyncId": 2320,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2323
      ],
      "uniqueid": 1067
    },
    "1068": {
      "source": "node_modules/@nestjs/core/injector/injector.js:113:41:113:41",
      "startTime": "578982493478410",
      "endTime": "578982493491955",
      "elapsedTime": "13545",
      "asyncId": 2321,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) ",
      "startLine": 113,
      "startCol": 41,
      "endLine": 113,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2322
      ],
      "uniqueid": 1068
    },
    "1069": {
      "source": "node_modules/@nestjs/core/injector/injector.js:46:20:46:20",
      "startTime": "578982493840469",
      "endTime": "578982552040440",
      "elapsedTime": "58199971",
      "asyncId": 2322,
      "triggerAsyncId": 2321,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadInstance",
      "userCode": false,
      "triggers": [
        2324,
        2508,
        2507,
        2506
      ],
      "line": "\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper",
      "startLine": 46,
      "startCol": 20,
      "endLine": 46,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1069
    },
    "1070": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982494161350",
      "endTime": "578982575459462",
      "elapsedTime": "81298112",
      "asyncId": 2323,
      "triggerAsyncId": 2320,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "triggers": [
        2329
      ],
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1070
    },
    "1071": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982494447547",
      "endTime": "578982581408544",
      "elapsedTime": "86960997",
      "asyncId": 2324,
      "triggerAsyncId": 2318,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2585,
        2584
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1071
    },
    "1072": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982494745305",
      "endTime": "578982567127983",
      "elapsedTime": "72382678",
      "asyncId": 2325,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2363
      ],
      "uniqueid": 1072
    },
    "1073": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982495045718",
      "endTime": "578982495416012",
      "elapsedTime": "370294",
      "asyncId": 2326,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2328
      ],
      "uniqueid": 1073
    },
    "1074": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982542360424",
      "endTime": "578982543341453",
      "elapsedTime": "981029",
      "asyncId": 2327,
      "triggerAsyncId": 2315,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1074
    },
    "1075": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982495772971",
      "endTime": "578982553087724",
      "elapsedTime": "57314753",
      "asyncId": 2328,
      "triggerAsyncId": 2326,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2513,
        2512
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1075
    },
    "1076": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982496080237",
      "endTime": "578982567186112",
      "elapsedTime": "71105875",
      "asyncId": 2329,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2364
      ],
      "uniqueid": 1076
    },
    "1077": {
      "source": "node_modules/@nestjs/core/injector/injector.js:68:20:68:20",
      "startTime": "578982496415967",
      "endTime": "578982496802221",
      "elapsedTime": "386254",
      "asyncId": 2330,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) ",
      "startLine": 68,
      "startCol": 20,
      "endLine": 68,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2332
      ],
      "uniqueid": 1077
    },
    "1078": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982497142649",
      "endTime": "578982554611470",
      "elapsedTime": "57468821",
      "asyncId": 2332,
      "triggerAsyncId": 2330,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2517,
        2516
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1078
    },
    "1079": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982497429016",
      "endTime": "578982567230055",
      "elapsedTime": "69801039",
      "asyncId": 2333,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2365
      ],
      "uniqueid": 1079
    },
    "1080": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982543651174",
      "endTime": "578982548589020",
      "elapsedTime": "4937846",
      "asyncId": 2334,
      "triggerAsyncId": 2316,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2342,
        2336
      ],
      "uniqueid": 1080
    },
    "1081": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982543945035",
      "endTime": "578982548538205",
      "elapsedTime": "4593170",
      "asyncId": 2335,
      "triggerAsyncId": 2316,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2340
      ],
      "uniqueid": 1081
    },
    "1082": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982498510954",
      "endTime": "578982555692577",
      "elapsedTime": "57181623",
      "asyncId": 2336,
      "triggerAsyncId": 2334,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2348,
        2356,
        2339,
        2521,
        2520
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1082
    },
    "1083": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982498818190",
      "endTime": "578982567279848",
      "elapsedTime": "68461658",
      "asyncId": 2337,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2338,
        2366
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1083
    },
    "1084": {
      "source": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts:180:32:180:32",
      "startTime": "578982544750034",
      "endTime": "578982546628856",
      "elapsedTime": "1878822",
      "asyncId": 2338,
      "triggerAsyncId": 2337,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n    customerPriceListModel.validTo = null;\n    customerPriceListModel.validFrom = null;\n    const line = await service.save(\n      mockEntityManager,\n      {\n        narration: ''",
      "startLine": 180,
      "startCol": 32,
      "endLine": 180,
      "endCol": 32,
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "triggers": [
        2340
      ],
      "uniqueid": 1084
    },
    "1085": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982544976178",
      "endTime": "578982548564605",
      "elapsedTime": "3588427",
      "asyncId": 2339,
      "triggerAsyncId": 2336,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1085
    },
    "1086": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982499911690",
      "endTime": "578982556728488",
      "elapsedTime": "56816798",
      "asyncId": 2340,
      "triggerAsyncId": 2338,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2525,
        2524
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1086
    },
    "1087": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982500230307",
      "endTime": "578982567335072",
      "elapsedTime": "67104765",
      "asyncId": 2341,
      "triggerAsyncId": 2035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2347,
        2367
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1087
    },
    "1088": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982545636245",
      "endTime": "578982545646905",
      "elapsedTime": "10660",
      "asyncId": 2343,
      "triggerAsyncId": 2316,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1088
    },
    "1089": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:62:43:62",
      "startTime": "578982502670872",
      "endTime": "578982557764050",
      "elapsedTime": "55093178",
      "asyncId": 2344,
      "triggerAsyncId": 2342,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2529,
        2528
      ],
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 62,
      "endLine": 43,
      "endCol": 62,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1089
    },
    "1090": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:43:23:43:23",
      "startTime": "578982502964372",
      "endTime": "578982586779432",
      "elapsedTime": "83815060",
      "asyncId": 2345,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfProviders",
      "userCode": false,
      "line": "\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module",
      "startLine": 43,
      "startCol": 23,
      "endLine": 43,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2368
      ],
      "uniqueid": 1090
    },
    "1091": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:28:24:28:24",
      "startTime": "578982509307152",
      "endTime": "578982586891422",
      "elapsedTime": "77584270",
      "asyncId": 2368,
      "triggerAsyncId": 2345,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype",
      "startLine": 28,
      "startCol": 24,
      "endLine": 28,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 1091
    },
    "1092": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:27:23:27:23",
      "startTime": "578982509782303",
      "endTime": "578982588999614",
      "elapsedTime": "79217311",
      "asyncId": 2370,
      "triggerAsyncId": 2035,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstances",
      "userCode": false,
      "triggers": [
        2376,
        2373
      ],
      "line": "\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module)",
      "startLine": 27,
      "startCol": 23,
      "endLine": 27,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "uniqueid": 1092
    },
    "1093": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:17:20:17:20",
      "startTime": "578982510487766",
      "endTime": "578982589123837",
      "elapsedTime": "78636071",
      "asyncId": 2373,
      "triggerAsyncId": 2370,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfDependencies",
      "userCode": false,
      "line": "\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => ",
      "startLine": 17,
      "startCol": 20,
      "endLine": 17,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 1093
    },
    "1094": {
      "source": "node_modules/@nestjs/testing/testing-module.builder.js:43:35:43:35",
      "startTime": "578982510692109",
      "endTime": "578982589171667",
      "elapsedTime": "78479558",
      "asyncId": 2374,
      "triggerAsyncId": 2078,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " TestingModuleBuilder.compile",
      "userCode": false,
      "line": "\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders();\n        const root = this.getRootModule();\n        return new testing_module_1.TestingModule(this.container, [], root, this.applicationConfig)",
      "startLine": 43,
      "startCol": 35,
      "endLine": 43,
      "endCol": 35,
      "file": "node_modules/@nestjs/testing/testing-module.builder.js",
      "triggers": [],
      "uniqueid": 1094
    },
    "1095": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982510882816",
      "endTime": "578982589435191",
      "elapsedTime": "78552375",
      "asyncId": 2375,
      "triggerAsyncId": 2077,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1095
    },
    "1096": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982511477231",
      "endTime": "578982567441501",
      "elapsedTime": "55964270",
      "asyncId": 2376,
      "triggerAsyncId": 2086,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2381
      ],
      "uniqueid": 1096
    },
    "1097": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982512018916",
      "endTime": "578982557812190",
      "elapsedTime": "45793274",
      "asyncId": 2377,
      "triggerAsyncId": 2086,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2380
      ],
      "uniqueid": 1097
    },
    "1098": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982512859432",
      "endTime": "578982557843338",
      "elapsedTime": "44983906",
      "asyncId": 2379,
      "triggerAsyncId": 2378,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1098
    },
    "1099": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982513230026",
      "endTime": "578982562995547",
      "elapsedTime": "49765521",
      "asyncId": 2380,
      "triggerAsyncId": 2377,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2550
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1099
    },
    "1100": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982513576295",
      "endTime": "578982569271271",
      "elapsedTime": "55694976",
      "asyncId": 2381,
      "triggerAsyncId": 2376,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2389
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1100
    },
    "1101": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982554043736",
      "endTime": "578982561176196",
      "elapsedTime": "7132460",
      "asyncId": 2382,
      "triggerAsyncId": 2363,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2387,
        2385
      ],
      "uniqueid": 1101
    },
    "1102": {
      "source": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts:201:32:201:32",
      "startTime": "578982555800990",
      "endTime": "578982560920217",
      "elapsedTime": "5119227",
      "asyncId": 2383,
      "triggerAsyncId": 2363,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2384,
        2395,
        2403,
        2386
      ],
      "line": "\n      .add(1, 'days')\n      .toDate();\n    const line = await service.save(\n      mockEntityManager,\n      {\n        narration: ''",
      "startLine": 201,
      "startCol": 32,
      "endLine": 201,
      "endCol": 32,
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "uniqueid": 1102
    },
    "1103": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982514775233",
      "endTime": "578982557908010",
      "elapsedTime": "43132777",
      "asyncId": 2384,
      "triggerAsyncId": 2383,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2385
      ],
      "uniqueid": 1103
    },
    "1104": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982515076378",
      "endTime": "578982563068954",
      "elapsedTime": "47992576",
      "asyncId": 2385,
      "triggerAsyncId": 2382,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1104
    },
    "1105": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982556746993",
      "endTime": "578982561206723",
      "elapsedTime": "4459730",
      "asyncId": 2386,
      "triggerAsyncId": 2383,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2389
      ],
      "uniqueid": 1105
    },
    "1106": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982556999727",
      "endTime": "578982561275843",
      "elapsedTime": "4276116",
      "asyncId": 2387,
      "triggerAsyncId": 2382,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "triggers": [
        2388
      ],
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 1106
    },
    "1107": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982557198360",
      "endTime": "578982561298536",
      "elapsedTime": "4100176",
      "asyncId": 2388,
      "triggerAsyncId": 2363,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2394
      ],
      "uniqueid": 1107
    },
    "1108": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982516576650",
      "endTime": "578982563128697",
      "elapsedTime": "46552047",
      "asyncId": 2389,
      "triggerAsyncId": 2386,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1108
    },
    "1109": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982516990115",
      "endTime": "578982567598796",
      "elapsedTime": "50608681",
      "asyncId": 2390,
      "triggerAsyncId": 2102,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2395
      ],
      "uniqueid": 1109
    },
    "1110": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982517362894",
      "endTime": "578982557991316",
      "elapsedTime": "40628422",
      "asyncId": 2391,
      "triggerAsyncId": 2102,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2394
      ],
      "uniqueid": 1110
    },
    "1111": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982557984343",
      "endTime": "578982561378806",
      "elapsedTime": "3394463",
      "asyncId": 2392,
      "triggerAsyncId": 2363,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "triggers": [
        2393
      ],
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "uniqueid": 1111
    },
    "1112": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982518108972",
      "endTime": "578982558024047",
      "elapsedTime": "39915075",
      "asyncId": 2393,
      "triggerAsyncId": 2392,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1112
    },
    "1113": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982518415277",
      "endTime": "578982563784476",
      "elapsedTime": "45369199",
      "asyncId": 2394,
      "triggerAsyncId": 2391,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2552
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1113
    },
    "1114": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982518696113",
      "endTime": "578982569323389",
      "elapsedTime": "50627276",
      "asyncId": 2395,
      "triggerAsyncId": 2390,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2396
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1114
    },
    "1115": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982519078169",
      "endTime": "578982563898500",
      "elapsedTime": "44820331",
      "asyncId": 2396,
      "triggerAsyncId": 2110,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2399,
        2399
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1115
    },
    "1116": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982519379093",
      "endTime": "578982519393861",
      "elapsedTime": "14768",
      "asyncId": 2397,
      "triggerAsyncId": 2110,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2398
      ],
      "uniqueid": 1116
    },
    "1117": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982520022980",
      "endTime": "578982567690127",
      "elapsedTime": "47667147",
      "asyncId": 2399,
      "triggerAsyncId": 2396,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2400,
        2402
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1117
    },
    "1118": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982520339413",
      "endTime": "578982563975895",
      "elapsedTime": "43636482",
      "asyncId": 2400,
      "triggerAsyncId": 2118,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2401,
        2403
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1118
    },
    "1119": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982559987007",
      "endTime": "578982560348254",
      "elapsedTime": "361247",
      "asyncId": 2401,
      "triggerAsyncId": 2400,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "triggers": [
        2402
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 1119
    },
    "1120": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560257675",
      "endTime": "578982560874961",
      "elapsedTime": "617286",
      "asyncId": 2402,
      "triggerAsyncId": 2399,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2534
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1120
    },
    "1121": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982521219704",
      "endTime": "578982567739430",
      "elapsedTime": "46519726",
      "asyncId": 2403,
      "triggerAsyncId": 2400,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2404
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1121
    },
    "1122": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560818015",
      "endTime": "578982560958298",
      "elapsedTime": "140283",
      "asyncId": 2404,
      "triggerAsyncId": 2403,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2407
      ],
      "uniqueid": 1122
    },
    "1123": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982562040196",
      "endTime": "578982574032457",
      "elapsedTime": "11992261",
      "asyncId": 2405,
      "triggerAsyncId": 1893,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        2406,
        2413
      ],
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1123
    },
    "1124": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982562452138",
      "endTime": "578982562465433",
      "elapsedTime": "13295",
      "asyncId": 2406,
      "triggerAsyncId": 1893,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1124
    },
    "1125": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982522254313",
      "endTime": "578982564062247",
      "elapsedTime": "41807934",
      "asyncId": 2407,
      "triggerAsyncId": 2404,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1125
    },
    "1126": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982563108379",
      "endTime": "578982563121473",
      "elapsedTime": "13094",
      "asyncId": 2408,
      "triggerAsyncId": 1893,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2411,
        2409,
        2409
      ],
      "uniqueid": 1126
    },
    "1127": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982563495164",
      "endTime": "578982567604587",
      "elapsedTime": "4109423",
      "asyncId": 2409,
      "triggerAsyncId": 2408,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2410,
        2416,
        2419,
        2417,
        2421,
        2427,
        2410,
        2410
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1127
    },
    "1128": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982563780067",
      "endTime": "578982573946516",
      "elapsedTime": "10166449",
      "asyncId": 2410,
      "triggerAsyncId": 2409,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2431,
        2437,
        2430,
        2429,
        2428,
        2435,
        2439,
        2445,
        2411
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1128
    },
    "1129": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982564051737",
      "endTime": "578982574058926",
      "elapsedTime": "10007189",
      "asyncId": 2411,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1129
    },
    "1130": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982564245961",
      "endTime": "578982574085446",
      "elapsedTime": "9839485",
      "asyncId": 2412,
      "triggerAsyncId": 1893,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        2415
      ],
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1130
    },
    "1131": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982564710602",
      "endTime": "578982564723416",
      "elapsedTime": "12814",
      "asyncId": 2414,
      "triggerAsyncId": 1893,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1131
    },
    "1132": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982527080330",
      "endTime": "578982564153598",
      "elapsedTime": "37073268",
      "asyncId": 2415,
      "triggerAsyncId": 2412,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1132
    },
    "1133": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982527475310",
      "endTime": "578982567867049",
      "elapsedTime": "40391739",
      "asyncId": 2416,
      "triggerAsyncId": 2152,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2418,
        2421
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1133
    },
    "1134": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982565509710",
      "endTime": "578982567083721",
      "elapsedTime": "1574011",
      "asyncId": 2417,
      "triggerAsyncId": 2409,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "triggers": [
        2420,
        2423
      ],
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1134
    },
    "1135": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982565867120",
      "endTime": "578982565880264",
      "elapsedTime": "13144",
      "asyncId": 2419,
      "triggerAsyncId": 2409,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1135
    },
    "1136": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982528991583",
      "endTime": "578982564820959",
      "elapsedTime": "35829376",
      "asyncId": 2420,
      "triggerAsyncId": 2417,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2554
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1136
    },
    "1137": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982529298058",
      "endTime": "578982569467940",
      "elapsedTime": "40169882",
      "asyncId": 2421,
      "triggerAsyncId": 2416,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1137
    },
    "1138": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982529624349",
      "endTime": "578982559882762",
      "elapsedTime": "30258413",
      "asyncId": 2422,
      "triggerAsyncId": 2158,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2425
      ],
      "uniqueid": 1138
    },
    "1139": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982566645359",
      "endTime": "578982567550426",
      "elapsedTime": "905067",
      "asyncId": 2423,
      "triggerAsyncId": 2417,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2424
      ],
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "uniqueid": 1139
    },
    "1140": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982530311026",
      "endTime": "578982559906205",
      "elapsedTime": "29595179",
      "asyncId": 2424,
      "triggerAsyncId": 2423,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1140
    },
    "1141": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982530898398",
      "endTime": "578982559934549",
      "elapsedTime": "29036151",
      "asyncId": 2426,
      "triggerAsyncId": 2162,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2429
      ],
      "uniqueid": 1141
    },
    "1142": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982567856259",
      "endTime": "578982573789130",
      "elapsedTime": "5932871",
      "asyncId": 2428,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2436
      ],
      "uniqueid": 1142
    },
    "1143": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982568252391",
      "endTime": "578982573738526",
      "elapsedTime": "5486135",
      "asyncId": 2429,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2434
      ],
      "uniqueid": 1143
    },
    "1144": {
      "source": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts:239:34:239:34",
      "startTime": "578982569382750",
      "endTime": "578982573552487",
      "elapsedTime": "4169737",
      "asyncId": 2430,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2536,
        2442,
        2450,
        2433
      ],
      "line": "\n        : null;\n    try {\n      const line = await service.save(\n        mockEntityManager,\n        {\n          narration: ''",
      "startLine": 239,
      "startCol": 34,
      "endLine": 239,
      "endCol": 34,
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "uniqueid": 1144
    },
    "1145": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578982569705315",
      "endTime": "578982569721335",
      "elapsedTime": "16020",
      "asyncId": 2431,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        2432
      ],
      "uniqueid": 1145
    },
    "1146": {
      "source": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts:239:34:239:34",
      "startTime": "578982570023632",
      "endTime": "578982571870694",
      "elapsedTime": "1847062",
      "asyncId": 2432,
      "triggerAsyncId": 2431,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2537
      ],
      "line": "\n        : null;\n    try {\n      const line = await service.save(\n        mockEntityManager,\n        {\n          narration: ''",
      "startLine": 239,
      "startCol": 34,
      "endLine": 239,
      "endCol": 34,
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "uniqueid": 1146
    },
    "1147": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982570251850",
      "endTime": "578982573765827",
      "elapsedTime": "3513977",
      "asyncId": 2433,
      "triggerAsyncId": 2430,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1147
    },
    "1148": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982570447887",
      "endTime": "578982573812154",
      "elapsedTime": "3364267",
      "asyncId": 2434,
      "triggerAsyncId": 2429,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "triggers": [
        2538
      ],
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 1148
    },
    "1149": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982570601755",
      "endTime": "578982573837591",
      "elapsedTime": "3235836",
      "asyncId": 2435,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2441
      ],
      "uniqueid": 1149
    },
    "1150": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982570892420",
      "endTime": "578982570903451",
      "elapsedTime": "11031",
      "asyncId": 2437,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1150
    },
    "1151": {
      "source": "node_modules/@nestjs/core/injector/injector.js:145:21:145:21",
      "startTime": "578982534189878",
      "endTime": "578982534203563",
      "elapsedTime": "13685",
      "asyncId": 2438,
      "triggerAsyncId": 2195,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer)",
      "startLine": 145,
      "startCol": 21,
      "endLine": 145,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2540
      ],
      "uniqueid": 1151
    },
    "1152": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982571235644",
      "endTime": "578982573889158",
      "elapsedTime": "2653514",
      "asyncId": 2439,
      "triggerAsyncId": 2410,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1152
    },
    "1153": {
      "source": "node_modules/@nestjs/core/injector/injector.js:145:21:145:21",
      "startTime": "578982534577434",
      "endTime": "578982534592463",
      "elapsedTime": "15029",
      "asyncId": 2440,
      "triggerAsyncId": 2201,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer)",
      "startLine": 145,
      "startCol": 21,
      "endLine": 145,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2541
      ],
      "uniqueid": 1153
    },
    "1154": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982571434797",
      "endTime": "578982573911891",
      "elapsedTime": "2477094",
      "asyncId": 2441,
      "triggerAsyncId": 2435,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1154
    },
    "1155": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982571654429",
      "endTime": "578982571832442",
      "elapsedTime": "178013",
      "asyncId": 2442,
      "triggerAsyncId": 2430,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2542,
        2443
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1155
    },
    "1156": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982571821312",
      "endTime": "578982572971418",
      "elapsedTime": "1150106",
      "asyncId": 2443,
      "triggerAsyncId": 2442,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2446
      ],
      "uniqueid": 1156
    },
    "1157": {
      "source": "node_modules/@nestjs/core/injector/injector.js:145:21:145:21",
      "startTime": "578982535366113",
      "endTime": "578982535383746",
      "elapsedTime": "17633",
      "asyncId": 2444,
      "triggerAsyncId": 2213,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer)",
      "startLine": 145,
      "startCol": 21,
      "endLine": 145,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2543
      ],
      "uniqueid": 1157
    },
    "1158": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982572335716",
      "endTime": "578982573063140",
      "elapsedTime": "727424",
      "asyncId": 2446,
      "triggerAsyncId": 2443,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "triggers": [
        2544,
        2447,
        2449
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 1158
    },
    "1159": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982572573291",
      "endTime": "578982572768678",
      "elapsedTime": "195387",
      "asyncId": 2447,
      "triggerAsyncId": 2446,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        2448
      ],
      "uniqueid": 1159
    },
    "1160": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982572758148",
      "endTime": "578982573092054",
      "elapsedTime": "333906",
      "asyncId": 2448,
      "triggerAsyncId": 2447,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceLineService.save",
      "userCode": false,
      "triggers": [
        2545
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 1160
    },
    "1161": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982572958393",
      "endTime": "578982573527290",
      "elapsedTime": "568897",
      "asyncId": 2449,
      "triggerAsyncId": 2446,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1161
    },
    "1162": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982573304502",
      "endTime": "578982573493927",
      "elapsedTime": "189425",
      "asyncId": 2450,
      "triggerAsyncId": 2430,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2546,
        2451
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1162
    },
    "1163": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982573481805",
      "endTime": "578982573576242",
      "elapsedTime": "94437",
      "asyncId": 2451,
      "triggerAsyncId": 2450,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1163
    },
    "1164": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982575705162",
      "endTime": "578982576020954",
      "elapsedTime": "315792",
      "asyncId": 2452,
      "triggerAsyncId": 38,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2547
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1164
    },
    "1165": {
      "source": "node_modules/jest-runner/build/runTest.js:442:12:442:12",
      "startTime": "578982576633322",
      "endTime": "578982578332327",
      "elapsedTime": "1699005",
      "asyncId": 2453,
      "triggerAsyncId": 1882,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    } // Delay the resolution to allow log messages to be output.\n\n    return new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector",
      "startLine": 442,
      "startCol": 12,
      "endLine": 442,
      "endCol": 12,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        2457
      ],
      "uniqueid": 1165
    },
    "1166": {
      "source": "node_modules/@nestjs/core/injector/injector.js:145:21:145:21",
      "startTime": "578982537119570",
      "endTime": "578982537136341",
      "elapsedTime": "16771",
      "asyncId": 2454,
      "triggerAsyncId": 2243,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveComponentInstance",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer)",
      "startLine": 145,
      "startCol": 21,
      "endLine": 145,
      "endCol": 21,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2548
      ],
      "uniqueid": 1166
    },
    "1167": {
      "source": "node_modules/jest-runner/build/runTest.js:453:23:453:23",
      "startTime": "578982577072436",
      "endTime": "578982577162093",
      "elapsedTime": "89657",
      "asyncId": 2455,
      "triggerAsyncId": 1882,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    var _runtime$teardown;\n\n    await environment.teardown(); // TODO: this function might be missing, remove ? in Jest 26\n\n    (_runtime$teardown = runtime.teardown) === null ||\n    _runtime$teardown === void ",
      "startLine": 453,
      "startCol": 23,
      "endLine": 453,
      "endCol": 23,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        2456
      ],
      "uniqueid": 1167
    },
    "1168": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982577347832",
      "endTime": "578982577806492",
      "elapsedTime": "458660",
      "asyncId": 2456,
      "triggerAsyncId": 2455,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2549
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1168
    },
    "1169": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982577951764",
      "endTime": "578982578386889",
      "elapsedTime": "435125",
      "asyncId": 2457,
      "triggerAsyncId": 2453,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1169
    },
    "1170": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982537903670",
      "endTime": "578982561464998",
      "elapsedTime": "23561328",
      "asyncId": 2458,
      "triggerAsyncId": 2272,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2461
      ],
      "uniqueid": 1170
    },
    "1171": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982538175810",
      "endTime": "578982538194885",
      "elapsedTime": "19075",
      "asyncId": 2459,
      "triggerAsyncId": 2272,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2460
      ],
      "uniqueid": 1171
    },
    "1172": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982538455113",
      "endTime": "578982561498360",
      "elapsedTime": "23043247",
      "asyncId": 2460,
      "triggerAsyncId": 2459,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1172
    },
    "1173": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982538683431",
      "endTime": "578982565886466",
      "elapsedTime": "27203035",
      "asyncId": 2461,
      "triggerAsyncId": 2458,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1173
    },
    "1174": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982538965380",
      "endTime": "578982561525581",
      "elapsedTime": "22560201",
      "asyncId": 2462,
      "triggerAsyncId": 2276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2465
      ],
      "uniqueid": 1174
    },
    "1175": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982539223433",
      "endTime": "578982539240315",
      "elapsedTime": "16882",
      "asyncId": 2463,
      "triggerAsyncId": 2276,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2464
      ],
      "uniqueid": 1175
    },
    "1176": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982539493660",
      "endTime": "578982561546891",
      "elapsedTime": "22053231",
      "asyncId": 2464,
      "triggerAsyncId": 2463,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1176
    },
    "1177": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982539723771",
      "endTime": "578982565950306",
      "elapsedTime": "26226535",
      "asyncId": 2465,
      "triggerAsyncId": 2462,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1177
    },
    "1178": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982540009207",
      "endTime": "578982561571658",
      "elapsedTime": "21562451",
      "asyncId": 2466,
      "triggerAsyncId": 2280,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2469
      ],
      "uniqueid": 1178
    },
    "1179": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982540257973",
      "endTime": "578982540270396",
      "elapsedTime": "12423",
      "asyncId": 2467,
      "triggerAsyncId": 2280,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2468
      ],
      "uniqueid": 1179
    },
    "1180": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982540529111",
      "endTime": "578982561603928",
      "elapsedTime": "21074817",
      "asyncId": 2468,
      "triggerAsyncId": 2467,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1180
    },
    "1181": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982540748042",
      "endTime": "578982565999137",
      "elapsedTime": "25251095",
      "asyncId": 2469,
      "triggerAsyncId": 2466,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1181
    },
    "1182": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982541030712",
      "endTime": "578982561638012",
      "elapsedTime": "20607300",
      "asyncId": 2470,
      "triggerAsyncId": 2284,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2473
      ],
      "uniqueid": 1182
    },
    "1183": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982541281602",
      "endTime": "578982541294356",
      "elapsedTime": "12754",
      "asyncId": 2471,
      "triggerAsyncId": 2284,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2472
      ],
      "uniqueid": 1183
    },
    "1184": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982541555455",
      "endTime": "578982561673048",
      "elapsedTime": "20117593",
      "asyncId": 2472,
      "triggerAsyncId": 2471,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1184
    },
    "1185": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982541786889",
      "endTime": "578982566057567",
      "elapsedTime": "24270678",
      "asyncId": 2473,
      "triggerAsyncId": 2470,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1185
    },
    "1186": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982542077985",
      "endTime": "578982561706220",
      "elapsedTime": "19628235",
      "asyncId": 2474,
      "triggerAsyncId": 2288,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2477
      ],
      "uniqueid": 1186
    },
    "1187": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982542328765",
      "endTime": "578982542341238",
      "elapsedTime": "12473",
      "asyncId": 2475,
      "triggerAsyncId": 2288,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2476
      ],
      "uniqueid": 1187
    },
    "1188": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982542601466",
      "endTime": "578982561731367",
      "elapsedTime": "19129901",
      "asyncId": 2476,
      "triggerAsyncId": 2475,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1188
    },
    "1189": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982542860391",
      "endTime": "578982566109184",
      "elapsedTime": "23248793",
      "asyncId": 2477,
      "triggerAsyncId": 2474,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1189
    },
    "1190": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982543173789",
      "endTime": "578982561759189",
      "elapsedTime": "18585400",
      "asyncId": 2478,
      "triggerAsyncId": 2292,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2481
      ],
      "uniqueid": 1190
    },
    "1191": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982543425691",
      "endTime": "578982543440709",
      "elapsedTime": "15018",
      "asyncId": 2479,
      "triggerAsyncId": 2292,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2480
      ],
      "uniqueid": 1191
    },
    "1192": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982543711617",
      "endTime": "578982561787162",
      "elapsedTime": "18075545",
      "asyncId": 2480,
      "triggerAsyncId": 2479,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1192
    },
    "1193": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982543977876",
      "endTime": "578982566164217",
      "elapsedTime": "22186341",
      "asyncId": 2481,
      "triggerAsyncId": 2478,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1193
    },
    "1194": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982544258633",
      "endTime": "578982561811948",
      "elapsedTime": "17553315",
      "asyncId": 2482,
      "triggerAsyncId": 2296,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2485
      ],
      "uniqueid": 1194
    },
    "1195": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982544502951",
      "endTime": "578982544524000",
      "elapsedTime": "21049",
      "asyncId": 2483,
      "triggerAsyncId": 2296,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2484
      ],
      "uniqueid": 1195
    },
    "1196": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982544781944",
      "endTime": "578982561838598",
      "elapsedTime": "17056654",
      "asyncId": 2484,
      "triggerAsyncId": 2483,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1196
    },
    "1197": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982545008328",
      "endTime": "578982566208800",
      "elapsedTime": "21200472",
      "asyncId": 2485,
      "triggerAsyncId": 2482,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1197
    },
    "1198": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982545279386",
      "endTime": "578982561865999",
      "elapsedTime": "16586613",
      "asyncId": 2486,
      "triggerAsyncId": 2300,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2489
      ],
      "uniqueid": 1198
    },
    "1199": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982545537360",
      "endTime": "578982545549873",
      "elapsedTime": "12513",
      "asyncId": 2487,
      "triggerAsyncId": 2300,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2488
      ],
      "uniqueid": 1199
    },
    "1200": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982545828165",
      "endTime": "578982561887550",
      "elapsedTime": "16059385",
      "asyncId": 2488,
      "triggerAsyncId": 2487,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1200
    },
    "1201": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982546096097",
      "endTime": "578982566252452",
      "elapsedTime": "20156355",
      "asyncId": 2489,
      "triggerAsyncId": 2486,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1201
    },
    "1202": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982546366554",
      "endTime": "578982561908429",
      "elapsedTime": "15541875",
      "asyncId": 2490,
      "triggerAsyncId": 2304,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2493
      ],
      "uniqueid": 1202
    },
    "1203": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982546607566",
      "endTime": "578982546622554",
      "elapsedTime": "14988",
      "asyncId": 2491,
      "triggerAsyncId": 2304,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2492
      ],
      "uniqueid": 1203
    },
    "1204": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982546885056",
      "endTime": "578982561928767",
      "elapsedTime": "15043711",
      "asyncId": 2492,
      "triggerAsyncId": 2491,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1204
    },
    "1205": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982547137129",
      "endTime": "578982566295302",
      "elapsedTime": "19158173",
      "asyncId": 2493,
      "triggerAsyncId": 2490,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1205
    },
    "1206": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982547413737",
      "endTime": "578982561949796",
      "elapsedTime": "14536059",
      "asyncId": 2494,
      "triggerAsyncId": 2308,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2497
      ],
      "uniqueid": 1206
    },
    "1207": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982547663606",
      "endTime": "578982547676069",
      "elapsedTime": "12463",
      "asyncId": 2495,
      "triggerAsyncId": 2308,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2496
      ],
      "uniqueid": 1207
    },
    "1208": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982547938080",
      "endTime": "578982561973280",
      "elapsedTime": "14035200",
      "asyncId": 2496,
      "triggerAsyncId": 2495,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1208
    },
    "1209": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982548164695",
      "endTime": "578982566344886",
      "elapsedTime": "18180191",
      "asyncId": 2497,
      "triggerAsyncId": 2494,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1209
    },
    "1210": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982548441353",
      "endTime": "578982561999590",
      "elapsedTime": "13558237",
      "asyncId": 2498,
      "triggerAsyncId": 2312,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2501
      ],
      "uniqueid": 1210
    },
    "1211": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982548695450",
      "endTime": "578982548711680",
      "elapsedTime": "16230",
      "asyncId": 2499,
      "triggerAsyncId": 2312,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2500
      ],
      "uniqueid": 1211
    },
    "1212": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982548975485",
      "endTime": "578982562042029",
      "elapsedTime": "13066544",
      "asyncId": 2500,
      "triggerAsyncId": 2499,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1212
    },
    "1213": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982549214182",
      "endTime": "578982566394639",
      "elapsedTime": "17180457",
      "asyncId": 2501,
      "triggerAsyncId": 2498,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1213
    },
    "1214": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982549510438",
      "endTime": "578982562064261",
      "elapsedTime": "12553823",
      "asyncId": 2502,
      "triggerAsyncId": 2316,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2505
      ],
      "uniqueid": 1214
    },
    "1215": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982549752582",
      "endTime": "578982549768602",
      "elapsedTime": "16020",
      "asyncId": 2503,
      "triggerAsyncId": 2316,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2504
      ],
      "uniqueid": 1215
    },
    "1216": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982550079524",
      "endTime": "578982562084680",
      "elapsedTime": "12005156",
      "asyncId": 2504,
      "triggerAsyncId": 2503,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1216
    },
    "1217": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982550309305",
      "endTime": "578982566441016",
      "elapsedTime": "16131711",
      "asyncId": 2505,
      "triggerAsyncId": 2502,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1217
    },
    "1218": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982550608917",
      "endTime": "578982569103026",
      "elapsedTime": "18494109",
      "asyncId": 2506,
      "triggerAsyncId": 2322,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2511
      ],
      "uniqueid": 1218
    },
    "1219": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982550895294",
      "endTime": "578982562110528",
      "elapsedTime": "11215234",
      "asyncId": 2507,
      "triggerAsyncId": 2322,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2510
      ],
      "uniqueid": 1219
    },
    "1220": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578982551176711",
      "endTime": "578982551191990",
      "elapsedTime": "15279",
      "asyncId": 2508,
      "triggerAsyncId": 2322,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2509
      ],
      "uniqueid": 1220
    },
    "1221": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982551498003",
      "endTime": "578982562137268",
      "elapsedTime": "10639265",
      "asyncId": 2509,
      "triggerAsyncId": 2508,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1221
    },
    "1222": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982551767118",
      "endTime": "578982567088169",
      "elapsedTime": "15321051",
      "asyncId": 2510,
      "triggerAsyncId": 2507,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2556
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1222
    },
    "1223": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982552024851",
      "endTime": "578982570193210",
      "elapsedTime": "18168359",
      "asyncId": 2511,
      "triggerAsyncId": 2506,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1223
    },
    "1224": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982552299156",
      "endTime": "578982562161113",
      "elapsedTime": "9861957",
      "asyncId": 2512,
      "triggerAsyncId": 2328,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2515
      ],
      "uniqueid": 1224
    },
    "1225": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982552548252",
      "endTime": "578982552566917",
      "elapsedTime": "18665",
      "asyncId": 2513,
      "triggerAsyncId": 2328,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2514
      ],
      "uniqueid": 1225
    },
    "1226": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982552828287",
      "endTime": "578982562182102",
      "elapsedTime": "9353815",
      "asyncId": 2514,
      "triggerAsyncId": 2513,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1226
    },
    "1227": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982553067877",
      "endTime": "578982567160455",
      "elapsedTime": "14092578",
      "asyncId": 2515,
      "triggerAsyncId": 2512,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1227
    },
    "1228": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982553346308",
      "endTime": "578982562203242",
      "elapsedTime": "8856934",
      "asyncId": 2516,
      "triggerAsyncId": 2332,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2519
      ],
      "uniqueid": 1228
    },
    "1229": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982553597049",
      "endTime": "578982553613349",
      "elapsedTime": "16300",
      "asyncId": 2517,
      "triggerAsyncId": 2332,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2518
      ],
      "uniqueid": 1229
    },
    "1230": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982553904345",
      "endTime": "578982562224071",
      "elapsedTime": "8319726",
      "asyncId": 2518,
      "triggerAsyncId": 2517,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1230
    },
    "1231": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982554598045",
      "endTime": "578982567208494",
      "elapsedTime": "12610449",
      "asyncId": 2519,
      "triggerAsyncId": 2516,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1231
    },
    "1232": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982554870596",
      "endTime": "578982562245281",
      "elapsedTime": "7374685",
      "asyncId": 2520,
      "triggerAsyncId": 2336,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2523
      ],
      "uniqueid": 1232
    },
    "1233": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982555126846",
      "endTime": "578982555139139",
      "elapsedTime": "12293",
      "asyncId": 2521,
      "triggerAsyncId": 2336,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2522
      ],
      "uniqueid": 1233
    },
    "1234": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982555393326",
      "endTime": "578982562266049",
      "elapsedTime": "6872723",
      "asyncId": 2522,
      "triggerAsyncId": 2521,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1234
    },
    "1235": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982555676917",
      "endTime": "578982567251806",
      "elapsedTime": "11574889",
      "asyncId": 2523,
      "triggerAsyncId": 2520,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1235
    },
    "1236": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982555942675",
      "endTime": "578982562287219",
      "elapsedTime": "6344544",
      "asyncId": 2524,
      "triggerAsyncId": 2340,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2527
      ],
      "uniqueid": 1236
    },
    "1237": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982556199216",
      "endTime": "578982556220657",
      "elapsedTime": "21441",
      "asyncId": 2525,
      "triggerAsyncId": 2340,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2526
      ],
      "uniqueid": 1237
    },
    "1238": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982556484061",
      "endTime": "578982562307908",
      "elapsedTime": "5823847",
      "asyncId": 2526,
      "triggerAsyncId": 2525,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1238
    },
    "1239": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982556716426",
      "endTime": "578982567306949",
      "elapsedTime": "10590523",
      "asyncId": 2527,
      "triggerAsyncId": 2524,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1239
    },
    "1240": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982556990630",
      "endTime": "578982562331191",
      "elapsedTime": "5340561",
      "asyncId": 2528,
      "triggerAsyncId": 2344,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2531
      ],
      "uniqueid": 1240
    },
    "1241": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982557250567",
      "endTime": "578982557263592",
      "elapsedTime": "13025",
      "asyncId": 2529,
      "triggerAsyncId": 2344,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2530
      ],
      "uniqueid": 1241
    },
    "1242": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982557519762",
      "endTime": "578982562357360",
      "elapsedTime": "4837598",
      "asyncId": 2530,
      "triggerAsyncId": 2529,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1242
    },
    "1243": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982557745004",
      "endTime": "578982567360379",
      "elapsedTime": "9615375",
      "asyncId": 2531,
      "triggerAsyncId": 2528,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1243
    },
    "1244": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982558461337",
      "endTime": "578982558682101",
      "elapsedTime": "220764",
      "asyncId": 2532,
      "triggerAsyncId": 2398,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2533
      ],
      "uniqueid": 1244
    },
    "1245": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982558993374",
      "endTime": "578982563920651",
      "elapsedTime": "4927277",
      "asyncId": 2533,
      "triggerAsyncId": 2532,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1245
    },
    "1246": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982559323353",
      "endTime": "578982559356104",
      "elapsedTime": "32751",
      "asyncId": 2534,
      "triggerAsyncId": 2402,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2535
      ],
      "uniqueid": 1246
    },
    "1247": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982559638023",
      "endTime": "578982564007614",
      "elapsedTime": "4369591",
      "asyncId": 2535,
      "triggerAsyncId": 2534,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1247
    },
    "1248": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560100580",
      "endTime": "578982565044257",
      "elapsedTime": "4943677",
      "asyncId": 2536,
      "triggerAsyncId": 2430,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1248
    },
    "1249": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560202431",
      "endTime": "578982565111062",
      "elapsedTime": "4908631",
      "asyncId": 2537,
      "triggerAsyncId": 2432,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1249
    },
    "1250": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560312988",
      "endTime": "578982565166437",
      "elapsedTime": "4853449",
      "asyncId": 2538,
      "triggerAsyncId": 2434,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1250
    },
    "1251": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560421171",
      "endTime": "578982565221570",
      "elapsedTime": "4800399",
      "asyncId": 2539,
      "triggerAsyncId": 2436,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1251
    },
    "1252": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560518453",
      "endTime": "578982565284578",
      "elapsedTime": "4766125",
      "asyncId": 2540,
      "triggerAsyncId": 2438,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1252
    },
    "1253": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560624061",
      "endTime": "578982565355771",
      "elapsedTime": "4731710",
      "asyncId": 2541,
      "triggerAsyncId": 2440,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1253
    },
    "1254": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560722736",
      "endTime": "578982565416565",
      "elapsedTime": "4693829",
      "asyncId": 2542,
      "triggerAsyncId": 2442,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1254
    },
    "1255": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560824898",
      "endTime": "578982565479183",
      "elapsedTime": "4654285",
      "asyncId": 2543,
      "triggerAsyncId": 2444,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1255
    },
    "1256": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982560933672",
      "endTime": "578982565542522",
      "elapsedTime": "4608850",
      "asyncId": 2544,
      "triggerAsyncId": 2446,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1256
    },
    "1257": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982561039610",
      "endTime": "578982565596933",
      "elapsedTime": "4557323",
      "asyncId": 2545,
      "triggerAsyncId": 2448,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1257
    },
    "1258": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982561136412",
      "endTime": "578982565651015",
      "elapsedTime": "4514603",
      "asyncId": 2546,
      "triggerAsyncId": 2450,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1258
    },
    "1259": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982561238603",
      "endTime": "578982565713522",
      "elapsedTime": "4474919",
      "asyncId": 2547,
      "triggerAsyncId": 2452,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1259
    },
    "1260": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982561345524",
      "endTime": "578982565771040",
      "elapsedTime": "4425516",
      "asyncId": 2548,
      "triggerAsyncId": 2454,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1260
    },
    "1261": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982561449759",
      "endTime": "578982565830341",
      "elapsedTime": "4380582",
      "asyncId": 2549,
      "triggerAsyncId": 2456,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1261
    },
    "1262": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982562647985",
      "endTime": "578982562701035",
      "elapsedTime": "53050",
      "asyncId": 2550,
      "triggerAsyncId": 2380,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2551
      ],
      "uniqueid": 1262
    },
    "1263": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982562983244",
      "endTime": "578982567466859",
      "elapsedTime": "4483615",
      "asyncId": 2551,
      "triggerAsyncId": 2550,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1263
    },
    "1264": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982563427286",
      "endTime": "578982563474525",
      "elapsedTime": "47239",
      "asyncId": 2552,
      "triggerAsyncId": 2394,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2553
      ],
      "uniqueid": 1264
    },
    "1265": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982563762234",
      "endTime": "578982567626408",
      "elapsedTime": "3864174",
      "asyncId": 2553,
      "triggerAsyncId": 2552,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1265
    },
    "1266": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982564448771",
      "endTime": "578982564510587",
      "elapsedTime": "61816",
      "asyncId": 2554,
      "triggerAsyncId": 2420,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2555
      ],
      "uniqueid": 1266
    },
    "1267": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982564805670",
      "endTime": "578982567889862",
      "elapsedTime": "3084192",
      "asyncId": 2555,
      "triggerAsyncId": 2554,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1267
    },
    "1268": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982566738223",
      "endTime": "578982566771215",
      "elapsedTime": "32992",
      "asyncId": 2556,
      "triggerAsyncId": 2510,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2557
      ],
      "uniqueid": 1268
    },
    "1269": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982567071397",
      "endTime": "578982569124867",
      "elapsedTime": "2053470",
      "asyncId": 2557,
      "triggerAsyncId": 2556,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1269
    },
    "1270": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982570564045",
      "endTime": "578982577635200",
      "elapsedTime": "7071155",
      "asyncId": 2558,
      "triggerAsyncId": 2112,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2561
      ],
      "uniqueid": 1270
    },
    "1271": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982570823862",
      "endTime": "578982570839421",
      "elapsedTime": "15559",
      "asyncId": 2559,
      "triggerAsyncId": 2112,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2560
      ],
      "uniqueid": 1271
    },
    "1272": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982571128453",
      "endTime": "578982577659216",
      "elapsedTime": "6530763",
      "asyncId": 2560,
      "triggerAsyncId": 2559,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1272
    },
    "1273": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982571345269",
      "endTime": "578982581591327",
      "elapsedTime": "10246058",
      "asyncId": 2561,
      "triggerAsyncId": 2558,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1273
    },
    "1274": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982571619033",
      "endTime": "578982577681687",
      "elapsedTime": "6062654",
      "asyncId": 2562,
      "triggerAsyncId": 2120,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2565
      ],
      "uniqueid": 1274
    },
    "1275": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982574279239",
      "endTime": "578982574297063",
      "elapsedTime": "17824",
      "asyncId": 2563,
      "triggerAsyncId": 2120,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2564
      ],
      "uniqueid": 1275
    },
    "1276": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982574619798",
      "endTime": "578982577703368",
      "elapsedTime": "3083570",
      "asyncId": 2564,
      "triggerAsyncId": 2563,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1276
    },
    "1277": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982574912396",
      "endTime": "578982581644046",
      "elapsedTime": "6731650",
      "asyncId": 2565,
      "triggerAsyncId": 2562,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1277
    },
    "1278": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982575784431",
      "endTime": "578982581445623",
      "elapsedTime": "5661192",
      "asyncId": 2566,
      "triggerAsyncId": 2088,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2569
      ],
      "uniqueid": 1278
    },
    "1279": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982576060018",
      "endTime": "578982576074655",
      "elapsedTime": "14637",
      "asyncId": 2567,
      "triggerAsyncId": 2088,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2568
      ],
      "uniqueid": 1279
    },
    "1280": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982576330174",
      "endTime": "578982581474658",
      "elapsedTime": "5144484",
      "asyncId": 2568,
      "triggerAsyncId": 2567,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1280
    },
    "1281": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982576554514",
      "endTime": "578982581868707",
      "elapsedTime": "5314193",
      "asyncId": 2569,
      "triggerAsyncId": 2566,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1281
    },
    "1282": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982576826234",
      "endTime": "578982581509153",
      "elapsedTime": "4682919",
      "asyncId": 2570,
      "triggerAsyncId": 2104,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2573
      ],
      "uniqueid": 1282
    },
    "1283": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982577094306",
      "endTime": "578982577106540",
      "elapsedTime": "12234",
      "asyncId": 2571,
      "triggerAsyncId": 2104,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2572
      ],
      "uniqueid": 1283
    },
    "1284": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982577368641",
      "endTime": "578982581538848",
      "elapsedTime": "4170207",
      "asyncId": 2572,
      "triggerAsyncId": 2571,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1284
    },
    "1285": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982577588493",
      "endTime": "578982581930082",
      "elapsedTime": "4341589",
      "asyncId": 2573,
      "triggerAsyncId": 2570,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1285
    },
    "1286": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982577967433",
      "endTime": "578982581675985",
      "elapsedTime": "3708552",
      "asyncId": 2574,
      "triggerAsyncId": 2154,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2577
      ],
      "uniqueid": 1286
    },
    "1287": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982578212312",
      "endTime": "578982578224876",
      "elapsedTime": "12564",
      "asyncId": 2575,
      "triggerAsyncId": 2154,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2576
      ],
      "uniqueid": 1287
    },
    "1288": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982578476578",
      "endTime": "578982581700952",
      "elapsedTime": "3224374",
      "asyncId": 2576,
      "triggerAsyncId": 2575,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1288
    },
    "1289": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982578697342",
      "endTime": "578982582031021",
      "elapsedTime": "3333679",
      "asyncId": 2577,
      "triggerAsyncId": 2574,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1289
    },
    "1290": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982578997394",
      "endTime": "578982583405177",
      "elapsedTime": "4407783",
      "asyncId": 2578,
      "triggerAsyncId": 2266,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2583
      ],
      "uniqueid": 1290
    },
    "1291": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982579279032",
      "endTime": "578982581725849",
      "elapsedTime": "2446817",
      "asyncId": 2579,
      "triggerAsyncId": 2266,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2582
      ],
      "uniqueid": 1291
    },
    "1292": {
      "source": "node_modules/@nestjs/core/injector/injector.js:235:41:235:41",
      "startTime": "578982579556512",
      "endTime": "578982579569396",
      "elapsedTime": "12884",
      "asyncId": 2580,
      "triggerAsyncId": 2266,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveProperties",
      "userCode": false,
      "line": "\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key",
      "startLine": 235,
      "startCol": 41,
      "endLine": 235,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2581
      ],
      "uniqueid": 1292
    },
    "1293": {
      "source": "node_modules/@nestjs/core/injector/injector.js:41:43:41:43",
      "startTime": "578982579859630",
      "endTime": "578982581750495",
      "elapsedTime": "1890865",
      "asyncId": 2581,
      "triggerAsyncId": 2580,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done()",
      "startLine": 41,
      "startCol": 43,
      "endLine": 41,
      "endCol": 43,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1293
    },
    "1294": {
      "source": "node_modules/@nestjs/core/injector/injector.js:114:30:114:30",
      "startTime": "578982580129446",
      "endTime": "578982583196025",
      "elapsedTime": "3066579",
      "asyncId": 2582,
      "triggerAsyncId": 2579,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.resolveConstructorParams",
      "userCode": false,
      "triggers": [
        2588
      ],
      "line": "\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || []",
      "startLine": 114,
      "startCol": 30,
      "endLine": 114,
      "endCol": 30,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "uniqueid": 1294
    },
    "1295": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982580368264",
      "endTime": "578982583553014",
      "elapsedTime": "3184750",
      "asyncId": 2583,
      "triggerAsyncId": 2578,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1295
    },
    "1296": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982580637408",
      "endTime": "578982581778357",
      "elapsedTime": "1140949",
      "asyncId": 2584,
      "triggerAsyncId": 2324,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2587
      ],
      "uniqueid": 1296
    },
    "1297": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982580880474",
      "endTime": "578982580893929",
      "elapsedTime": "13455",
      "asyncId": 2585,
      "triggerAsyncId": 2324,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2586
      ],
      "uniqueid": 1297
    },
    "1298": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982581167753",
      "endTime": "578982581807321",
      "elapsedTime": "639568",
      "asyncId": 2586,
      "triggerAsyncId": 2585,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1298
    },
    "1299": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982581392534",
      "endTime": "578982583250066",
      "elapsedTime": "1857532",
      "asyncId": 2587,
      "triggerAsyncId": 2584,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1299
    },
    "1300": {
      "source": "node_modules/@nestjs/core/injector/injector.js:42:41:42:41",
      "startTime": "578982582323128",
      "endTime": "578982582874582",
      "elapsedTime": "551454",
      "asyncId": 2588,
      "triggerAsyncId": 2582,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " callback",
      "userCode": false,
      "line": "\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        }",
      "startLine": 42,
      "startCol": 41,
      "endLine": 42,
      "endCol": 41,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2589
      ],
      "uniqueid": 1300
    },
    "1301": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982583183551",
      "endTime": "578982583427809",
      "elapsedTime": "244258",
      "asyncId": 2589,
      "triggerAsyncId": 2588,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1301
    },
    "1302": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578982583834101",
      "endTime": "578982584565492",
      "elapsedTime": "731391",
      "asyncId": 2590,
      "triggerAsyncId": 2144,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2593
      ],
      "uniqueid": 1302
    },
    "1303": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578982584052701",
      "endTime": "578982584064994",
      "elapsedTime": "12293",
      "asyncId": 2591,
      "triggerAsyncId": 2144,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2592
      ],
      "uniqueid": 1303
    },
    "1304": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578982584292170",
      "endTime": "578982584587132",
      "elapsedTime": "294962",
      "asyncId": 2592,
      "triggerAsyncId": 2591,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 1304
    },
    "1305": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982584477567",
      "endTime": "578982586509506",
      "elapsedTime": "2031939",
      "asyncId": 2593,
      "triggerAsyncId": 2590,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2599,
        2598
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1305
    },
    "1306": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982584834667",
      "endTime": "578982586537168",
      "elapsedTime": "1702501",
      "asyncId": 2594,
      "triggerAsyncId": 2268,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2597
      ],
      "uniqueid": 1306
    },
    "1307": {
      "source": "node_modules/@nestjs/core/injector/injector.js:313:23:313:23",
      "startTime": "578982585081129",
      "endTime": "578982585093332",
      "elapsedTime": "12203",
      "asyncId": 2595,
      "triggerAsyncId": 2268,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadEnhancersPerContext",
      "userCode": false,
      "line": "\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)))",
      "startLine": 313,
      "startCol": 23,
      "endLine": 313,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [
        2596
      ],
      "uniqueid": 1307
    },
    "1308": {
      "source": "node_modules/@nestjs/core/injector/injector.js:69:20:69:20",
      "startTime": "578982585337920",
      "endTime": "578982586562385",
      "elapsedTime": "1224465",
      "asyncId": 2596,
      "triggerAsyncId": 2595,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Injector.loadProvider",
      "userCode": false,
      "line": "\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done",
      "startLine": 69,
      "startCol": 20,
      "endLine": 69,
      "endCol": 20,
      "file": "node_modules/@nestjs/core/injector/injector.js",
      "triggers": [],
      "uniqueid": 1308
    },
    "1309": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982585559265",
      "endTime": "578982586659437",
      "elapsedTime": "1100172",
      "asyncId": 2597,
      "triggerAsyncId": 2594,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1309
    },
    "1310": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578982585850371",
      "endTime": "578982586591470",
      "elapsedTime": "741099",
      "asyncId": 2598,
      "triggerAsyncId": 2593,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2601
      ],
      "uniqueid": 1310
    },
    "1311": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578982586081213",
      "endTime": "578982586093937",
      "elapsedTime": "12724",
      "asyncId": 2599,
      "triggerAsyncId": 2593,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2600
      ],
      "uniqueid": 1311
    },
    "1312": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578982586312898",
      "endTime": "578982586614613",
      "elapsedTime": "301715",
      "asyncId": 2600,
      "triggerAsyncId": 2599,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 1312
    },
    "1313": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982586497253",
      "endTime": "578982586748755",
      "elapsedTime": "251502",
      "asyncId": 2601,
      "triggerAsyncId": 2598,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1313
    },
    "1314": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578982587138185",
      "endTime": "578982587833689",
      "elapsedTime": "695504",
      "asyncId": 2602,
      "triggerAsyncId": 2369,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2605
      ],
      "uniqueid": 1314
    },
    "1315": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:61:23:61:23",
      "startTime": "578982587357746",
      "endTime": "578982587373686",
      "elapsedTime": "15940",
      "asyncId": 2603,
      "triggerAsyncId": 2369,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfInjectables",
      "userCode": false,
      "line": "\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name",
      "startLine": 61,
      "startCol": 23,
      "endLine": 61,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2604
      ],
      "uniqueid": 1315
    },
    "1316": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:29:24:29:24",
      "startTime": "578982587605240",
      "endTime": "578982587856491",
      "elapsedTime": "251251",
      "asyncId": 2604,
      "triggerAsyncId": 2603,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &",
      "startLine": 29,
      "startCol": 24,
      "endLine": 29,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 1316
    },
    "1317": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982587790488",
      "endTime": "578982588718006",
      "elapsedTime": "927518",
      "asyncId": 2605,
      "triggerAsyncId": 2602,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2607,
        2606
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1317
    },
    "1318": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578982588078668",
      "endTime": "578982588746480",
      "elapsedTime": "667812",
      "asyncId": 2606,
      "triggerAsyncId": 2605,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2609
      ],
      "uniqueid": 1318
    },
    "1319": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:52:23:52:23",
      "startTime": "578982588284955",
      "endTime": "578982588297358",
      "elapsedTime": "12403",
      "asyncId": 2607,
      "triggerAsyncId": 2605,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " InstanceLoader.createInstancesOfControllers",
      "userCode": false,
      "line": "\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module",
      "startLine": 52,
      "startCol": 23,
      "endLine": 52,
      "endCol": 23,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [
        2608
      ],
      "uniqueid": 1319
    },
    "1320": {
      "source": "node_modules/@nestjs/core/injector/instance-loader.js:30:24:30:24",
      "startTime": "578982588518322",
      "endTime": "578982588769222",
      "elapsedTime": "250900",
      "asyncId": 2608,
      "triggerAsyncId": 2607,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`)",
      "startLine": 30,
      "startCol": 24,
      "endLine": 30,
      "endCol": 24,
      "file": "node_modules/@nestjs/core/injector/instance-loader.js",
      "triggers": [],
      "uniqueid": 1320
    },
    "1321": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982588705533",
      "endTime": "578982588970520",
      "elapsedTime": "264987",
      "asyncId": 2609,
      "triggerAsyncId": 2606,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1321
    },
    "1322": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982590363581",
      "endTime": "578982710021803",
      "elapsedTime": "119658222",
      "asyncId": 2610,
      "triggerAsyncId": 2011,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2626
      ],
      "uniqueid": 1322
    },
    "1323": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578982590541635",
      "endTime": "578982710052300",
      "elapsedTime": "119510665",
      "asyncId": 2611,
      "triggerAsyncId": 2011,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2623,
        2623
      ],
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1323
    },
    "1324": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982590850304",
      "endTime": "578982590862556",
      "elapsedTime": "12252",
      "asyncId": 2612,
      "triggerAsyncId": 2011,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1324
    },
    "1325": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982591322649",
      "endTime": "578982591333950",
      "elapsedTime": "11301",
      "asyncId": 2614,
      "triggerAsyncId": 2011,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2615,
        2615
      ],
      "uniqueid": 1325
    },
    "1326": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982591572778",
      "endTime": "578982608754827",
      "elapsedTime": "17182049",
      "asyncId": 2615,
      "triggerAsyncId": 2614,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2630,
        2632,
        2638,
        2629,
        2636,
        2652,
        2616,
        2616
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1326
    },
    "1327": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982591794473",
      "endTime": "578982618941123",
      "elapsedTime": "27146650",
      "asyncId": 2616,
      "triggerAsyncId": 2615,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2670,
        2672,
        2678,
        2669,
        2676,
        2689,
        2617,
        2617
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1327
    },
    "1328": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982592030967",
      "endTime": "578982631237934",
      "elapsedTime": "39206967",
      "asyncId": 2617,
      "triggerAsyncId": 2616,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2715,
        2717,
        2723,
        2714,
        2721,
        2734,
        2618,
        2618
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1328
    },
    "1329": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982592242032",
      "endTime": "578982640409387",
      "elapsedTime": "48167355",
      "asyncId": 2618,
      "triggerAsyncId": 2617,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2760,
        2762,
        2768,
        2759,
        2766,
        2779,
        2619,
        2619
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1329
    },
    "1330": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982592456885",
      "endTime": "578982657721440",
      "elapsedTime": "65264555",
      "asyncId": 2619,
      "triggerAsyncId": 2618,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2805,
        2807,
        2813,
        2804,
        2811,
        2824,
        2620,
        2620
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1330
    },
    "1331": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982592666358",
      "endTime": "578982674701912",
      "elapsedTime": "82035554",
      "asyncId": 2620,
      "triggerAsyncId": 2619,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2870,
        2872,
        2878,
        2869,
        2876,
        2889,
        2621,
        2621
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1331
    },
    "1332": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982592873817",
      "endTime": "578982690569868",
      "elapsedTime": "97696051",
      "asyncId": 2621,
      "triggerAsyncId": 2620,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2935,
        2937,
        2943,
        2934,
        2941,
        2954,
        2622,
        2622
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1332
    },
    "1333": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982593096765",
      "endTime": "578982709781713",
      "elapsedTime": "116684948",
      "asyncId": 2622,
      "triggerAsyncId": 2621,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        3006,
        3008,
        3014,
        3005,
        3012,
        3025,
        2640
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1333
    },
    "1334": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578982593278325",
      "endTime": "578982709835974",
      "elapsedTime": "116557649",
      "asyncId": 2623,
      "triggerAsyncId": 2611,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2624
      ],
      "uniqueid": 1334
    },
    "1335": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:45:12:45:12",
      "startTime": "578982593438676",
      "endTime": "578982710075022",
      "elapsedTime": "116636346",
      "asyncId": 2624,
      "triggerAsyncId": 2623,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve()",
      "startLine": 45,
      "startCol": 12,
      "endLine": 45,
      "endCol": 12,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1335
    },
    "1336": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982593614134",
      "endTime": "578982710098026",
      "elapsedTime": "116483892",
      "asyncId": 2625,
      "triggerAsyncId": 2011,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1336
    },
    "1337": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982593907755",
      "endTime": "578982593919537",
      "elapsedTime": "11782",
      "asyncId": 2627,
      "triggerAsyncId": 2011,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1337
    },
    "1338": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982594257240",
      "endTime": "578982608643920",
      "elapsedTime": "14386680",
      "asyncId": 2629,
      "triggerAsyncId": 2615,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2637
      ],
      "uniqueid": 1338
    },
    "1339": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982594811579",
      "endTime": "578982594824554",
      "elapsedTime": "12975",
      "asyncId": 2630,
      "triggerAsyncId": 2615,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1339
    },
    "1340": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982595281731",
      "endTime": "578982595293442",
      "elapsedTime": "11711",
      "asyncId": 2632,
      "triggerAsyncId": 2615,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2633,
        2633
      ],
      "uniqueid": 1340
    },
    "1341": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982595527662",
      "endTime": "578982598629116",
      "elapsedTime": "3101454",
      "asyncId": 2633,
      "triggerAsyncId": 2632,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2643,
        2646,
        2644,
        2648,
        2654,
        2634,
        2634
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1341
    },
    "1342": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982595742925",
      "endTime": "578982608158229",
      "elapsedTime": "12415304",
      "asyncId": 2634,
      "triggerAsyncId": 2633,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2657,
        2662,
        2656,
        2655,
        2660,
        2664,
        2668,
        2635
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1342
    },
    "1343": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982595924756",
      "endTime": "578982608675088",
      "elapsedTime": "12750332",
      "asyncId": 2635,
      "triggerAsyncId": 2634,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1343
    },
    "1344": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982596066251",
      "endTime": "578982608699604",
      "elapsedTime": "12633353",
      "asyncId": 2636,
      "triggerAsyncId": 2615,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1344
    },
    "1345": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982596321660",
      "endTime": "578982596332871",
      "elapsedTime": "11211",
      "asyncId": 2638,
      "triggerAsyncId": 2615,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1345
    },
    "1346": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982596617895",
      "endTime": "578982709857765",
      "elapsedTime": "113239870",
      "asyncId": 2640,
      "triggerAsyncId": 2622,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1346
    },
    "1347": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982596983972",
      "endTime": "578982597060826",
      "elapsedTime": "76854",
      "asyncId": 2643,
      "triggerAsyncId": 2633,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2645
      ],
      "uniqueid": 1347
    },
    "1348": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982597218010",
      "endTime": "578982598284780",
      "elapsedTime": "1066770",
      "asyncId": 2644,
      "triggerAsyncId": 2633,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2650
      ],
      "uniqueid": 1348
    },
    "1349": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982597473549",
      "endTime": "578982597484810",
      "elapsedTime": "11261",
      "asyncId": 2646,
      "triggerAsyncId": 2633,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1349
    },
    "1350": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982597805322",
      "endTime": "578982598567640",
      "elapsedTime": "762318",
      "asyncId": 2648,
      "triggerAsyncId": 2633,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1350
    },
    "1351": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982598008332",
      "endTime": "578982598594210",
      "elapsedTime": "585878",
      "asyncId": 2650,
      "triggerAsyncId": 2644,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1351
    },
    "1352": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982598794245",
      "endTime": "578982607981447",
      "elapsedTime": "9187202",
      "asyncId": 2655,
      "triggerAsyncId": 2634,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2661
      ],
      "uniqueid": 1352
    },
    "1353": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982599098526",
      "endTime": "578982607677127",
      "elapsedTime": "8578601",
      "asyncId": 2656,
      "triggerAsyncId": 2634,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2659
      ],
      "uniqueid": 1353
    },
    "1354": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:292:36:292:36",
      "startTime": "578982605388246",
      "endTime": "578982605401451",
      "elapsedTime": "13205",
      "asyncId": 2657,
      "triggerAsyncId": 2634,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n  describe('SalesInvoiceService', () => {\n    it('calculatePrices nothing returns null', async () => {\n      const result = await service.calculatePrices(null, null, null);\n      expect(result).toBeNull();\n    });\n    it('calculatePrices somelines return correct', async () => ",
      "startLine": 292,
      "startCol": 36,
      "endLine": 292,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [
        2658
      ],
      "uniqueid": 1354
    },
    "1355": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982605617596",
      "endTime": "578982607710870",
      "elapsedTime": "2093274",
      "asyncId": 2658,
      "triggerAsyncId": 2657,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1355
    },
    "1356": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982605778708",
      "endTime": "578982608013438",
      "elapsedTime": "2234730",
      "asyncId": 2659,
      "triggerAsyncId": 2656,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1356
    },
    "1357": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982605907339",
      "endTime": "578982608039957",
      "elapsedTime": "2132618",
      "asyncId": 2660,
      "triggerAsyncId": 2634,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2666
      ],
      "uniqueid": 1357
    },
    "1358": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982606173498",
      "endTime": "578982606185150",
      "elapsedTime": "11652",
      "asyncId": 2662,
      "triggerAsyncId": 2634,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1358
    },
    "1359": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982606505761",
      "endTime": "578982608096093",
      "elapsedTime": "1590332",
      "asyncId": 2664,
      "triggerAsyncId": 2634,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1359
    },
    "1360": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982606693924",
      "endTime": "578982608123364",
      "elapsedTime": "1429440",
      "asyncId": 2666,
      "triggerAsyncId": 2660,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1360
    },
    "1361": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982608959892",
      "endTime": "578982618837528",
      "elapsedTime": "9877636",
      "asyncId": 2669,
      "triggerAsyncId": 2616,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2677
      ],
      "uniqueid": 1361
    },
    "1362": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982609244315",
      "endTime": "578982609256648",
      "elapsedTime": "12333",
      "asyncId": 2670,
      "triggerAsyncId": 2616,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1362
    },
    "1363": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982609722010",
      "endTime": "578982609733783",
      "elapsedTime": "11773",
      "asyncId": 2672,
      "triggerAsyncId": 2616,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2673,
        2673
      ],
      "uniqueid": 1363
    },
    "1364": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982609982829",
      "endTime": "578982612748193",
      "elapsedTime": "2765364",
      "asyncId": 2673,
      "triggerAsyncId": 2672,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2680,
        2683,
        2681,
        2685,
        2691,
        2674,
        2674
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1364
    },
    "1365": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982610216267",
      "endTime": "578982618758871",
      "elapsedTime": "8542604",
      "asyncId": 2674,
      "triggerAsyncId": 2673,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2701,
        2694,
        2693,
        2692,
        2699,
        2703,
        2709,
        2675
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1365
    },
    "1366": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982610410171",
      "endTime": "578982618862515",
      "elapsedTime": "8452344",
      "asyncId": 2675,
      "triggerAsyncId": 2674,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1366
    },
    "1367": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982610553068",
      "endTime": "578982618885098",
      "elapsedTime": "8332030",
      "asyncId": 2676,
      "triggerAsyncId": 2616,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1367
    },
    "1368": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982610843112",
      "endTime": "578982610855094",
      "elapsedTime": "11982",
      "asyncId": 2678,
      "triggerAsyncId": 2616,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1368
    },
    "1369": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982611210581",
      "endTime": "578982611229015",
      "elapsedTime": "18434",
      "asyncId": 2680,
      "triggerAsyncId": 2673,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2682
      ],
      "uniqueid": 1369
    },
    "1370": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982611390007",
      "endTime": "578982612397105",
      "elapsedTime": "1007098",
      "asyncId": 2681,
      "triggerAsyncId": 2673,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2687
      ],
      "uniqueid": 1370
    },
    "1371": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982611649123",
      "endTime": "578982611660444",
      "elapsedTime": "11321",
      "asyncId": 2683,
      "triggerAsyncId": 2673,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1371
    },
    "1372": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982611951280",
      "endTime": "578982612686878",
      "elapsedTime": "735598",
      "asyncId": 2685,
      "triggerAsyncId": 2673,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1372
    },
    "1373": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982612137308",
      "endTime": "578982612713328",
      "elapsedTime": "576020",
      "asyncId": 2687,
      "triggerAsyncId": 2681,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1373
    },
    "1374": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982612922069",
      "endTime": "578982618586528",
      "elapsedTime": "5664459",
      "asyncId": 2692,
      "triggerAsyncId": 2674,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2700
      ],
      "uniqueid": 1374
    },
    "1375": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982613248451",
      "endTime": "578982618530994",
      "elapsedTime": "5282543",
      "asyncId": 2693,
      "triggerAsyncId": 2674,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2698
      ],
      "uniqueid": 1375
    },
    "1376": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:323:36:323:36",
      "startTime": "578982613533786",
      "endTime": "578982617399382",
      "elapsedTime": "3865596",
      "asyncId": 2694,
      "triggerAsyncId": 2674,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2695,
        2706,
        2710,
        2712,
        2697
      ],
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 323,
      "startCol": 36,
      "endLine": 323,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 1376
    },
    "1377": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:323:36:323:36",
      "startTime": "578982613804624",
      "endTime": "578982614034966",
      "elapsedTime": "230342",
      "asyncId": 2695,
      "triggerAsyncId": 2694,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 323,
      "startCol": 36,
      "endLine": 323,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [
        2696
      ],
      "uniqueid": 1377
    },
    "1378": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:323:36:323:36",
      "startTime": "578982614022793",
      "endTime": "578982615719183",
      "elapsedTime": "1696390",
      "asyncId": 2696,
      "triggerAsyncId": 2695,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 323,
      "startCol": 36,
      "endLine": 323,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [],
      "uniqueid": 1378
    },
    "1379": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982614244889",
      "endTime": "578982618562072",
      "elapsedTime": "4317183",
      "asyncId": 2697,
      "triggerAsyncId": 2694,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1379
    },
    "1380": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982614404167",
      "endTime": "578982618608700",
      "elapsedTime": "4204533",
      "asyncId": 2698,
      "triggerAsyncId": 2693,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1380
    },
    "1381": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982614531156",
      "endTime": "578982618630871",
      "elapsedTime": "4099715",
      "asyncId": 2699,
      "triggerAsyncId": 2674,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2705
      ],
      "uniqueid": 1381
    },
    "1382": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982614789169",
      "endTime": "578982614801252",
      "elapsedTime": "12083",
      "asyncId": 2701,
      "triggerAsyncId": 2674,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1382
    },
    "1383": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982615151238",
      "endTime": "578982618697977",
      "elapsedTime": "3546739",
      "asyncId": 2703,
      "triggerAsyncId": 2674,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1383
    },
    "1384": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982615334001",
      "endTime": "578982618722012",
      "elapsedTime": "3388011",
      "asyncId": 2705,
      "triggerAsyncId": 2699,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1384
    },
    "1385": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982615528786",
      "endTime": "578982615692553",
      "elapsedTime": "163767",
      "asyncId": 2706,
      "triggerAsyncId": 2694,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2707
      ],
      "uniqueid": 1385
    },
    "1386": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982615681201",
      "endTime": "578982616890168",
      "elapsedTime": "1208967",
      "asyncId": 2707,
      "triggerAsyncId": 2706,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1386
    },
    "1387": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982616686085",
      "endTime": "578982616852247",
      "elapsedTime": "166162",
      "asyncId": 2710,
      "triggerAsyncId": 2694,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2711
      ],
      "uniqueid": 1387
    },
    "1388": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982616840866",
      "endTime": "578982617328610",
      "elapsedTime": "487744",
      "asyncId": 2711,
      "triggerAsyncId": 2710,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1388
    },
    "1389": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982617130318",
      "endTime": "578982617301289",
      "elapsedTime": "170971",
      "asyncId": 2712,
      "triggerAsyncId": 2694,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2713
      ],
      "uniqueid": 1389
    },
    "1390": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982617289276",
      "endTime": "578982617426303",
      "elapsedTime": "137027",
      "asyncId": 2713,
      "triggerAsyncId": 2712,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1390
    },
    "1391": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982619159472",
      "endTime": "578982631134240",
      "elapsedTime": "11974768",
      "asyncId": 2714,
      "triggerAsyncId": 2617,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2722
      ],
      "uniqueid": 1391
    },
    "1392": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982619448834",
      "endTime": "578982619461618",
      "elapsedTime": "12784",
      "asyncId": 2715,
      "triggerAsyncId": 2617,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1392
    },
    "1393": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982619935837",
      "endTime": "578982619950755",
      "elapsedTime": "14918",
      "asyncId": 2717,
      "triggerAsyncId": 2617,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2718,
        2718
      ],
      "uniqueid": 1393
    },
    "1394": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982620224649",
      "endTime": "578982625846417",
      "elapsedTime": "5621768",
      "asyncId": 2718,
      "triggerAsyncId": 2717,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2725,
        2728,
        2726,
        2730,
        2736,
        2719,
        2719
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1394
    },
    "1395": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982620450131",
      "endTime": "578982631039603",
      "elapsedTime": "10589472",
      "asyncId": 2719,
      "triggerAsyncId": 2718,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2746,
        2739,
        2738,
        2737,
        2744,
        2748,
        2754,
        2720
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1395
    },
    "1396": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982620639547",
      "endTime": "578982631159357",
      "elapsedTime": "10519810",
      "asyncId": 2720,
      "triggerAsyncId": 2719,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1396
    },
    "1397": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982620785410",
      "endTime": "578982631182711",
      "elapsedTime": "10397301",
      "asyncId": 2721,
      "triggerAsyncId": 2617,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1397
    },
    "1398": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982621084701",
      "endTime": "578982621097575",
      "elapsedTime": "12874",
      "asyncId": 2723,
      "triggerAsyncId": 2617,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1398
    },
    "1399": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982621430499",
      "endTime": "578982621448232",
      "elapsedTime": "17733",
      "asyncId": 2725,
      "triggerAsyncId": 2718,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2727
      ],
      "uniqueid": 1399
    },
    "1400": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982621599756",
      "endTime": "578982625414979",
      "elapsedTime": "3815223",
      "asyncId": 2726,
      "triggerAsyncId": 2718,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2732
      ],
      "uniqueid": 1400
    },
    "1401": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982621860896",
      "endTime": "578982621872347",
      "elapsedTime": "11451",
      "asyncId": 2728,
      "triggerAsyncId": 2718,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1401
    },
    "1402": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982622181858",
      "endTime": "578982625781225",
      "elapsedTime": "3599367",
      "asyncId": 2730,
      "triggerAsyncId": 2718,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1402
    },
    "1403": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982625105368",
      "endTime": "578982625809488",
      "elapsedTime": "704120",
      "asyncId": 2732,
      "triggerAsyncId": 2726,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1403
    },
    "1404": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982626045310",
      "endTime": "578982630848214",
      "elapsedTime": "4802904",
      "asyncId": 2737,
      "triggerAsyncId": 2719,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2745
      ],
      "uniqueid": 1404
    },
    "1405": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982626407930",
      "endTime": "578982630794333",
      "elapsedTime": "4386403",
      "asyncId": 2738,
      "triggerAsyncId": 2719,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2743
      ],
      "uniqueid": 1405
    },
    "1406": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:370:36:370:36",
      "startTime": "578982626696882",
      "endTime": "578982630016154",
      "elapsedTime": "3319272",
      "asyncId": 2739,
      "triggerAsyncId": 2719,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2740,
        2751,
        2755,
        2757,
        2742
      ],
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 370,
      "startCol": 36,
      "endLine": 370,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 1406
    },
    "1407": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:370:36:370:36",
      "startTime": "578982626964954",
      "endTime": "578982627201528",
      "elapsedTime": "236574",
      "asyncId": 2740,
      "triggerAsyncId": 2739,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 370,
      "startCol": 36,
      "endLine": 370,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [
        2741
      ],
      "uniqueid": 1407
    },
    "1408": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:370:36:370:36",
      "startTime": "578982627189535",
      "endTime": "578982628838717",
      "elapsedTime": "1649182",
      "asyncId": 2741,
      "triggerAsyncId": 2740,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 370,
      "startCol": 36,
      "endLine": 370,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [],
      "uniqueid": 1408
    },
    "1409": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982627404618",
      "endTime": "578982630823928",
      "elapsedTime": "3419310",
      "asyncId": 2742,
      "triggerAsyncId": 2739,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1409
    },
    "1410": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982627564208",
      "endTime": "578982630870546",
      "elapsedTime": "3306338",
      "asyncId": 2743,
      "triggerAsyncId": 2738,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1410
    },
    "1411": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982627689643",
      "endTime": "578982630895773",
      "elapsedTime": "3206130",
      "asyncId": 2744,
      "triggerAsyncId": 2719,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2750
      ],
      "uniqueid": 1411
    },
    "1412": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982627938730",
      "endTime": "578982627949700",
      "elapsedTime": "10970",
      "asyncId": 2746,
      "triggerAsyncId": 2719,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1412
    },
    "1413": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982628259992",
      "endTime": "578982630957889",
      "elapsedTime": "2697897",
      "asyncId": 2748,
      "triggerAsyncId": 2719,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1413
    },
    "1414": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982628452963",
      "endTime": "578982630985601",
      "elapsedTime": "2532638",
      "asyncId": 2750,
      "triggerAsyncId": 2744,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1414
    },
    "1415": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982628647779",
      "endTime": "578982628812007",
      "elapsedTime": "164228",
      "asyncId": 2751,
      "triggerAsyncId": 2739,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2752
      ],
      "uniqueid": 1415
    },
    "1416": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982628800615",
      "endTime": "578982629528700",
      "elapsedTime": "728085",
      "asyncId": 2752,
      "triggerAsyncId": 2751,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1416
    },
    "1417": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982629334195",
      "endTime": "578982629501740",
      "elapsedTime": "167545",
      "asyncId": 2755,
      "triggerAsyncId": 2739,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2756
      ],
      "uniqueid": 1417
    },
    "1418": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982629490468",
      "endTime": "578982629930754",
      "elapsedTime": "440286",
      "asyncId": 2756,
      "triggerAsyncId": 2755,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1418
    },
    "1419": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982629722884",
      "endTime": "578982629897842",
      "elapsedTime": "174958",
      "asyncId": 2757,
      "triggerAsyncId": 2739,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2758
      ],
      "uniqueid": 1419
    },
    "1420": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982629883645",
      "endTime": "578982630048374",
      "elapsedTime": "164729",
      "asyncId": 2758,
      "triggerAsyncId": 2757,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1420
    },
    "1421": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982631444471",
      "endTime": "578982640305683",
      "elapsedTime": "8861212",
      "asyncId": 2759,
      "triggerAsyncId": 2618,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2767
      ],
      "uniqueid": 1421
    },
    "1422": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982631722342",
      "endTime": "578982631734695",
      "elapsedTime": "12353",
      "asyncId": 2760,
      "triggerAsyncId": 2618,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1422
    },
    "1423": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982632211159",
      "endTime": "578982632222830",
      "elapsedTime": "11671",
      "asyncId": 2762,
      "triggerAsyncId": 2618,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2763,
        2763
      ],
      "uniqueid": 1423
    },
    "1424": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982632468030",
      "endTime": "578982635299177",
      "elapsedTime": "2831147",
      "asyncId": 2763,
      "triggerAsyncId": 2762,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2770,
        2773,
        2771,
        2775,
        2781,
        2764,
        2764
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1424
    },
    "1425": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982632693753",
      "endTime": "578982640232035",
      "elapsedTime": "7538282",
      "asyncId": 2764,
      "triggerAsyncId": 2763,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2791,
        2784,
        2783,
        2782,
        2789,
        2793,
        2799,
        2765
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1425
    },
    "1426": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982632894480",
      "endTime": "578982640332713",
      "elapsedTime": "7438233",
      "asyncId": 2765,
      "triggerAsyncId": 2764,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1426
    },
    "1427": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982633076671",
      "endTime": "578982640355817",
      "elapsedTime": "7279146",
      "asyncId": 2766,
      "triggerAsyncId": 2618,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1427
    },
    "1428": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982633382564",
      "endTime": "578982633394166",
      "elapsedTime": "11602",
      "asyncId": 2768,
      "triggerAsyncId": 2618,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1428
    },
    "1429": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982633719777",
      "endTime": "578982633738331",
      "elapsedTime": "18554",
      "asyncId": 2770,
      "triggerAsyncId": 2763,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2772
      ],
      "uniqueid": 1429
    },
    "1430": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982633889124",
      "endTime": "578982634933843",
      "elapsedTime": "1044719",
      "asyncId": 2771,
      "triggerAsyncId": 2763,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2777
      ],
      "uniqueid": 1430
    },
    "1431": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982634193364",
      "endTime": "578982634204465",
      "elapsedTime": "11101",
      "asyncId": 2773,
      "triggerAsyncId": 2763,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1431
    },
    "1432": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982634485753",
      "endTime": "578982635237822",
      "elapsedTime": "752069",
      "asyncId": 2775,
      "triggerAsyncId": 2763,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1432
    },
    "1433": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982634669457",
      "endTime": "578982635264893",
      "elapsedTime": "595436",
      "asyncId": 2777,
      "triggerAsyncId": 2771,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1433
    },
    "1434": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982635469737",
      "endTime": "578982640080130",
      "elapsedTime": "4610393",
      "asyncId": 2782,
      "triggerAsyncId": 2764,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2790
      ],
      "uniqueid": 1434
    },
    "1435": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982635765672",
      "endTime": "578982640030647",
      "elapsedTime": "4264975",
      "asyncId": 2783,
      "triggerAsyncId": 2764,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "triggers": [
        2802,
        2788
      ],
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "uniqueid": 1435
    },
    "1436": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:405:36:405:36",
      "startTime": "578982636027703",
      "endTime": "578982638901090",
      "elapsedTime": "2873387",
      "asyncId": 2784,
      "triggerAsyncId": 2764,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2785,
        2796,
        2800,
        2787
      ],
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 24.29;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 405,
      "startCol": 36,
      "endLine": 405,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 1436
    },
    "1437": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:405:36:405:36",
      "startTime": "578982636252344",
      "endTime": "578982636476725",
      "elapsedTime": "224381",
      "asyncId": 2785,
      "triggerAsyncId": 2784,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 24.29;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 405,
      "startCol": 36,
      "endLine": 405,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [
        2786
      ],
      "uniqueid": 1437
    },
    "1438": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:405:36:405:36",
      "startTime": "578982636464472",
      "endTime": "578982638202109",
      "elapsedTime": "1737637",
      "asyncId": 2786,
      "triggerAsyncId": 2785,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 24.29;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines",
      "startLine": 405,
      "startCol": 36,
      "endLine": 405,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [],
      "uniqueid": 1438
    },
    "1439": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982636680196",
      "endTime": "578982639890765",
      "elapsedTime": "3210569",
      "asyncId": 2787,
      "triggerAsyncId": 2784,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1439
    },
    "1440": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982636837581",
      "endTime": "578982640102011",
      "elapsedTime": "3264430",
      "asyncId": 2788,
      "triggerAsyncId": 2783,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1440
    },
    "1441": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982636988013",
      "endTime": "578982640124213",
      "elapsedTime": "3136200",
      "asyncId": 2789,
      "triggerAsyncId": 2764,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2795
      ],
      "uniqueid": 1441
    },
    "1442": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982637280852",
      "endTime": "578982637291763",
      "elapsedTime": "10911",
      "asyncId": 2791,
      "triggerAsyncId": 2764,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1442
    },
    "1443": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982637585603",
      "endTime": "578982640175549",
      "elapsedTime": "2589946",
      "asyncId": 2793,
      "triggerAsyncId": 2764,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1443
    },
    "1444": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982637769498",
      "endTime": "578982640197981",
      "elapsedTime": "2428483",
      "asyncId": 2795,
      "triggerAsyncId": 2789,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1444
    },
    "1445": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982637982187",
      "endTime": "578982638174307",
      "elapsedTime": "192120",
      "asyncId": 2796,
      "triggerAsyncId": 2784,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2797
      ],
      "uniqueid": 1445
    },
    "1446": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982638162635",
      "endTime": "578982638835196",
      "elapsedTime": "672561",
      "asyncId": 2797,
      "triggerAsyncId": 2796,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1446
    },
    "1447": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982638640712",
      "endTime": "578982638807654",
      "elapsedTime": "166942",
      "asyncId": 2800,
      "triggerAsyncId": 2784,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2801
      ],
      "uniqueid": 1447
    },
    "1448": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982638795943",
      "endTime": "578982638930104",
      "elapsedTime": "134161",
      "asyncId": 2801,
      "triggerAsyncId": 2800,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1448
    },
    "1449": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982639728681",
      "endTime": "578982639864275",
      "elapsedTime": "135594",
      "asyncId": 2802,
      "triggerAsyncId": 2783,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2803
      ],
      "uniqueid": 1449
    },
    "1450": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982639853425",
      "endTime": "578982640057077",
      "elapsedTime": "203652",
      "asyncId": 2803,
      "triggerAsyncId": 2802,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1450
    },
    "1451": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982640598101",
      "endTime": "578982657610542",
      "elapsedTime": "17012441",
      "asyncId": 2804,
      "triggerAsyncId": 2619,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2812
      ],
      "uniqueid": 1451
    },
    "1452": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982640876052",
      "endTime": "578982640889377",
      "elapsedTime": "13325",
      "asyncId": 2805,
      "triggerAsyncId": 2619,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1452
    },
    "1453": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982641404793",
      "endTime": "578982641417126",
      "elapsedTime": "12333",
      "asyncId": 2807,
      "triggerAsyncId": 2619,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2808,
        2808
      ],
      "uniqueid": 1453
    },
    "1454": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982641669610",
      "endTime": "578982644466773",
      "elapsedTime": "2797163",
      "asyncId": 2808,
      "triggerAsyncId": 2807,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2815,
        2818,
        2816,
        2820,
        2826,
        2809,
        2809
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1454
    },
    "1455": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982641892648",
      "endTime": "578982657534730",
      "elapsedTime": "15642082",
      "asyncId": 2809,
      "triggerAsyncId": 2808,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2830,
        2836,
        2829,
        2828,
        2827,
        2834,
        2838,
        2844,
        2810
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1455
    },
    "1456": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982642147575",
      "endTime": "578982657635148",
      "elapsedTime": "15487573",
      "asyncId": 2810,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1456
    },
    "1457": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982642291305",
      "endTime": "578982657660496",
      "elapsedTime": "15369191",
      "asyncId": 2811,
      "triggerAsyncId": 2619,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1457
    },
    "1458": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982642577060",
      "endTime": "578982642588412",
      "elapsedTime": "11352",
      "asyncId": 2813,
      "triggerAsyncId": 2619,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1458
    },
    "1459": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982642916106",
      "endTime": "578982642934230",
      "elapsedTime": "18124",
      "asyncId": 2815,
      "triggerAsyncId": 2808,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2817
      ],
      "uniqueid": 1459
    },
    "1460": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982643096394",
      "endTime": "578982644124201",
      "elapsedTime": "1027807",
      "asyncId": 2816,
      "triggerAsyncId": 2808,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2822
      ],
      "uniqueid": 1460
    },
    "1461": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982643358676",
      "endTime": "578982643370298",
      "elapsedTime": "11622",
      "asyncId": 2818,
      "triggerAsyncId": 2808,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1461
    },
    "1462": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982643662074",
      "endTime": "578982644406350",
      "elapsedTime": "744276",
      "asyncId": 2820,
      "triggerAsyncId": 2808,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1462
    },
    "1463": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982643851279",
      "endTime": "578982644432489",
      "elapsedTime": "581210",
      "asyncId": 2822,
      "triggerAsyncId": 2816,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1463
    },
    "1464": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982644631322",
      "endTime": "578982657376454",
      "elapsedTime": "12745132",
      "asyncId": 2827,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2835
      ],
      "uniqueid": 1464
    },
    "1465": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982644907499",
      "endTime": "578982657319737",
      "elapsedTime": "12412238",
      "asyncId": 2828,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2833
      ],
      "uniqueid": 1465
    },
    "1466": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:420:36:420:36",
      "startTime": "578982646100035",
      "endTime": "578982655931745",
      "elapsedTime": "9831710",
      "asyncId": 2829,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2841,
        2867,
        2832
      ],
      "line": "\n\n    it('bankAccount and printNote should be taken from the valid factoring provider and should not be taken from an invalid factoring provider', async () => {\n      const result = await service.save(\n        mockEntityManager,\n        {\n          lines: []",
      "startLine": 420,
      "startCol": 36,
      "endLine": 420,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 1466
    },
    "1467": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578982646638354",
      "endTime": "578982646650837",
      "elapsedTime": "12483",
      "asyncId": 2830,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        2831
      ],
      "uniqueid": 1467
    },
    "1468": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:420:36:420:36",
      "startTime": "578982646880027",
      "endTime": "578982648584592",
      "elapsedTime": "1704565",
      "asyncId": 2831,
      "triggerAsyncId": 2830,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n\n    it('bankAccount and printNote should be taken from the valid factoring provider and should not be taken from an invalid factoring provider', async () => {\n      const result = await service.save(\n        mockEntityManager,\n        {\n          lines: []",
      "startLine": 420,
      "startCol": 36,
      "endLine": 420,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [],
      "uniqueid": 1468
    },
    "1469": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982647078128",
      "endTime": "578982657351727",
      "elapsedTime": "10273599",
      "asyncId": 2832,
      "triggerAsyncId": 2829,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1469
    },
    "1470": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982647238769",
      "endTime": "578982657398755",
      "elapsedTime": "10159986",
      "asyncId": 2833,
      "triggerAsyncId": 2828,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1470
    },
    "1471": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982647362942",
      "endTime": "578982657420686",
      "elapsedTime": "10057744",
      "asyncId": 2834,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2840
      ],
      "uniqueid": 1471
    },
    "1472": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982647618341",
      "endTime": "578982647629983",
      "elapsedTime": "11642",
      "asyncId": 2836,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1472
    },
    "1473": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982647917702",
      "endTime": "578982657477162",
      "elapsedTime": "9559460",
      "asyncId": 2838,
      "triggerAsyncId": 2809,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1473
    },
    "1474": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982648160647",
      "endTime": "578982657500807",
      "elapsedTime": "9340160",
      "asyncId": 2840,
      "triggerAsyncId": 2834,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1474
    },
    "1475": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982648394676",
      "endTime": "578982648557301",
      "elapsedTime": "162625",
      "asyncId": 2841,
      "triggerAsyncId": 2829,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2842
      ],
      "uniqueid": 1475
    },
    "1476": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982648545649",
      "endTime": "578982649943319",
      "elapsedTime": "1397670",
      "asyncId": 2842,
      "triggerAsyncId": 2841,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2846,
        2845
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1476
    },
    "1477": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982649296837",
      "endTime": "578982655520384",
      "elapsedTime": "6223547",
      "asyncId": 2845,
      "triggerAsyncId": 2842,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "triggers": [
        2849,
        2851,
        2853,
        2865,
        2848
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 1477
    },
    "1478": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:304:37:304:37",
      "startTime": "578982649567885",
      "endTime": "578982649580229",
      "elapsedTime": "12344",
      "asyncId": 2846,
      "triggerAsyncId": 2842,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n        ['legalAddress', 'legalAddress.country'],\n      ));\n    const organization = await this.getOrganization(\n      transactionalEntityManager,\n      args,\n    )",
      "startLine": 304,
      "startCol": 37,
      "endLine": 304,
      "endCol": 37,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2847
      ],
      "uniqueid": 1478
    },
    "1479": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982649773050",
      "endTime": "578982650419632",
      "elapsedTime": "646582",
      "asyncId": 2847,
      "triggerAsyncId": 2846,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [],
      "uniqueid": 1479
    },
    "1480": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982649925836",
      "endTime": "578982655908662",
      "elapsedTime": "5982826",
      "asyncId": 2848,
      "triggerAsyncId": 2845,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1480
    },
    "1481": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982650206883",
      "endTime": "578982650392381",
      "elapsedTime": "185498",
      "asyncId": 2849,
      "triggerAsyncId": 2845,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2850
      ],
      "uniqueid": 1481
    },
    "1482": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982650380910",
      "endTime": "578982650893300",
      "elapsedTime": "512390",
      "asyncId": 2850,
      "triggerAsyncId": 2849,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1482
    },
    "1483": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982650675252",
      "endTime": "578982650864296",
      "elapsedTime": "189044",
      "asyncId": 2851,
      "triggerAsyncId": 2845,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2852
      ],
      "uniqueid": 1483
    },
    "1484": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982650852163",
      "endTime": "578982652452733",
      "elapsedTime": "1600570",
      "asyncId": 2852,
      "triggerAsyncId": 2851,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1484
    },
    "1485": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982652236278",
      "endTime": "578982652424972",
      "elapsedTime": "188694",
      "asyncId": 2853,
      "triggerAsyncId": 2845,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2854
      ],
      "uniqueid": 1485
    },
    "1486": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982652413280",
      "endTime": "578982653492012",
      "elapsedTime": "1078732",
      "asyncId": 2854,
      "triggerAsyncId": 2853,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2855
      ],
      "uniqueid": 1486
    },
    "1487": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982652763787",
      "endTime": "578982653518912",
      "elapsedTime": "755125",
      "asyncId": 2855,
      "triggerAsyncId": 2854,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        2856,
        2858
      ],
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1487
    },
    "1488": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982653068468",
      "endTime": "578982653286647",
      "elapsedTime": "218179",
      "asyncId": 2856,
      "triggerAsyncId": 2855,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2857
      ],
      "uniqueid": 1488
    },
    "1489": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982653275165",
      "endTime": "578982653544510",
      "elapsedTime": "269345",
      "asyncId": 2857,
      "triggerAsyncId": 2856,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1489
    },
    "1490": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982653480049",
      "endTime": "578982654418098",
      "elapsedTime": "938049",
      "asyncId": 2858,
      "triggerAsyncId": 2855,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2859
      ],
      "uniqueid": 1490
    },
    "1491": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982653764302",
      "endTime": "578982654974210",
      "elapsedTime": "1209908",
      "asyncId": 2859,
      "triggerAsyncId": 2858,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        2860,
        2863,
        2862
      ],
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1491
    },
    "1492": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982653978353",
      "endTime": "578982654210459",
      "elapsedTime": "232106",
      "asyncId": 2860,
      "triggerAsyncId": 2859,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2861
      ],
      "uniqueid": 1492
    },
    "1493": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982654198185",
      "endTime": "578982654885594",
      "elapsedTime": "687409",
      "asyncId": 2861,
      "triggerAsyncId": 2860,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1493
    },
    "1494": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982654405755",
      "endTime": "578982655490478",
      "elapsedTime": "1084723",
      "asyncId": 2862,
      "triggerAsyncId": 2859,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1494
    },
    "1495": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982654644843",
      "endTime": "578982654858513",
      "elapsedTime": "213670",
      "asyncId": 2863,
      "triggerAsyncId": 2859,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2864
      ],
      "uniqueid": 1495
    },
    "1496": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982654846210",
      "endTime": "578982655009637",
      "elapsedTime": "163427",
      "asyncId": 2864,
      "triggerAsyncId": 2863,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1496
    },
    "1497": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982655270646",
      "endTime": "578982655458768",
      "elapsedTime": "188122",
      "asyncId": 2865,
      "triggerAsyncId": 2845,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2866
      ],
      "uniqueid": 1497
    },
    "1498": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982655446806",
      "endTime": "578982655543377",
      "elapsedTime": "96571",
      "asyncId": 2866,
      "triggerAsyncId": 2865,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1498
    },
    "1499": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982655717994",
      "endTime": "578982655882423",
      "elapsedTime": "164429",
      "asyncId": 2867,
      "triggerAsyncId": 2829,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2868
      ],
      "uniqueid": 1499
    },
    "1500": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982655870580",
      "endTime": "578982655956091",
      "elapsedTime": "85511",
      "asyncId": 2868,
      "triggerAsyncId": 2867,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1500
    },
    "1501": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982657924020",
      "endTime": "578982674574132",
      "elapsedTime": "16650112",
      "asyncId": 2869,
      "triggerAsyncId": 2620,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2877
      ],
      "uniqueid": 1501
    },
    "1502": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982658231266",
      "endTime": "578982658244100",
      "elapsedTime": "12834",
      "asyncId": 2870,
      "triggerAsyncId": 2620,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1502
    },
    "1503": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982658793099",
      "endTime": "578982658805763",
      "elapsedTime": "12664",
      "asyncId": 2872,
      "triggerAsyncId": 2620,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2873,
        2873
      ],
      "uniqueid": 1503
    },
    "1504": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982659095306",
      "endTime": "578982661942453",
      "elapsedTime": "2847147",
      "asyncId": 2873,
      "triggerAsyncId": 2872,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2880,
        2883,
        2881,
        2885,
        2891,
        2874,
        2874
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1504
    },
    "1505": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982659337730",
      "endTime": "578982674459207",
      "elapsedTime": "15121477",
      "asyncId": 2874,
      "triggerAsyncId": 2873,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2895,
        2901,
        2894,
        2893,
        2892,
        2899,
        2903,
        2909,
        2875
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1505
    },
    "1506": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982659536453",
      "endTime": "578982674610831",
      "elapsedTime": "15074378",
      "asyncId": 2875,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1506
    },
    "1507": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982659678940",
      "endTime": "578982674638643",
      "elapsedTime": "14959703",
      "asyncId": 2876,
      "triggerAsyncId": 2620,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1507
    },
    "1508": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982659965697",
      "endTime": "578982659976948",
      "elapsedTime": "11251",
      "asyncId": 2878,
      "triggerAsyncId": 2620,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1508
    },
    "1509": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982660315082",
      "endTime": "578982660334859",
      "elapsedTime": "19777",
      "asyncId": 2880,
      "triggerAsyncId": 2873,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2882
      ],
      "uniqueid": 1509
    },
    "1510": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982660485371",
      "endTime": "578982661597576",
      "elapsedTime": "1112205",
      "asyncId": 2881,
      "triggerAsyncId": 2873,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2887
      ],
      "uniqueid": 1510
    },
    "1511": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982660811583",
      "endTime": "578982660822734",
      "elapsedTime": "11151",
      "asyncId": 2883,
      "triggerAsyncId": 2873,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1511
    },
    "1512": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982661153544",
      "endTime": "578982661882551",
      "elapsedTime": "729007",
      "asyncId": 2885,
      "triggerAsyncId": 2873,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1512
    },
    "1513": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982661337038",
      "endTime": "578982661908570",
      "elapsedTime": "571532",
      "asyncId": 2887,
      "triggerAsyncId": 2881,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1513
    },
    "1514": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982662126097",
      "endTime": "578982674292024",
      "elapsedTime": "12165927",
      "asyncId": 2892,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2900
      ],
      "uniqueid": 1514
    },
    "1515": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982662401333",
      "endTime": "578982674234786",
      "elapsedTime": "11833453",
      "asyncId": 2893,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2898
      ],
      "uniqueid": 1515
    },
    "1516": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:470:36:470:36",
      "startTime": "578982662624672",
      "endTime": "578982673993644",
      "elapsedTime": "11368972",
      "asyncId": 2894,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2906,
        2932,
        2897
      ],
      "line": "\n        factoringProviderId: 2,\n      } as any;\n      const result = await service.save(mockEntityManager, args, {\n        id: 1,\n      } as any);\n      expect(result.printNote).toBeNull()",
      "startLine": 470,
      "startCol": 36,
      "endLine": 470,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 1516
    },
    "1517": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578982662861105",
      "endTime": "578982662873318",
      "elapsedTime": "12213",
      "asyncId": 2895,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        2896
      ],
      "uniqueid": 1517
    },
    "1518": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:470:36:470:36",
      "startTime": "578982663111024",
      "endTime": "578982664760005",
      "elapsedTime": "1648981",
      "asyncId": 2896,
      "triggerAsyncId": 2895,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n        factoringProviderId: 2,\n      } as any;\n      const result = await service.save(mockEntityManager, args, {\n        id: 1,\n      } as any);\n      expect(result.printNote).toBeNull()",
      "startLine": 470,
      "startCol": 36,
      "endLine": 470,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [],
      "uniqueid": 1518
    },
    "1519": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982663298054",
      "endTime": "578982674266065",
      "elapsedTime": "10968011",
      "asyncId": 2897,
      "triggerAsyncId": 2894,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1519
    },
    "1520": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982663465168",
      "endTime": "578982674314846",
      "elapsedTime": "10849678",
      "asyncId": 2898,
      "triggerAsyncId": 2893,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1520
    },
    "1521": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982663596924",
      "endTime": "578982674338060",
      "elapsedTime": "10741136",
      "asyncId": 2899,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2905
      ],
      "uniqueid": 1521
    },
    "1522": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982663847855",
      "endTime": "578982663858956",
      "elapsedTime": "11101",
      "asyncId": 2901,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1522
    },
    "1523": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982664207038",
      "endTime": "578982674395848",
      "elapsedTime": "10188810",
      "asyncId": 2903,
      "triggerAsyncId": 2874,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1523
    },
    "1524": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982664390763",
      "endTime": "578982674421055",
      "elapsedTime": "10030292",
      "asyncId": 2905,
      "triggerAsyncId": 2899,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1524
    },
    "1525": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982664574647",
      "endTime": "578982664733455",
      "elapsedTime": "158808",
      "asyncId": 2906,
      "triggerAsyncId": 2894,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2907
      ],
      "uniqueid": 1525
    },
    "1526": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982664722044",
      "endTime": "578982665808019",
      "elapsedTime": "1085975",
      "asyncId": 2907,
      "triggerAsyncId": 2906,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        2911,
        2910
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1526
    },
    "1527": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982665232651",
      "endTime": "578982670561460",
      "elapsedTime": "5328809",
      "asyncId": 2910,
      "triggerAsyncId": 2907,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "triggers": [
        2914,
        2916,
        2918,
        2930,
        2913
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 1527
    },
    "1528": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:304:37:304:37",
      "startTime": "578982665439328",
      "endTime": "578982665451832",
      "elapsedTime": "12504",
      "asyncId": 2911,
      "triggerAsyncId": 2907,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n        ['legalAddress', 'legalAddress.country'],\n      ));\n    const organization = await this.getOrganization(\n      transactionalEntityManager,\n      args,\n    )",
      "startLine": 304,
      "startCol": 37,
      "endLine": 304,
      "endCol": 37,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2912
      ],
      "uniqueid": 1528
    },
    "1529": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982665646607",
      "endTime": "578982666246371",
      "elapsedTime": "599764",
      "asyncId": 2912,
      "triggerAsyncId": 2911,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [],
      "uniqueid": 1529
    },
    "1530": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982665796398",
      "endTime": "578982673968116",
      "elapsedTime": "8171718",
      "asyncId": 2913,
      "triggerAsyncId": 2910,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1530
    },
    "1531": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982666018824",
      "endTime": "578982666218128",
      "elapsedTime": "199304",
      "asyncId": 2914,
      "triggerAsyncId": 2910,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2915
      ],
      "uniqueid": 1531
    },
    "1532": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982666206617",
      "endTime": "578982666676678",
      "elapsedTime": "470061",
      "asyncId": 2915,
      "triggerAsyncId": 2914,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1532
    },
    "1533": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982666455663",
      "endTime": "578982666649787",
      "elapsedTime": "194124",
      "asyncId": 2916,
      "triggerAsyncId": 2910,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2917
      ],
      "uniqueid": 1533
    },
    "1534": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982666638236",
      "endTime": "578982667225707",
      "elapsedTime": "587471",
      "asyncId": 2917,
      "triggerAsyncId": 2916,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1534
    },
    "1535": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982666987160",
      "endTime": "578982667191222",
      "elapsedTime": "204062",
      "asyncId": 2918,
      "triggerAsyncId": 2910,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2919
      ],
      "uniqueid": 1535
    },
    "1536": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982667179110",
      "endTime": "578982668105055",
      "elapsedTime": "925945",
      "asyncId": 2919,
      "triggerAsyncId": 2918,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2920
      ],
      "uniqueid": 1536
    },
    "1537": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982667453133",
      "endTime": "578982668131886",
      "elapsedTime": "678753",
      "asyncId": 2920,
      "triggerAsyncId": 2919,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        2921,
        2923
      ],
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1537
    },
    "1538": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982667667125",
      "endTime": "578982667877920",
      "elapsedTime": "210795",
      "asyncId": 2921,
      "triggerAsyncId": 2920,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2922
      ],
      "uniqueid": 1538
    },
    "1539": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982667866438",
      "endTime": "578982668155400",
      "elapsedTime": "288962",
      "asyncId": 2922,
      "triggerAsyncId": 2921,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1539
    },
    "1540": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982668092712",
      "endTime": "578982669475515",
      "elapsedTime": "1382803",
      "asyncId": 2923,
      "triggerAsyncId": 2920,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2924
      ],
      "uniqueid": 1540
    },
    "1541": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982668381353",
      "endTime": "578982670000078",
      "elapsedTime": "1618725",
      "asyncId": 2924,
      "triggerAsyncId": 2923,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        2925,
        2928,
        2927
      ],
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1541
    },
    "1542": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982669029248",
      "endTime": "578982669253398",
      "elapsedTime": "224150",
      "asyncId": 2925,
      "triggerAsyncId": 2924,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2926
      ],
      "uniqueid": 1542
    },
    "1543": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982669241556",
      "endTime": "578982669936118",
      "elapsedTime": "694562",
      "asyncId": 2926,
      "triggerAsyncId": 2925,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1543
    },
    "1544": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982669462861",
      "endTime": "578982670490036",
      "elapsedTime": "1027175",
      "asyncId": 2927,
      "triggerAsyncId": 2924,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1544
    },
    "1545": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982669700085",
      "endTime": "578982669909578",
      "elapsedTime": "209493",
      "asyncId": 2928,
      "triggerAsyncId": 2924,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2929
      ],
      "uniqueid": 1545
    },
    "1546": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982669897967",
      "endTime": "578982670032679",
      "elapsedTime": "134712",
      "asyncId": 2929,
      "triggerAsyncId": 2928,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1546
    },
    "1547": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982670266768",
      "endTime": "578982670463366",
      "elapsedTime": "196598",
      "asyncId": 2930,
      "triggerAsyncId": 2910,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2931
      ],
      "uniqueid": 1547
    },
    "1548": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982670451304",
      "endTime": "578982670587048",
      "elapsedTime": "135744",
      "asyncId": 2931,
      "triggerAsyncId": 2930,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1548
    },
    "1549": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982670770672",
      "endTime": "578982673937709",
      "elapsedTime": "3167037",
      "asyncId": 2932,
      "triggerAsyncId": 2894,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2933
      ],
      "uniqueid": 1549
    },
    "1550": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982673923873",
      "endTime": "578982674023660",
      "elapsedTime": "99787",
      "asyncId": 2933,
      "triggerAsyncId": 2932,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1550
    },
    "1551": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982674942553",
      "endTime": "578982690467085",
      "elapsedTime": "15524532",
      "asyncId": 2934,
      "triggerAsyncId": 2621,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2942
      ],
      "uniqueid": 1551
    },
    "1552": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982675270928",
      "endTime": "578982675283512",
      "elapsedTime": "12584",
      "asyncId": 2935,
      "triggerAsyncId": 2621,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1552
    },
    "1553": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982675766928",
      "endTime": "578982675778380",
      "elapsedTime": "11452",
      "asyncId": 2937,
      "triggerAsyncId": 2621,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2938,
        2938
      ],
      "uniqueid": 1553
    },
    "1554": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982676043477",
      "endTime": "578982680107956",
      "elapsedTime": "4064479",
      "asyncId": 2938,
      "triggerAsyncId": 2937,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2945,
        2948,
        2946,
        2950,
        2956,
        2939,
        2939
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1554
    },
    "1555": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982676293796",
      "endTime": "578982690388819",
      "elapsedTime": "14095023",
      "asyncId": 2939,
      "triggerAsyncId": 2938,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2968,
        2960,
        2959,
        2959,
        2958,
        2957,
        2966,
        2970,
        2974,
        2940
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1555
    },
    "1556": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982677760656",
      "endTime": "578982690492383",
      "elapsedTime": "12731727",
      "asyncId": 2940,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1556
    },
    "1557": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982677907751",
      "endTime": "578982690515035",
      "elapsedTime": "12607284",
      "asyncId": 2941,
      "triggerAsyncId": 2621,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1557
    },
    "1558": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982678199779",
      "endTime": "578982678211992",
      "elapsedTime": "12213",
      "asyncId": 2943,
      "triggerAsyncId": 2621,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1558
    },
    "1559": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982678549344",
      "endTime": "578982678567588",
      "elapsedTime": "18244",
      "asyncId": 2945,
      "triggerAsyncId": 2938,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2947
      ],
      "uniqueid": 1559
    },
    "1560": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982678715165",
      "endTime": "578982679732803",
      "elapsedTime": "1017638",
      "asyncId": 2946,
      "triggerAsyncId": 2938,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2952
      ],
      "uniqueid": 1560
    },
    "1561": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982678972237",
      "endTime": "578982678983819",
      "elapsedTime": "11582",
      "asyncId": 2948,
      "triggerAsyncId": 2938,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1561
    },
    "1562": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982679278541",
      "endTime": "578982680032234",
      "elapsedTime": "753693",
      "asyncId": 2950,
      "triggerAsyncId": 2938,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1562
    },
    "1563": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982679463338",
      "endTime": "578982680065136",
      "elapsedTime": "601798",
      "asyncId": 2952,
      "triggerAsyncId": 2946,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1563
    },
    "1564": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982680289687",
      "endTime": "578982690226224",
      "elapsedTime": "9936537",
      "asyncId": 2957,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2967
      ],
      "uniqueid": 1564
    },
    "1565": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982680546488",
      "endTime": "578982690172663",
      "elapsedTime": "9626175",
      "asyncId": 2958,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        2965
      ],
      "uniqueid": 1565
    },
    "1566": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:478:36:478:36",
      "startTime": "578982680819129",
      "endTime": "578982689975404",
      "elapsedTime": "9156275",
      "asyncId": 2959,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n\n    it('duplicate creates a draft', async () => {\n      const result = await service.duplicate(mockEntityManager, 1, {\n        id: 1,\n      } as any);\n      expect(result.isDraft).toBeTruthy()",
      "startLine": 478,
      "startCol": 36,
      "endLine": 478,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [
        2964
      ],
      "uniqueid": 1566
    },
    "1567": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:761:31:761:31",
      "startTime": "578982681105316",
      "endTime": "578982683145530",
      "elapsedTime": "2040214",
      "asyncId": 2960,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.duplicate",
      "userCode": false,
      "triggers": [
        2961,
        2963
      ],
      "line": "\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> => {\n    const source = await this.loadEntityById(transactionalEntityManager, id);\n    source.isDraft = true;\n    return this.save(transactionalEntityManager, source, currentUser);\n  }",
      "startLine": 761,
      "startCol": 31,
      "endLine": 761,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1567
    },
    "1568": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:761:31:761:31",
      "startTime": "578982681392524",
      "endTime": "578982681628757",
      "elapsedTime": "236233",
      "asyncId": 2961,
      "triggerAsyncId": 2960,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.duplicate",
      "userCode": false,
      "line": "\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> => {\n    const source = await this.loadEntityById(transactionalEntityManager, id);\n    source.isDraft = true;\n    return this.save(transactionalEntityManager, source, currentUser);\n  }",
      "startLine": 761,
      "startCol": 31,
      "endLine": 761,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2962
      ],
      "uniqueid": 1568
    },
    "1569": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:761:31:761:31",
      "startTime": "578982681617376",
      "endTime": "578982683169415",
      "elapsedTime": "1552039",
      "asyncId": 2962,
      "triggerAsyncId": 2961,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.duplicate",
      "userCode": false,
      "line": "\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> => {\n    const source = await this.loadEntityById(transactionalEntityManager, id);\n    source.isDraft = true;\n    return this.save(transactionalEntityManager, source, currentUser);\n  }",
      "startLine": 761,
      "startCol": 31,
      "endLine": 761,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1569
    },
    "1570": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:478:36:478:36",
      "startTime": "578982681857936",
      "endTime": "578982684057921",
      "elapsedTime": "2199985",
      "asyncId": 2963,
      "triggerAsyncId": 2960,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        2976,
        2975
      ],
      "line": "\n\n    it('duplicate creates a draft', async () => {\n      const result = await service.duplicate(mockEntityManager, 1, {\n        id: 1,\n      } as any);\n      expect(result.isDraft).toBeTruthy()",
      "startLine": 478,
      "startCol": 36,
      "endLine": 478,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 1570
    },
    "1571": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982682054776",
      "endTime": "578982690201347",
      "elapsedTime": "8146571",
      "asyncId": 2964,
      "triggerAsyncId": 2959,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1571
    },
    "1572": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982682216419",
      "endTime": "578982690251431",
      "elapsedTime": "8035012",
      "asyncId": 2965,
      "triggerAsyncId": 2958,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1572
    },
    "1573": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982682343136",
      "endTime": "578982690274124",
      "elapsedTime": "7930988",
      "asyncId": 2966,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        2972
      ],
      "uniqueid": 1573
    },
    "1574": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982682599807",
      "endTime": "578982682611709",
      "elapsedTime": "11902",
      "asyncId": 2968,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1574
    },
    "1575": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982682907143",
      "endTime": "578982690328926",
      "elapsedTime": "7421783",
      "asyncId": 2970,
      "triggerAsyncId": 2939,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1575
    },
    "1576": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982683104884",
      "endTime": "578982690354775",
      "elapsedTime": "7249891",
      "asyncId": 2972,
      "triggerAsyncId": 2966,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1576
    },
    "1577": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:763:17:763:17",
      "startTime": "578982683588921",
      "endTime": "578982689918687",
      "elapsedTime": "6329766",
      "asyncId": 2975,
      "triggerAsyncId": 2963,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.duplicate",
      "userCode": false,
      "triggers": [
        2978,
        3003,
        2980
      ],
      "line": "\n    const source = await this.loadEntityById(transactionalEntityManager, id);\n    source.isDraft = true;\n    return this.save(transactionalEntityManager, source, currentUser);\n  };\n\n  publish = async ",
      "startLine": 763,
      "startCol": 17,
      "endLine": 763,
      "endCol": 17,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1577
    },
    "1578": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578982683791762",
      "endTime": "578982683803584",
      "elapsedTime": "11822",
      "asyncId": 2976,
      "triggerAsyncId": 2963,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        2977
      ],
      "uniqueid": 1578
    },
    "1579": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:763:17:763:17",
      "startTime": "578982684008779",
      "endTime": "578982684392819",
      "elapsedTime": "384040",
      "asyncId": 2977,
      "triggerAsyncId": 2976,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.duplicate",
      "userCode": false,
      "line": "\n    const source = await this.loadEntityById(transactionalEntityManager, id);\n    source.isDraft = true;\n    return this.save(transactionalEntityManager, source, currentUser);\n  };\n\n  publish = async ",
      "startLine": 763,
      "startCol": 17,
      "endLine": 763,
      "endCol": 17,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1579
    },
    "1580": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982684228661",
      "endTime": "578982684365457",
      "elapsedTime": "136796",
      "asyncId": 2978,
      "triggerAsyncId": 2975,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2979
      ],
      "uniqueid": 1580
    },
    "1581": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982684352042",
      "endTime": "578982685256728",
      "elapsedTime": "904686",
      "asyncId": 2979,
      "triggerAsyncId": 2978,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        2982,
        2981
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1581
    },
    "1582": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982684510519",
      "endTime": "578982690013235",
      "elapsedTime": "5502716",
      "asyncId": 2980,
      "triggerAsyncId": 2975,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1582
    },
    "1583": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982684685918",
      "endTime": "578982689515381",
      "elapsedTime": "4829463",
      "asyncId": 2981,
      "triggerAsyncId": 2979,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "triggers": [
        2985,
        2987,
        2989,
        3001,
        2984
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 1583
    },
    "1584": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:304:37:304:37",
      "startTime": "578982684884089",
      "endTime": "578982684896392",
      "elapsedTime": "12303",
      "asyncId": 2982,
      "triggerAsyncId": 2979,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n        ['legalAddress', 'legalAddress.country'],\n      ));\n    const organization = await this.getOrganization(\n      transactionalEntityManager,\n      args,\n    )",
      "startLine": 304,
      "startCol": 37,
      "endLine": 304,
      "endCol": 37,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2983
      ],
      "uniqueid": 1584
    },
    "1585": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982685089625",
      "endTime": "578982685670434",
      "elapsedTime": "580809",
      "asyncId": 2983,
      "triggerAsyncId": 2982,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [],
      "uniqueid": 1585
    },
    "1586": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982685244936",
      "endTime": "578982689893320",
      "elapsedTime": "4648384",
      "asyncId": 2984,
      "triggerAsyncId": 2981,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1586
    },
    "1587": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982685460650",
      "endTime": "578982685641329",
      "elapsedTime": "180679",
      "asyncId": 2985,
      "triggerAsyncId": 2981,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2986
      ],
      "uniqueid": 1587
    },
    "1588": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982685629647",
      "endTime": "578982686091653",
      "elapsedTime": "462006",
      "asyncId": 2986,
      "triggerAsyncId": 2985,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1588
    },
    "1589": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982685870018",
      "endTime": "578982686062859",
      "elapsedTime": "192841",
      "asyncId": 2987,
      "triggerAsyncId": 2981,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2988
      ],
      "uniqueid": 1589
    },
    "1590": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982686050927",
      "endTime": "578982686781717",
      "elapsedTime": "730790",
      "asyncId": 2988,
      "triggerAsyncId": 2987,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1590
    },
    "1591": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982686482205",
      "endTime": "578982686752201",
      "elapsedTime": "269996",
      "asyncId": 2989,
      "triggerAsyncId": 2981,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2990
      ],
      "uniqueid": 1591
    },
    "1592": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982686738856",
      "endTime": "578982687629626",
      "elapsedTime": "890770",
      "asyncId": 2990,
      "triggerAsyncId": 2989,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2991
      ],
      "uniqueid": 1592
    },
    "1593": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982687019432",
      "endTime": "578982687656887",
      "elapsedTime": "637455",
      "asyncId": 2991,
      "triggerAsyncId": 2990,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        2992,
        2994
      ],
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1593
    },
    "1594": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982687222653",
      "endTime": "578982687423229",
      "elapsedTime": "200576",
      "asyncId": 2992,
      "triggerAsyncId": 2991,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2993
      ],
      "uniqueid": 1594
    },
    "1595": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982687411978",
      "endTime": "578982687679510",
      "elapsedTime": "267532",
      "asyncId": 2993,
      "triggerAsyncId": 2992,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1595
    },
    "1596": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982687617574",
      "endTime": "578982688504015",
      "elapsedTime": "886441",
      "asyncId": 2994,
      "triggerAsyncId": 2991,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        2995
      ],
      "uniqueid": 1596
    },
    "1597": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982687895855",
      "endTime": "578982689009543",
      "elapsedTime": "1113688",
      "asyncId": 2995,
      "triggerAsyncId": 2994,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        2996,
        2999,
        2998
      ],
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1597
    },
    "1598": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982688103785",
      "endTime": "578982688302408",
      "elapsedTime": "198623",
      "asyncId": 2996,
      "triggerAsyncId": 2995,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        2997
      ],
      "uniqueid": 1598
    },
    "1599": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982688290916",
      "endTime": "578982688949020",
      "elapsedTime": "658104",
      "asyncId": 2997,
      "triggerAsyncId": 2996,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1599
    },
    "1600": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982688491803",
      "endTime": "578982689491106",
      "elapsedTime": "999303",
      "asyncId": 2998,
      "triggerAsyncId": 2995,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1600
    },
    "1601": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982688715271",
      "endTime": "578982688922029",
      "elapsedTime": "206758",
      "asyncId": 2999,
      "triggerAsyncId": 2995,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3000
      ],
      "uniqueid": 1601
    },
    "1602": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982688909916",
      "endTime": "578982689039178",
      "elapsedTime": "129262",
      "asyncId": 3000,
      "triggerAsyncId": 2999,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1602
    },
    "1603": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982689274379",
      "endTime": "578982689464847",
      "elapsedTime": "190468",
      "asyncId": 3001,
      "triggerAsyncId": 2981,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3002
      ],
      "uniqueid": 1603
    },
    "1604": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982689452634",
      "endTime": "578982689538645",
      "elapsedTime": "86011",
      "asyncId": 3002,
      "triggerAsyncId": 3001,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1604
    },
    "1605": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982689708403",
      "endTime": "578982689866840",
      "elapsedTime": "158437",
      "asyncId": 3003,
      "triggerAsyncId": 2975,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3004
      ],
      "uniqueid": 1605
    },
    "1606": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982689855238",
      "endTime": "578982689941701",
      "elapsedTime": "86463",
      "asyncId": 3004,
      "triggerAsyncId": 3003,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1606
    },
    "1607": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982690764844",
      "endTime": "578982709675473",
      "elapsedTime": "18910629",
      "asyncId": 3005,
      "triggerAsyncId": 2622,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        3013
      ],
      "uniqueid": 1607
    },
    "1608": {
      "source": "node_modules/jest-jasmine2/build/PCancelable.js:40:5:40:5",
      "startTime": "578982691046882",
      "endTime": "578982691060047",
      "elapsedTime": "13165",
      "asyncId": 3006,
      "triggerAsyncId": 2622,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " new PCancelable",
      "userCode": false,
      "line": "\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);",
      "startLine": 40,
      "startCol": 5,
      "endLine": 40,
      "endCol": 5,
      "file": "node_modules/jest-jasmine2/build/PCancelable.js",
      "triggers": [],
      "uniqueid": 1608
    },
    "1609": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:76:13:76:13",
      "startTime": "578982691510611",
      "endTime": "578982691521943",
      "elapsedTime": "11332",
      "asyncId": 3008,
      "triggerAsyncId": 2622,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " queueRunner",
      "userCode": false,
      "line": "\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token)",
      "startLine": 76,
      "startCol": 13,
      "endLine": 76,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        3009,
        3009
      ],
      "uniqueid": 1609
    },
    "1610": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982691767894",
      "endTime": "578982694546823",
      "elapsedTime": "2778929",
      "asyncId": 3009,
      "triggerAsyncId": 3008,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        3016,
        3019,
        3017,
        3021,
        3027,
        3010,
        3010
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1610
    },
    "1611": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:75:30:75:30",
      "startTime": "578982691991423",
      "endTime": "578982709589242",
      "elapsedTime": "17597819",
      "asyncId": 3010,
      "triggerAsyncId": 3009,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "triggers": [
        3031,
        3037,
        3030,
        3029,
        3028,
        3035,
        3039,
        3045,
        3011
      ],
      "line": "\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return ",
      "startLine": 75,
      "startCol": 30,
      "endLine": 75,
      "endCol": 30,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "uniqueid": 1611
    },
    "1612": {
      "source": "node_modules/jest-jasmine2/build/jasmine/Spec.js:182:21:182:21",
      "startTime": "578982692190957",
      "endTime": "578982709703696",
      "elapsedTime": "17512739",
      "asyncId": 3011,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Spec.execute",
      "userCode": false,
      "line": "\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain)",
      "startLine": 182,
      "startCol": 21,
      "endLine": 182,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmine/Spec.js",
      "triggers": [],
      "uniqueid": 1612
    },
    "1613": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982692337842",
      "endTime": "578982709726799",
      "elapsedTime": "17388957",
      "asyncId": 3012,
      "triggerAsyncId": 2622,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1613
    },
    "1614": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982692629008",
      "endTime": "578982692640910",
      "elapsedTime": "11902",
      "asyncId": 3014,
      "triggerAsyncId": 2622,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1614
    },
    "1615": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982692964517",
      "endTime": "578982692982310",
      "elapsedTime": "17793",
      "asyncId": 3016,
      "triggerAsyncId": 3009,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        3018
      ],
      "uniqueid": 1615
    },
    "1616": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982693132121",
      "endTime": "578982694194202",
      "elapsedTime": "1062081",
      "asyncId": 3017,
      "triggerAsyncId": 3009,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        3023
      ],
      "uniqueid": 1616
    },
    "1617": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982693391097",
      "endTime": "578982693402278",
      "elapsedTime": "11181",
      "asyncId": 3019,
      "triggerAsyncId": 3009,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1617
    },
    "1618": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982693694906",
      "endTime": "578982694486620",
      "elapsedTime": "791714",
      "asyncId": 3021,
      "triggerAsyncId": 3009,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1618
    },
    "1619": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982693892296",
      "endTime": "578982694512850",
      "elapsedTime": "620554",
      "asyncId": 3023,
      "triggerAsyncId": 3017,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1619
    },
    "1620": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:28:19:28:19",
      "startTime": "578982694712163",
      "endTime": "578982709438970",
      "elapsedTime": "14726807",
      "asyncId": 3028,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];",
      "startLine": 28,
      "startCol": 19,
      "endLine": 28,
      "endCol": 19,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        3036
      ],
      "uniqueid": 1620
    },
    "1621": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982694986357",
      "endTime": "578982709380110",
      "elapsedTime": "14393753",
      "asyncId": 3029,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [
        3034
      ],
      "uniqueid": 1621
    },
    "1622": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:517:36:517:36",
      "startTime": "578982695271953",
      "endTime": "578982703145112",
      "elapsedTime": "7873159",
      "asyncId": 3030,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "triggers": [
        3042,
        3068,
        3033
      ],
      "line": "\n        totalLinesAccountingSchemeCurrency: 1000,\n      } as any;\n      const result = await service.save(mockEntityManager, args, {\n        id: 1,\n      } as any);\n      const xml = service.exportToXml(",
      "startLine": 517,
      "startCol": 36,
      "endLine": 517,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "uniqueid": 1622
    },
    "1623": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:71:37:71:37",
      "startTime": "578982695500561",
      "endTime": "578982695512133",
      "elapsedTime": "11572",
      "asyncId": 3031,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args",
      "startLine": 71,
      "startCol": 37,
      "endLine": 71,
      "endCol": 37,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [
        3032
      ],
      "uniqueid": 1623
    },
    "1624": {
      "source": "apps/api/src/model/lib/sales.invoice.service.spec.ts:517:36:517:36",
      "startTime": "578982695740791",
      "endTime": "578982697369605",
      "elapsedTime": "1628814",
      "asyncId": 3032,
      "triggerAsyncId": 3031,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.<anonymous>",
      "userCode": false,
      "line": "\n        totalLinesAccountingSchemeCurrency: 1000,\n      } as any;\n      const result = await service.save(mockEntityManager, args, {\n        id: 1,\n      } as any);\n      const xml = service.exportToXml(",
      "startLine": 517,
      "startCol": 36,
      "endLine": 517,
      "endCol": 36,
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "triggers": [],
      "uniqueid": 1624
    },
    "1625": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:106:37:106:37",
      "startTime": "578982695921019",
      "endTime": "578982709413873",
      "elapsedTime": "13492854",
      "asyncId": 3033,
      "triggerAsyncId": 3030,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => ",
      "startLine": 106,
      "startCol": 37,
      "endLine": 106,
      "endCol": 37,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1625
    },
    "1626": {
      "source": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:109:21:109:21",
      "startTime": "578982696089214",
      "endTime": "578982709461242",
      "elapsedTime": "13372028",
      "asyncId": 3034,
      "triggerAsyncId": 3029,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " Object.asyncJestTest",
      "userCode": false,
      "line": "\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) ",
      "startLine": 109,
      "startCol": 21,
      "endLine": 109,
      "endCol": 21,
      "file": "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js",
      "triggers": [],
      "uniqueid": 1626
    },
    "1627": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982696220801",
      "endTime": "578982709483123",
      "elapsedTime": "13262322",
      "asyncId": 3035,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [
        3041
      ],
      "uniqueid": 1627
    },
    "1628": {
      "source": "node_modules/jest-jasmine2/build/queueRunner.js:51:23:51:23",
      "startTime": "578982696480759",
      "endTime": "578982696491940",
      "elapsedTime": "11181",
      "asyncId": 3037,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " mapper",
      "userCode": false,
      "line": "\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise",
      "startLine": 51,
      "startCol": 23,
      "endLine": 51,
      "endCol": 23,
      "file": "node_modules/jest-jasmine2/build/queueRunner.js",
      "triggers": [],
      "uniqueid": 1628
    },
    "1629": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:20:10:20:10",
      "startTime": "578982696779318",
      "endTime": "578982709533116",
      "elapsedTime": "12753798",
      "asyncId": 3039,
      "triggerAsyncId": 3010,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " pTimeout",
      "userCode": false,
      "line": "\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => ",
      "startLine": 20,
      "startCol": 10,
      "endLine": 20,
      "endCol": 10,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1629
    },
    "1630": {
      "source": "node_modules/jest-jasmine2/build/pTimeout.js:22:13:22:13",
      "startTime": "578982696976979",
      "endTime": "578982709555538",
      "elapsedTime": "12578559",
      "asyncId": 3041,
      "triggerAsyncId": 3035,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val)",
      "startLine": 22,
      "startCol": 13,
      "endLine": 22,
      "endCol": 13,
      "file": "node_modules/jest-jasmine2/build/pTimeout.js",
      "triggers": [],
      "uniqueid": 1630
    },
    "1631": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982697174559",
      "endTime": "578982697342314",
      "elapsedTime": "167755",
      "asyncId": 3042,
      "triggerAsyncId": 3030,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3043
      ],
      "uniqueid": 1631
    },
    "1632": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982697330271",
      "endTime": "578982698369099",
      "elapsedTime": "1038828",
      "asyncId": 3043,
      "triggerAsyncId": 3042,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "triggers": [
        3047,
        3046
      ],
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "uniqueid": 1632
    },
    "1633": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982697790664",
      "endTime": "578982702733260",
      "elapsedTime": "4942596",
      "asyncId": 3046,
      "triggerAsyncId": 3043,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "triggers": [
        3050,
        3052,
        3054,
        3066,
        3049
      ],
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "uniqueid": 1633
    },
    "1634": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:304:37:304:37",
      "startTime": "578982697988926",
      "endTime": "578982698011328",
      "elapsedTime": "22402",
      "asyncId": 3047,
      "triggerAsyncId": 3043,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n        ['legalAddress', 'legalAddress.country'],\n      ));\n    const organization = await this.getOrganization(\n      transactionalEntityManager,\n      args,\n    )",
      "startLine": 304,
      "startCol": 37,
      "endLine": 304,
      "endCol": 37,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        3048
      ],
      "uniqueid": 1634
    },
    "1635": {
      "source": "apps/api/src/model/lib/base.entity.service.ts:83:34:83:34",
      "startTime": "578982698208327",
      "endTime": "578982698779057",
      "elapsedTime": "570730",
      "asyncId": 3048,
      "triggerAsyncId": 3047,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.save",
      "userCode": false,
      "line": "\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity",
      "startLine": 83,
      "startCol": 34,
      "endLine": 83,
      "endCol": 34,
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "triggers": [],
      "uniqueid": 1635
    },
    "1636": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982698357306",
      "endTime": "578982703114785",
      "elapsedTime": "4757479",
      "asyncId": 3049,
      "triggerAsyncId": 3046,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1636
    },
    "1637": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982698567130",
      "endTime": "578982698746716",
      "elapsedTime": "179586",
      "asyncId": 3050,
      "triggerAsyncId": 3046,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3051
      ],
      "uniqueid": 1637
    },
    "1638": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982698735065",
      "endTime": "578982699195087",
      "elapsedTime": "460022",
      "asyncId": 3051,
      "triggerAsyncId": 3050,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1638
    },
    "1639": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982698974804",
      "endTime": "578982699168377",
      "elapsedTime": "193573",
      "asyncId": 3052,
      "triggerAsyncId": 3046,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3053
      ],
      "uniqueid": 1639
    },
    "1640": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982699155182",
      "endTime": "578982699668584",
      "elapsedTime": "513402",
      "asyncId": 3053,
      "triggerAsyncId": 3052,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1640
    },
    "1641": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982699460414",
      "endTime": "578982699641925",
      "elapsedTime": "181511",
      "asyncId": 3054,
      "triggerAsyncId": 3046,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3055
      ],
      "uniqueid": 1641
    },
    "1642": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982699630363",
      "endTime": "578982700612694",
      "elapsedTime": "982331",
      "asyncId": 3055,
      "triggerAsyncId": 3054,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3056
      ],
      "uniqueid": 1642
    },
    "1643": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982699880311",
      "endTime": "578982700644033",
      "elapsedTime": "763722",
      "asyncId": 3056,
      "triggerAsyncId": 3055,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        3057,
        3059
      ],
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1643
    },
    "1644": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982700120351",
      "endTime": "578982700379006",
      "elapsedTime": "258655",
      "asyncId": 3057,
      "triggerAsyncId": 3056,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        3058
      ],
      "uniqueid": 1644
    },
    "1645": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:390:16:390:16",
      "startTime": "578982700366653",
      "endTime": "578982700669440",
      "elapsedTime": "302787",
      "asyncId": 3058,
      "triggerAsyncId": 3057,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;",
      "startLine": 390,
      "startCol": 16,
      "endLine": 390,
      "endCol": 16,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1645
    },
    "1646": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982700599760",
      "endTime": "578982701650900",
      "elapsedTime": "1051140",
      "asyncId": 3059,
      "triggerAsyncId": 3056,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3060
      ],
      "uniqueid": 1646
    },
    "1647": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982700934387",
      "endTime": "578982702268168",
      "elapsedTime": "1333781",
      "asyncId": 3060,
      "triggerAsyncId": 3059,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "triggers": [
        3061,
        3064,
        3063
      ],
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "uniqueid": 1647
    },
    "1648": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982701175349",
      "endTime": "578982701426359",
      "elapsedTime": "251010",
      "asyncId": 3061,
      "triggerAsyncId": 3060,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [
        3062
      ],
      "uniqueid": 1648
    },
    "1649": {
      "source": "apps/api/src/model/lib/sales.invoice.service.ts:416:31:416:31",
      "startTime": "578982701414668",
      "endTime": "578982702219146",
      "elapsedTime": "804478",
      "asyncId": 3062,
      "triggerAsyncId": 3061,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " SalesInvoiceService.doSave",
      "userCode": false,
      "line": "\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser",
      "startLine": 416,
      "startCol": 31,
      "endLine": 416,
      "endCol": 31,
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "triggers": [],
      "uniqueid": 1649
    },
    "1650": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982701637946",
      "endTime": "578982702710507",
      "elapsedTime": "1072561",
      "asyncId": 3063,
      "triggerAsyncId": 3060,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1650
    },
    "1651": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982701922420",
      "endTime": "578982702191253",
      "elapsedTime": "268833",
      "asyncId": 3064,
      "triggerAsyncId": 3060,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3065
      ],
      "uniqueid": 1651
    },
    "1652": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982702179321",
      "endTime": "578982702293705",
      "elapsedTime": "114384",
      "asyncId": 3065,
      "triggerAsyncId": 3064,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1652
    },
    "1653": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982702506985",
      "endTime": "578982702684779",
      "elapsedTime": "177794",
      "asyncId": 3066,
      "triggerAsyncId": 3046,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3067
      ],
      "uniqueid": 1653
    },
    "1654": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982702673748",
      "endTime": "578982702755030",
      "elapsedTime": "81282",
      "asyncId": 3067,
      "triggerAsyncId": 3066,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1654
    },
    "1655": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982702924849",
      "endTime": "578982703088465",
      "elapsedTime": "163616",
      "asyncId": 3068,
      "triggerAsyncId": 3030,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [
        3069
      ],
      "uniqueid": 1655
    },
    "1656": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982703077054",
      "endTime": "578982703168606",
      "elapsedTime": "91552",
      "asyncId": 3069,
      "triggerAsyncId": 3068,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1656
    },
    "1657": {
      "source": "node_modules/jest-runner/build/runTest.js:442:12:442:12",
      "startTime": "578982712325291",
      "endTime": "578982713876398",
      "elapsedTime": "1551107",
      "asyncId": 3071,
      "triggerAsyncId": 2003,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    } // Delay the resolution to allow log messages to be output.\n\n    return new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector",
      "startLine": 442,
      "startCol": 12,
      "endLine": 442,
      "endCol": 12,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        3075
      ],
      "uniqueid": 1657
    },
    "1658": {
      "source": "node_modules/jest-runner/build/runTest.js:453:23:453:23",
      "startTime": "578982712709250",
      "endTime": "578982712780634",
      "elapsedTime": "71384",
      "asyncId": 3073,
      "triggerAsyncId": 2003,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " runTestInternal",
      "userCode": false,
      "line": "\n    var _runtime$teardown;\n\n    await environment.teardown(); // TODO: this function might be missing, remove ? in Jest 26\n\n    (_runtime$teardown = runtime.teardown) === null ||\n    _runtime$teardown === void ",
      "startLine": 453,
      "startCol": 23,
      "endLine": 453,
      "endCol": 23,
      "file": "node_modules/jest-runner/build/runTest.js",
      "triggers": [
        3074
      ],
      "uniqueid": 1658
    },
    "1659": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982712954690",
      "endTime": "578982713332289",
      "elapsedTime": "377599",
      "asyncId": 3074,
      "triggerAsyncId": 3073,
      "io": false,
      "createdIn": 1625855249425,
      "functionName": " processTicksAndRejections",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1659
    },
    "1660": {
      "source": "(/internal/process/task_queues:96:5:96:5)",
      "startTime": "578982713478883",
      "endTime": "578982713930310",
      "elapsedTime": "451427",
      "asyncId": 3075,
      "triggerAsyncId": 3071,
      "io": "",
      "createdIn": 1625855249425,
      "functionName": "",
      "userCode": false,
      "line": "<promise not in user code>",
      "startLine": 0,
      "startCol": 0,
      "endLine": 0,
      "endCol": 0,
      "file": "",
      "triggers": [],
      "uniqueid": 1660
    }
  },
  "antipatterns": {
    "0": {
      "patternID": "pattern2",
      "file": "absorb/SMCloudStore/backblaze-b2/src/B2Upload.ts",
      "startLine": "292",
      "startCol": "16",
      "endLine": "318",
      "endCol": "14"
    },
    "1": {
      "patternID": "pattern2",
      "file": "absorb/SMCloudStore/backblaze-b2/src/BackblazeB2Provider.ts",
      "startLine": "147",
      "startCol": "16",
      "endLine": "148",
      "endCol": "49"
    },
    "2": {
      "patternID": "pattern2",
      "file": "absorb/SMCloudStore/backblaze-b2/src/BackblazeB2Provider.ts",
      "startLine": "188",
      "startCol": "16",
      "endLine": "190",
      "endCol": "49"
    },
    "3": {
      "patternID": "pattern2",
      "file": "absorb/SMCloudStore/backblaze-b2/src/BackblazeB2Provider.ts",
      "startLine": "283",
      "startCol": "16",
      "endLine": "284",
      "endCol": "49"
    },
    "4": {
      "patternID": "pattern2",
      "file": "absorb/SMCloudStore/backblaze-b2/src/BackblazeB2Provider.ts",
      "startLine": "306",
      "startCol": "16",
      "endLine": "307",
      "endCol": "49"
    },
    "5": {
      "patternID": "pattern2",
      "file": "absorb/SMCloudStore/backblaze-b2/src/BackblazeB2Provider.ts",
      "startLine": "382",
      "startCol": "16",
      "endLine": "383",
      "endCol": "51"
    },
    "6": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "183",
      "startCol": "5",
      "endLine": "204",
      "endCol": "5"
    },
    "7": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "213",
      "startCol": "5",
      "endLine": "240",
      "endCol": "5"
    },
    "8": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "267",
      "startCol": "5",
      "endLine": "283",
      "endCol": "5"
    },
    "9": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "292",
      "startCol": "5",
      "endLine": "305",
      "endCol": "5"
    },
    "10": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "317",
      "startCol": "5",
      "endLine": "343",
      "endCol": "5"
    },
    "11": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "393",
      "startCol": "29",
      "endLine": "438",
      "endCol": "9"
    },
    "12": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "451",
      "startCol": "5",
      "endLine": "466",
      "endCol": "5"
    },
    "13": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "507",
      "startCol": "5",
      "endLine": "531",
      "endCol": "5"
    },
    "14": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts",
      "startLine": "135",
      "startCol": "5",
      "endLine": "152",
      "endCol": "5"
    },
    "15": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts",
      "startLine": "178",
      "startCol": "32",
      "endLine": "210",
      "endCol": "9"
    },
    "16": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts",
      "startLine": "222",
      "startCol": "5",
      "endLine": "236",
      "endCol": "5"
    },
    "17": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts",
      "startLine": "248",
      "startCol": "5",
      "endLine": "282",
      "endCol": "5"
    },
    "18": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts",
      "startLine": "323",
      "startCol": "32",
      "endLine": "378",
      "endCol": "9"
    },
    "19": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts",
      "startLine": "396",
      "startCol": "5",
      "endLine": "410",
      "endCol": "5"
    },
    "20": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts",
      "startLine": "489",
      "startCol": "5",
      "endLine": "524",
      "endCol": "5"
    },
    "21": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/core/src/StreamUtils.ts",
      "startLine": "32",
      "startCol": "8",
      "endLine": "45",
      "endCol": "1"
    },
    "22": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/core/src/StreamUtils.ts",
      "startLine": "78",
      "startCol": "8",
      "endLine": "118",
      "endCol": "1"
    },
    "23": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/core/src/Utils.ts",
      "startLine": "10",
      "startCol": "8",
      "endLine": "14",
      "endCol": "1"
    },
    "24": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/generic-s3/src/GenericS3Provider.ts",
      "startLine": "133",
      "startCol": "5",
      "endLine": "167",
      "endCol": "5"
    },
    "25": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/google-cloud-storage/src/GoogleCloudStorageProvider.ts",
      "startLine": "177",
      "startCol": "5",
      "endLine": "236",
      "endCol": "5"
    },
    "26": {
      "patternID": "pattern5",
      "file": "absorb/SMCloudStore/google-cloud-storage/src/GoogleCloudStorageProvider.ts",
      "startLine": "264",
      "startCol": "32",
      "endLine": "324",
      "endCol": "9"
    },
    "27": {
      "patternID": "pattern5",
      "file": "apps/api/src/model/lib/reports.service.ts",
      "startLine": "284",
      "startCol": "1",
      "endLine": "308",
      "endCol": "1"
    },
    "28": {
      "patternID": "pattern3",
      "file": "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts",
      "startLine": "377",
      "startCol": "22",
      "endLine": "377",
      "endCol": "74"
    },
    "29": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/app.controller.spec.ts",
      "startLine": "10",
      "startCol": "11",
      "endLine": "13",
      "endCol": "16"
    },
    "30": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/app.controller.spec.ts",
      "startLine": "19",
      "startCol": "14",
      "endLine": "19",
      "endCol": "42"
    },
    "31": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/app.service.spec.ts",
      "startLine": "9",
      "startCol": "17",
      "endLine": "11",
      "endCol": "16"
    },
    "32": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/custom/custom.sales.invoice.service.ts",
      "startLine": "17",
      "startCol": "24",
      "endLine": "25",
      "endCol": "18"
    },
    "33": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/custom/custom.save.args.validation.service.ts",
      "startLine": "18",
      "startCol": "7",
      "endLine": "18",
      "endCol": "76"
    },
    "34": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migration.service.ts",
      "startLine": "11",
      "startCol": "5",
      "endLine": "13",
      "endCol": "6"
    },
    "35": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "36": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "37": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "38": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "39": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "40": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "22",
      "startCol": "5",
      "endLine": "24",
      "endCol": "5"
    },
    "41": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "25",
      "startCol": "5",
      "endLine": "27",
      "endCol": "5"
    },
    "42": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "28",
      "startCol": "5",
      "endLine": "30",
      "endCol": "5"
    },
    "43": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "31",
      "startCol": "5",
      "endLine": "33",
      "endCol": "5"
    },
    "44": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "34",
      "startCol": "5",
      "endLine": "36",
      "endCol": "5"
    },
    "45": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "37",
      "startCol": "5",
      "endLine": "39",
      "endCol": "5"
    },
    "46": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "40",
      "startCol": "5",
      "endLine": "42",
      "endCol": "5"
    },
    "47": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "43",
      "startCol": "5",
      "endLine": "45",
      "endCol": "5"
    },
    "48": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "46",
      "startCol": "5",
      "endLine": "48",
      "endCol": "5"
    },
    "49": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "49",
      "startCol": "5",
      "endLine": "51",
      "endCol": "5"
    },
    "50": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "52",
      "startCol": "5",
      "endLine": "54",
      "endCol": "5"
    },
    "51": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "55",
      "startCol": "5",
      "endLine": "57",
      "endCol": "5"
    },
    "52": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "58",
      "startCol": "5",
      "endLine": "60",
      "endCol": "5"
    },
    "53": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "61",
      "startCol": "5",
      "endLine": "63",
      "endCol": "5"
    },
    "54": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "64",
      "startCol": "5",
      "endLine": "66",
      "endCol": "5"
    },
    "55": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "67",
      "startCol": "5",
      "endLine": "69",
      "endCol": "5"
    },
    "56": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "70",
      "startCol": "5",
      "endLine": "72",
      "endCol": "5"
    },
    "57": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "73",
      "startCol": "5",
      "endLine": "75",
      "endCol": "5"
    },
    "58": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "76",
      "startCol": "5",
      "endLine": "78",
      "endCol": "5"
    },
    "59": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "79",
      "startCol": "5",
      "endLine": "81",
      "endCol": "5"
    },
    "60": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "82",
      "startCol": "5",
      "endLine": "84",
      "endCol": "5"
    },
    "61": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "85",
      "startCol": "5",
      "endLine": "87",
      "endCol": "5"
    },
    "62": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "88",
      "startCol": "5",
      "endLine": "90",
      "endCol": "5"
    },
    "63": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "91",
      "startCol": "5",
      "endLine": "93",
      "endCol": "5"
    },
    "64": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "94",
      "startCol": "5",
      "endLine": "96",
      "endCol": "5"
    },
    "65": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "97",
      "startCol": "5",
      "endLine": "99",
      "endCol": "5"
    },
    "66": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "100",
      "startCol": "5",
      "endLine": "102",
      "endCol": "5"
    },
    "67": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "103",
      "startCol": "5",
      "endLine": "105",
      "endCol": "5"
    },
    "68": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "106",
      "startCol": "5",
      "endLine": "108",
      "endCol": "5"
    },
    "69": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "109",
      "startCol": "5",
      "endLine": "111",
      "endCol": "5"
    },
    "70": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "112",
      "startCol": "5",
      "endLine": "114",
      "endCol": "5"
    },
    "71": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "115",
      "startCol": "5",
      "endLine": "117",
      "endCol": "5"
    },
    "72": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "118",
      "startCol": "5",
      "endLine": "120",
      "endCol": "5"
    },
    "73": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "121",
      "startCol": "5",
      "endLine": "123",
      "endCol": "5"
    },
    "74": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "124",
      "startCol": "5",
      "endLine": "126",
      "endCol": "5"
    },
    "75": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "127",
      "startCol": "5",
      "endLine": "129",
      "endCol": "5"
    },
    "76": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "130",
      "startCol": "5",
      "endLine": "132",
      "endCol": "5"
    },
    "77": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "133",
      "startCol": "5",
      "endLine": "135",
      "endCol": "5"
    },
    "78": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "136",
      "startCol": "5",
      "endLine": "138",
      "endCol": "5"
    },
    "79": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "139",
      "startCol": "5",
      "endLine": "141",
      "endCol": "5"
    },
    "80": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "142",
      "startCol": "5",
      "endLine": "144",
      "endCol": "5"
    },
    "81": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "145",
      "startCol": "5",
      "endLine": "147",
      "endCol": "5"
    },
    "82": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "148",
      "startCol": "5",
      "endLine": "150",
      "endCol": "5"
    },
    "83": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "151",
      "startCol": "5",
      "endLine": "153",
      "endCol": "5"
    },
    "84": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "154",
      "startCol": "5",
      "endLine": "156",
      "endCol": "5"
    },
    "85": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "157",
      "startCol": "5",
      "endLine": "159",
      "endCol": "5"
    },
    "86": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "160",
      "startCol": "5",
      "endLine": "162",
      "endCol": "5"
    },
    "87": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "163",
      "startCol": "5",
      "endLine": "165",
      "endCol": "5"
    },
    "88": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "166",
      "startCol": "5",
      "endLine": "168",
      "endCol": "5"
    },
    "89": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "169",
      "startCol": "5",
      "endLine": "171",
      "endCol": "5"
    },
    "90": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "172",
      "startCol": "5",
      "endLine": "174",
      "endCol": "5"
    },
    "91": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "175",
      "startCol": "5",
      "endLine": "177",
      "endCol": "5"
    },
    "92": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "178",
      "startCol": "5",
      "endLine": "180",
      "endCol": "5"
    },
    "93": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "181",
      "startCol": "5",
      "endLine": "183",
      "endCol": "5"
    },
    "94": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "184",
      "startCol": "5",
      "endLine": "186",
      "endCol": "5"
    },
    "95": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "187",
      "startCol": "5",
      "endLine": "189",
      "endCol": "5"
    },
    "96": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "190",
      "startCol": "5",
      "endLine": "192",
      "endCol": "5"
    },
    "97": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "193",
      "startCol": "5",
      "endLine": "195",
      "endCol": "5"
    },
    "98": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "196",
      "startCol": "5",
      "endLine": "198",
      "endCol": "5"
    },
    "99": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "199",
      "startCol": "5",
      "endLine": "201",
      "endCol": "5"
    },
    "100": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "205",
      "startCol": "5",
      "endLine": "207",
      "endCol": "5"
    },
    "101": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "208",
      "startCol": "5",
      "endLine": "210",
      "endCol": "5"
    },
    "102": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "211",
      "startCol": "5",
      "endLine": "213",
      "endCol": "5"
    },
    "103": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "214",
      "startCol": "5",
      "endLine": "216",
      "endCol": "5"
    },
    "104": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "217",
      "startCol": "5",
      "endLine": "219",
      "endCol": "5"
    },
    "105": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "220",
      "startCol": "5",
      "endLine": "222",
      "endCol": "5"
    },
    "106": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "223",
      "startCol": "5",
      "endLine": "225",
      "endCol": "5"
    },
    "107": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "226",
      "startCol": "5",
      "endLine": "228",
      "endCol": "5"
    },
    "108": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "229",
      "startCol": "5",
      "endLine": "231",
      "endCol": "5"
    },
    "109": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "232",
      "startCol": "5",
      "endLine": "234",
      "endCol": "5"
    },
    "110": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "235",
      "startCol": "5",
      "endLine": "237",
      "endCol": "5"
    },
    "111": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "238",
      "startCol": "5",
      "endLine": "240",
      "endCol": "5"
    },
    "112": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "241",
      "startCol": "5",
      "endLine": "243",
      "endCol": "5"
    },
    "113": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "244",
      "startCol": "5",
      "endLine": "246",
      "endCol": "5"
    },
    "114": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "247",
      "startCol": "5",
      "endLine": "249",
      "endCol": "5"
    },
    "115": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "250",
      "startCol": "5",
      "endLine": "252",
      "endCol": "5"
    },
    "116": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "253",
      "startCol": "5",
      "endLine": "255",
      "endCol": "5"
    },
    "117": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "256",
      "startCol": "5",
      "endLine": "258",
      "endCol": "5"
    },
    "118": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "259",
      "startCol": "5",
      "endLine": "261",
      "endCol": "5"
    },
    "119": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "262",
      "startCol": "5",
      "endLine": "264",
      "endCol": "5"
    },
    "120": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "265",
      "startCol": "5",
      "endLine": "267",
      "endCol": "5"
    },
    "121": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "268",
      "startCol": "5",
      "endLine": "270",
      "endCol": "5"
    },
    "122": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "271",
      "startCol": "5",
      "endLine": "273",
      "endCol": "5"
    },
    "123": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "274",
      "startCol": "5",
      "endLine": "274",
      "endCol": "77"
    },
    "124": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "275",
      "startCol": "5",
      "endLine": "275",
      "endCol": "73"
    },
    "125": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "276",
      "startCol": "5",
      "endLine": "276",
      "endCol": "61"
    },
    "126": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "277",
      "startCol": "5",
      "endLine": "279",
      "endCol": "5"
    },
    "127": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "280",
      "startCol": "5",
      "endLine": "280",
      "endCol": "70"
    },
    "128": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "281",
      "startCol": "5",
      "endLine": "283",
      "endCol": "5"
    },
    "129": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "284",
      "startCol": "5",
      "endLine": "284",
      "endCol": "61"
    },
    "130": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "285",
      "startCol": "5",
      "endLine": "285",
      "endCol": "66"
    },
    "131": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "286",
      "startCol": "5",
      "endLine": "286",
      "endCol": "70"
    },
    "132": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "287",
      "startCol": "5",
      "endLine": "287",
      "endCol": "71"
    },
    "133": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "288",
      "startCol": "5",
      "endLine": "290",
      "endCol": "5"
    },
    "134": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "291",
      "startCol": "5",
      "endLine": "293",
      "endCol": "5"
    },
    "135": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "294",
      "startCol": "5",
      "endLine": "294",
      "endCol": "60"
    },
    "136": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "295",
      "startCol": "5",
      "endLine": "295",
      "endCol": "56"
    },
    "137": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "296",
      "startCol": "5",
      "endLine": "298",
      "endCol": "5"
    },
    "138": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "299",
      "startCol": "5",
      "endLine": "299",
      "endCol": "65"
    },
    "139": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "300",
      "startCol": "5",
      "endLine": "302",
      "endCol": "5"
    },
    "140": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "303",
      "startCol": "5",
      "endLine": "305",
      "endCol": "5"
    },
    "141": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "306",
      "startCol": "5",
      "endLine": "306",
      "endCol": "65"
    },
    "142": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "307",
      "startCol": "5",
      "endLine": "307",
      "endCol": "73"
    },
    "143": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "308",
      "startCol": "5",
      "endLine": "310",
      "endCol": "5"
    },
    "144": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "311",
      "startCol": "5",
      "endLine": "313",
      "endCol": "5"
    },
    "145": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "314",
      "startCol": "5",
      "endLine": "316",
      "endCol": "5"
    },
    "146": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "317",
      "startCol": "5",
      "endLine": "317",
      "endCol": "57"
    },
    "147": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "318",
      "startCol": "5",
      "endLine": "320",
      "endCol": "5"
    },
    "148": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "321",
      "startCol": "5",
      "endLine": "323",
      "endCol": "5"
    },
    "149": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "324",
      "startCol": "5",
      "endLine": "324",
      "endCol": "66"
    },
    "150": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "325",
      "startCol": "5",
      "endLine": "325",
      "endCol": "60"
    },
    "151": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "326",
      "startCol": "5",
      "endLine": "328",
      "endCol": "5"
    },
    "152": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "329",
      "startCol": "5",
      "endLine": "331",
      "endCol": "5"
    },
    "153": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "332",
      "startCol": "5",
      "endLine": "334",
      "endCol": "5"
    },
    "154": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "335",
      "startCol": "5",
      "endLine": "335",
      "endCol": "61"
    },
    "155": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "336",
      "startCol": "5",
      "endLine": "338",
      "endCol": "5"
    },
    "156": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "339",
      "startCol": "5",
      "endLine": "341",
      "endCol": "5"
    },
    "157": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "342",
      "startCol": "5",
      "endLine": "342",
      "endCol": "60"
    },
    "158": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "343",
      "startCol": "5",
      "endLine": "343",
      "endCol": "77"
    },
    "159": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "344",
      "startCol": "5",
      "endLine": "346",
      "endCol": "5"
    },
    "160": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "347",
      "startCol": "5",
      "endLine": "347",
      "endCol": "57"
    },
    "161": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635320-CreateDB.ts",
      "startLine": "348",
      "startCol": "5",
      "endLine": "348",
      "endCol": "66"
    },
    "162": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635326-Language.ts",
      "startLine": "14",
      "startCol": "27",
      "endLine": "14",
      "endCol": "63"
    },
    "163": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1595508635328-CreateAnAddress.ts",
      "startLine": "14",
      "startCol": "27",
      "endLine": "14",
      "endCol": "63"
    },
    "164": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1609846660789-InvoicesContent.ts",
      "startLine": "12",
      "startCol": "5",
      "endLine": "12",
      "endCol": "41"
    },
    "165": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "166": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "167": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "168": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "169": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "170": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "22",
      "startCol": "5",
      "endLine": "24",
      "endCol": "5"
    },
    "171": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "25",
      "startCol": "5",
      "endLine": "27",
      "endCol": "5"
    },
    "172": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "28",
      "startCol": "5",
      "endLine": "30",
      "endCol": "5"
    },
    "173": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "31",
      "startCol": "5",
      "endLine": "33",
      "endCol": "5"
    },
    "174": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "34",
      "startCol": "5",
      "endLine": "36",
      "endCol": "5"
    },
    "175": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "37",
      "startCol": "5",
      "endLine": "39",
      "endCol": "5"
    },
    "176": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "40",
      "startCol": "5",
      "endLine": "42",
      "endCol": "5"
    },
    "177": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "43",
      "startCol": "5",
      "endLine": "45",
      "endCol": "5"
    },
    "178": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "46",
      "startCol": "5",
      "endLine": "48",
      "endCol": "5"
    },
    "179": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "49",
      "startCol": "5",
      "endLine": "51",
      "endCol": "5"
    },
    "180": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "52",
      "startCol": "5",
      "endLine": "54",
      "endCol": "5"
    },
    "181": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "55",
      "startCol": "5",
      "endLine": "57",
      "endCol": "5"
    },
    "182": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "58",
      "startCol": "5",
      "endLine": "60",
      "endCol": "5"
    },
    "183": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "61",
      "startCol": "5",
      "endLine": "63",
      "endCol": "5"
    },
    "184": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "64",
      "startCol": "5",
      "endLine": "66",
      "endCol": "5"
    },
    "185": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "67",
      "startCol": "5",
      "endLine": "69",
      "endCol": "5"
    },
    "186": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "70",
      "startCol": "5",
      "endLine": "72",
      "endCol": "5"
    },
    "187": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "73",
      "startCol": "5",
      "endLine": "75",
      "endCol": "5"
    },
    "188": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "76",
      "startCol": "5",
      "endLine": "78",
      "endCol": "5"
    },
    "189": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "79",
      "startCol": "5",
      "endLine": "81",
      "endCol": "5"
    },
    "190": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "82",
      "startCol": "5",
      "endLine": "84",
      "endCol": "5"
    },
    "191": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "85",
      "startCol": "5",
      "endLine": "87",
      "endCol": "5"
    },
    "192": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "88",
      "startCol": "5",
      "endLine": "90",
      "endCol": "5"
    },
    "193": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "91",
      "startCol": "5",
      "endLine": "93",
      "endCol": "5"
    },
    "194": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "94",
      "startCol": "5",
      "endLine": "96",
      "endCol": "5"
    },
    "195": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "97",
      "startCol": "5",
      "endLine": "99",
      "endCol": "5"
    },
    "196": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "100",
      "startCol": "5",
      "endLine": "102",
      "endCol": "5"
    },
    "197": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "103",
      "startCol": "5",
      "endLine": "105",
      "endCol": "5"
    },
    "198": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "106",
      "startCol": "5",
      "endLine": "108",
      "endCol": "5"
    },
    "199": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "109",
      "startCol": "5",
      "endLine": "111",
      "endCol": "5"
    },
    "200": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "112",
      "startCol": "5",
      "endLine": "114",
      "endCol": "5"
    },
    "201": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "115",
      "startCol": "5",
      "endLine": "117",
      "endCol": "5"
    },
    "202": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "118",
      "startCol": "5",
      "endLine": "120",
      "endCol": "5"
    },
    "203": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "121",
      "startCol": "5",
      "endLine": "123",
      "endCol": "5"
    },
    "204": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "124",
      "startCol": "5",
      "endLine": "126",
      "endCol": "5"
    },
    "205": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "127",
      "startCol": "5",
      "endLine": "129",
      "endCol": "5"
    },
    "206": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "130",
      "startCol": "5",
      "endLine": "132",
      "endCol": "5"
    },
    "207": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "133",
      "startCol": "5",
      "endLine": "135",
      "endCol": "5"
    },
    "208": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "136",
      "startCol": "5",
      "endLine": "138",
      "endCol": "5"
    },
    "209": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "139",
      "startCol": "5",
      "endLine": "141",
      "endCol": "5"
    },
    "210": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "142",
      "startCol": "5",
      "endLine": "144",
      "endCol": "5"
    },
    "211": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "145",
      "startCol": "5",
      "endLine": "147",
      "endCol": "5"
    },
    "212": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "148",
      "startCol": "5",
      "endLine": "150",
      "endCol": "5"
    },
    "213": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "151",
      "startCol": "5",
      "endLine": "153",
      "endCol": "5"
    },
    "214": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "154",
      "startCol": "5",
      "endLine": "156",
      "endCol": "5"
    },
    "215": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "157",
      "startCol": "5",
      "endLine": "159",
      "endCol": "5"
    },
    "216": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "160",
      "startCol": "5",
      "endLine": "162",
      "endCol": "5"
    },
    "217": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "163",
      "startCol": "5",
      "endLine": "165",
      "endCol": "5"
    },
    "218": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "166",
      "startCol": "5",
      "endLine": "168",
      "endCol": "5"
    },
    "219": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "169",
      "startCol": "5",
      "endLine": "171",
      "endCol": "5"
    },
    "220": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "172",
      "startCol": "5",
      "endLine": "174",
      "endCol": "5"
    },
    "221": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "175",
      "startCol": "5",
      "endLine": "177",
      "endCol": "5"
    },
    "222": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "178",
      "startCol": "5",
      "endLine": "180",
      "endCol": "5"
    },
    "223": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "181",
      "startCol": "5",
      "endLine": "183",
      "endCol": "5"
    },
    "224": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "184",
      "startCol": "5",
      "endLine": "186",
      "endCol": "5"
    },
    "225": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "187",
      "startCol": "5",
      "endLine": "189",
      "endCol": "5"
    },
    "226": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "190",
      "startCol": "5",
      "endLine": "192",
      "endCol": "5"
    },
    "227": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "193",
      "startCol": "5",
      "endLine": "195",
      "endCol": "5"
    },
    "228": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "196",
      "startCol": "5",
      "endLine": "198",
      "endCol": "5"
    },
    "229": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "199",
      "startCol": "5",
      "endLine": "201",
      "endCol": "5"
    },
    "230": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "202",
      "startCol": "5",
      "endLine": "204",
      "endCol": "5"
    },
    "231": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "205",
      "startCol": "5",
      "endLine": "207",
      "endCol": "5"
    },
    "232": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "208",
      "startCol": "5",
      "endLine": "210",
      "endCol": "5"
    },
    "233": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "211",
      "startCol": "5",
      "endLine": "213",
      "endCol": "5"
    },
    "234": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "214",
      "startCol": "5",
      "endLine": "216",
      "endCol": "5"
    },
    "235": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "217",
      "startCol": "5",
      "endLine": "219",
      "endCol": "5"
    },
    "236": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "220",
      "startCol": "5",
      "endLine": "222",
      "endCol": "5"
    },
    "237": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "226",
      "startCol": "5",
      "endLine": "228",
      "endCol": "5"
    },
    "238": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "229",
      "startCol": "5",
      "endLine": "231",
      "endCol": "5"
    },
    "239": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "232",
      "startCol": "5",
      "endLine": "234",
      "endCol": "5"
    },
    "240": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "235",
      "startCol": "5",
      "endLine": "237",
      "endCol": "5"
    },
    "241": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "238",
      "startCol": "5",
      "endLine": "240",
      "endCol": "5"
    },
    "242": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "241",
      "startCol": "5",
      "endLine": "243",
      "endCol": "5"
    },
    "243": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "244",
      "startCol": "5",
      "endLine": "246",
      "endCol": "5"
    },
    "244": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "247",
      "startCol": "5",
      "endLine": "249",
      "endCol": "5"
    },
    "245": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "250",
      "startCol": "5",
      "endLine": "252",
      "endCol": "5"
    },
    "246": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "253",
      "startCol": "5",
      "endLine": "255",
      "endCol": "5"
    },
    "247": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "256",
      "startCol": "5",
      "endLine": "258",
      "endCol": "5"
    },
    "248": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "259",
      "startCol": "5",
      "endLine": "261",
      "endCol": "5"
    },
    "249": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "262",
      "startCol": "5",
      "endLine": "264",
      "endCol": "5"
    },
    "250": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "265",
      "startCol": "5",
      "endLine": "267",
      "endCol": "5"
    },
    "251": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "268",
      "startCol": "5",
      "endLine": "270",
      "endCol": "5"
    },
    "252": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "271",
      "startCol": "5",
      "endLine": "273",
      "endCol": "5"
    },
    "253": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "274",
      "startCol": "5",
      "endLine": "276",
      "endCol": "5"
    },
    "254": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "277",
      "startCol": "5",
      "endLine": "279",
      "endCol": "5"
    },
    "255": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "280",
      "startCol": "5",
      "endLine": "282",
      "endCol": "5"
    },
    "256": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "283",
      "startCol": "5",
      "endLine": "285",
      "endCol": "5"
    },
    "257": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "286",
      "startCol": "5",
      "endLine": "288",
      "endCol": "5"
    },
    "258": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "289",
      "startCol": "5",
      "endLine": "291",
      "endCol": "5"
    },
    "259": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "292",
      "startCol": "5",
      "endLine": "294",
      "endCol": "5"
    },
    "260": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "295",
      "startCol": "5",
      "endLine": "297",
      "endCol": "5"
    },
    "261": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "298",
      "startCol": "5",
      "endLine": "300",
      "endCol": "5"
    },
    "262": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "301",
      "startCol": "5",
      "endLine": "303",
      "endCol": "5"
    },
    "263": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "304",
      "startCol": "5",
      "endLine": "306",
      "endCol": "5"
    },
    "264": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "307",
      "startCol": "5",
      "endLine": "309",
      "endCol": "5"
    },
    "265": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "310",
      "startCol": "5",
      "endLine": "312",
      "endCol": "5"
    },
    "266": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "313",
      "startCol": "5",
      "endLine": "315",
      "endCol": "5"
    },
    "267": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "316",
      "startCol": "5",
      "endLine": "318",
      "endCol": "5"
    },
    "268": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "319",
      "startCol": "5",
      "endLine": "321",
      "endCol": "5"
    },
    "269": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "322",
      "startCol": "5",
      "endLine": "324",
      "endCol": "5"
    },
    "270": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "325",
      "startCol": "5",
      "endLine": "327",
      "endCol": "5"
    },
    "271": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "328",
      "startCol": "5",
      "endLine": "330",
      "endCol": "5"
    },
    "272": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "331",
      "startCol": "5",
      "endLine": "333",
      "endCol": "5"
    },
    "273": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "334",
      "startCol": "5",
      "endLine": "336",
      "endCol": "5"
    },
    "274": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "337",
      "startCol": "5",
      "endLine": "339",
      "endCol": "5"
    },
    "275": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "340",
      "startCol": "5",
      "endLine": "342",
      "endCol": "5"
    },
    "276": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "343",
      "startCol": "5",
      "endLine": "345",
      "endCol": "5"
    },
    "277": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "346",
      "startCol": "5",
      "endLine": "348",
      "endCol": "5"
    },
    "278": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "349",
      "startCol": "5",
      "endLine": "351",
      "endCol": "5"
    },
    "279": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "352",
      "startCol": "5",
      "endLine": "354",
      "endCol": "5"
    },
    "280": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "355",
      "startCol": "5",
      "endLine": "357",
      "endCol": "5"
    },
    "281": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "358",
      "startCol": "5",
      "endLine": "360",
      "endCol": "5"
    },
    "282": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "361",
      "startCol": "5",
      "endLine": "363",
      "endCol": "5"
    },
    "283": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "364",
      "startCol": "5",
      "endLine": "366",
      "endCol": "5"
    },
    "284": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "367",
      "startCol": "5",
      "endLine": "369",
      "endCol": "5"
    },
    "285": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "370",
      "startCol": "5",
      "endLine": "372",
      "endCol": "5"
    },
    "286": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "373",
      "startCol": "5",
      "endLine": "375",
      "endCol": "5"
    },
    "287": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "376",
      "startCol": "5",
      "endLine": "378",
      "endCol": "5"
    },
    "288": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "379",
      "startCol": "5",
      "endLine": "381",
      "endCol": "5"
    },
    "289": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "382",
      "startCol": "5",
      "endLine": "384",
      "endCol": "5"
    },
    "290": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "385",
      "startCol": "5",
      "endLine": "387",
      "endCol": "5"
    },
    "291": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "388",
      "startCol": "5",
      "endLine": "390",
      "endCol": "5"
    },
    "292": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "391",
      "startCol": "5",
      "endLine": "393",
      "endCol": "5"
    },
    "293": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "394",
      "startCol": "5",
      "endLine": "396",
      "endCol": "5"
    },
    "294": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "397",
      "startCol": "5",
      "endLine": "399",
      "endCol": "5"
    },
    "295": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "400",
      "startCol": "5",
      "endLine": "402",
      "endCol": "5"
    },
    "296": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "403",
      "startCol": "5",
      "endLine": "405",
      "endCol": "5"
    },
    "297": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "406",
      "startCol": "5",
      "endLine": "408",
      "endCol": "5"
    },
    "298": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "409",
      "startCol": "5",
      "endLine": "411",
      "endCol": "5"
    },
    "299": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "412",
      "startCol": "5",
      "endLine": "414",
      "endCol": "5"
    },
    "300": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "415",
      "startCol": "5",
      "endLine": "417",
      "endCol": "5"
    },
    "301": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "418",
      "startCol": "5",
      "endLine": "420",
      "endCol": "5"
    },
    "302": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "421",
      "startCol": "5",
      "endLine": "423",
      "endCol": "5"
    },
    "303": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "424",
      "startCol": "5",
      "endLine": "426",
      "endCol": "5"
    },
    "304": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "427",
      "startCol": "5",
      "endLine": "429",
      "endCol": "5"
    },
    "305": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "430",
      "startCol": "5",
      "endLine": "430",
      "endCol": "73"
    },
    "306": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "431",
      "startCol": "5",
      "endLine": "431",
      "endCol": "57"
    },
    "307": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "432",
      "startCol": "5",
      "endLine": "432",
      "endCol": "77"
    },
    "308": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612978737166-Menu.ts",
      "startLine": "433",
      "startCol": "5",
      "endLine": "433",
      "endCol": "62"
    },
    "309": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612983991735-MenuContent.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "19",
      "endCol": "38"
    },
    "310": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612983991735-MenuContent.ts",
      "startLine": "26",
      "startCol": "27",
      "endLine": "26",
      "endCol": "63"
    },
    "311": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1612983991735-MenuContent.ts",
      "startLine": "31",
      "startCol": "5",
      "endLine": "31",
      "endCol": "34"
    },
    "312": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "313": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "314": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts",
      "startLine": "14",
      "startCol": "5",
      "endLine": "16",
      "endCol": "5"
    },
    "315": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts",
      "startLine": "17",
      "startCol": "5",
      "endLine": "19",
      "endCol": "5"
    },
    "316": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts",
      "startLine": "23",
      "startCol": "5",
      "endLine": "25",
      "endCol": "5"
    },
    "317": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts",
      "startLine": "26",
      "startCol": "5",
      "endLine": "28",
      "endCol": "5"
    },
    "318": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts",
      "startLine": "29",
      "startCol": "5",
      "endLine": "31",
      "endCol": "5"
    },
    "319": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615961288134-MenuSettings.ts",
      "startLine": "9",
      "startCol": "27",
      "endLine": "9",
      "endCol": "63"
    },
    "320": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1615961288134-MenuSettings.ts",
      "startLine": "11",
      "startCol": "19",
      "endLine": "11",
      "endCol": "64"
    },
    "321": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "322": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "323": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "324": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "325": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "326": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "22",
      "startCol": "5",
      "endLine": "24",
      "endCol": "5"
    },
    "327": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "25",
      "startCol": "5",
      "endLine": "27",
      "endCol": "5"
    },
    "328": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "28",
      "startCol": "5",
      "endLine": "30",
      "endCol": "5"
    },
    "329": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "34",
      "startCol": "5",
      "endLine": "36",
      "endCol": "5"
    },
    "330": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "37",
      "startCol": "5",
      "endLine": "39",
      "endCol": "5"
    },
    "331": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "40",
      "startCol": "5",
      "endLine": "42",
      "endCol": "5"
    },
    "332": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "43",
      "startCol": "5",
      "endLine": "45",
      "endCol": "5"
    },
    "333": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "46",
      "startCol": "5",
      "endLine": "48",
      "endCol": "5"
    },
    "334": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "49",
      "startCol": "5",
      "endLine": "51",
      "endCol": "5"
    },
    "335": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "52",
      "startCol": "5",
      "endLine": "52",
      "endCol": "72"
    },
    "336": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1616228731111-UoM.ts",
      "startLine": "53",
      "startCol": "5",
      "endLine": "55",
      "endCol": "5"
    },
    "337": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "338": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "339": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "340": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "341": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "342": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "22",
      "startCol": "5",
      "endLine": "24",
      "endCol": "5"
    },
    "343": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "25",
      "startCol": "5",
      "endLine": "27",
      "endCol": "5"
    },
    "344": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "28",
      "startCol": "5",
      "endLine": "30",
      "endCol": "5"
    },
    "345": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "31",
      "startCol": "5",
      "endLine": "33",
      "endCol": "5"
    },
    "346": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "34",
      "startCol": "5",
      "endLine": "36",
      "endCol": "5"
    },
    "347": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "37",
      "startCol": "5",
      "endLine": "39",
      "endCol": "5"
    },
    "348": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "40",
      "startCol": "5",
      "endLine": "42",
      "endCol": "5"
    },
    "349": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "43",
      "startCol": "5",
      "endLine": "45",
      "endCol": "5"
    },
    "350": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "46",
      "startCol": "5",
      "endLine": "48",
      "endCol": "5"
    },
    "351": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "52",
      "startCol": "5",
      "endLine": "54",
      "endCol": "5"
    },
    "352": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "55",
      "startCol": "5",
      "endLine": "57",
      "endCol": "5"
    },
    "353": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "58",
      "startCol": "5",
      "endLine": "60",
      "endCol": "5"
    },
    "354": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "61",
      "startCol": "5",
      "endLine": "63",
      "endCol": "5"
    },
    "355": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "64",
      "startCol": "5",
      "endLine": "66",
      "endCol": "5"
    },
    "356": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "67",
      "startCol": "5",
      "endLine": "69",
      "endCol": "5"
    },
    "357": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "70",
      "startCol": "5",
      "endLine": "72",
      "endCol": "5"
    },
    "358": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "73",
      "startCol": "5",
      "endLine": "75",
      "endCol": "5"
    },
    "359": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "76",
      "startCol": "5",
      "endLine": "76",
      "endCol": "66"
    },
    "360": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "77",
      "startCol": "5",
      "endLine": "79",
      "endCol": "5"
    },
    "361": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "80",
      "startCol": "5",
      "endLine": "80",
      "endCol": "70"
    },
    "362": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts",
      "startLine": "81",
      "startCol": "5",
      "endLine": "81",
      "endCol": "73"
    },
    "363": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "364": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "365": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "366": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "367": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "368": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "22",
      "startCol": "5",
      "endLine": "24",
      "endCol": "5"
    },
    "369": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "25",
      "startCol": "5",
      "endLine": "27",
      "endCol": "5"
    },
    "370": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "28",
      "startCol": "5",
      "endLine": "30",
      "endCol": "5"
    },
    "371": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "31",
      "startCol": "5",
      "endLine": "33",
      "endCol": "5"
    },
    "372": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "34",
      "startCol": "5",
      "endLine": "36",
      "endCol": "5"
    },
    "373": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "37",
      "startCol": "5",
      "endLine": "39",
      "endCol": "5"
    },
    "374": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "40",
      "startCol": "5",
      "endLine": "42",
      "endCol": "5"
    },
    "375": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "43",
      "startCol": "5",
      "endLine": "45",
      "endCol": "5"
    },
    "376": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "49",
      "startCol": "5",
      "endLine": "51",
      "endCol": "5"
    },
    "377": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "52",
      "startCol": "5",
      "endLine": "54",
      "endCol": "5"
    },
    "378": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "55",
      "startCol": "5",
      "endLine": "57",
      "endCol": "5"
    },
    "379": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "58",
      "startCol": "5",
      "endLine": "60",
      "endCol": "5"
    },
    "380": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "61",
      "startCol": "5",
      "endLine": "63",
      "endCol": "5"
    },
    "381": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "64",
      "startCol": "5",
      "endLine": "66",
      "endCol": "5"
    },
    "382": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "67",
      "startCol": "5",
      "endLine": "69",
      "endCol": "5"
    },
    "383": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "70",
      "startCol": "5",
      "endLine": "72",
      "endCol": "5"
    },
    "384": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "73",
      "startCol": "5",
      "endLine": "75",
      "endCol": "5"
    },
    "385": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "76",
      "startCol": "5",
      "endLine": "78",
      "endCol": "5"
    },
    "386": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "79",
      "startCol": "5",
      "endLine": "81",
      "endCol": "5"
    },
    "387": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "82",
      "startCol": "5",
      "endLine": "84",
      "endCol": "5"
    },
    "388": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619015192340-ContactPersons.ts",
      "startLine": "85",
      "startCol": "5",
      "endLine": "85",
      "endCol": "66"
    },
    "389": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619448004419-ProductPriceCurrency.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "390": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619448004419-ProductPriceCurrency.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "391": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619448004419-ProductPriceCurrency.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "392": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619448004419-ProductPriceCurrency.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "393": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "394": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "395": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "396": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "397": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "398": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "22",
      "startCol": "5",
      "endLine": "24",
      "endCol": "5"
    },
    "399": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "28",
      "startCol": "5",
      "endLine": "30",
      "endCol": "5"
    },
    "400": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "31",
      "startCol": "5",
      "endLine": "33",
      "endCol": "5"
    },
    "401": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "34",
      "startCol": "5",
      "endLine": "36",
      "endCol": "5"
    },
    "402": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "37",
      "startCol": "5",
      "endLine": "39",
      "endCol": "5"
    },
    "403": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "40",
      "startCol": "5",
      "endLine": "42",
      "endCol": "5"
    },
    "404": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts",
      "startLine": "43",
      "startCol": "5",
      "endLine": "43",
      "endCol": "70"
    },
    "405": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "8",
      "startCol": "5",
      "endLine": "10",
      "endCol": "5"
    },
    "406": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "11",
      "startCol": "5",
      "endLine": "13",
      "endCol": "5"
    },
    "407": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "14",
      "startCol": "5",
      "endLine": "16",
      "endCol": "5"
    },
    "408": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "17",
      "startCol": "5",
      "endLine": "19",
      "endCol": "5"
    },
    "409": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "20",
      "startCol": "5",
      "endLine": "22",
      "endCol": "5"
    },
    "410": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "23",
      "startCol": "5",
      "endLine": "25",
      "endCol": "5"
    },
    "411": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "26",
      "startCol": "5",
      "endLine": "28",
      "endCol": "5"
    },
    "412": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "32",
      "startCol": "5",
      "endLine": "34",
      "endCol": "5"
    },
    "413": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "35",
      "startCol": "5",
      "endLine": "37",
      "endCol": "5"
    },
    "414": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "38",
      "startCol": "5",
      "endLine": "40",
      "endCol": "5"
    },
    "415": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "41",
      "startCol": "5",
      "endLine": "43",
      "endCol": "5"
    },
    "416": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "44",
      "startCol": "5",
      "endLine": "46",
      "endCol": "5"
    },
    "417": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "47",
      "startCol": "5",
      "endLine": "49",
      "endCol": "5"
    },
    "418": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts",
      "startLine": "50",
      "startCol": "5",
      "endLine": "50",
      "endCol": "70"
    },
    "419": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620224070916-EventLog.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "420": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620224070916-EventLog.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "421": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620224070916-EventLog.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "422": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620224070916-EventLog.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "19",
      "endCol": "61"
    },
    "423": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620291421007-Config.ts",
      "startLine": "7",
      "startCol": "5",
      "endLine": "9",
      "endCol": "5"
    },
    "424": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620291421007-Config.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "425": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620291421007-Config.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "426": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620291421007-Config.ts",
      "startLine": "19",
      "startCol": "5",
      "endLine": "21",
      "endCol": "5"
    },
    "427": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620291421007-Config.ts",
      "startLine": "22",
      "startCol": "5",
      "endLine": "24",
      "endCol": "5"
    },
    "428": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620291421007-Config.ts",
      "startLine": "25",
      "startCol": "5",
      "endLine": "25",
      "endCol": "59"
    },
    "429": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620312048836-Attachment.ts",
      "startLine": "10",
      "startCol": "5",
      "endLine": "12",
      "endCol": "5"
    },
    "430": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620312048836-Attachment.ts",
      "startLine": "13",
      "startCol": "5",
      "endLine": "15",
      "endCol": "5"
    },
    "431": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620312048836-Attachment.ts",
      "startLine": "16",
      "startCol": "5",
      "endLine": "18",
      "endCol": "5"
    },
    "432": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620312048836-Attachment.ts",
      "startLine": "21",
      "startCol": "27",
      "endLine": "21",
      "endCol": "63"
    },
    "433": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620312048836-Attachment.ts",
      "startLine": "23",
      "startCol": "19",
      "endLine": "23",
      "endCol": "64"
    },
    "434": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620312048836-Attachment.ts",
      "startLine": "33",
      "startCol": "5",
      "endLine": "35",
      "endCol": "5"
    },
    "435": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/migrations/1620312048836-Attachment.ts",
      "startLine": "36",
      "startCol": "5",
      "endLine": "38",
      "endCol": "5"
    },
    "436": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/accounting.scheme.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "24",
      "endCol": "3"
    },
    "437": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/accounting.scheme.resolver.ts",
      "startLine": "36",
      "startCol": "3",
      "endLine": "41",
      "endCol": "3"
    },
    "438": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/attachment.resolver.ts",
      "startLine": "48",
      "startCol": "3",
      "endLine": "53",
      "endCol": "3"
    },
    "439": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/bank.resolver.ts",
      "startLine": "18",
      "startCol": "3",
      "endLine": "20",
      "endCol": "3"
    },
    "440": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/bank.resolver.ts",
      "startLine": "23",
      "startCol": "3",
      "endLine": "25",
      "endCol": "3"
    },
    "441": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/bank.resolver.ts",
      "startLine": "28",
      "startCol": "3",
      "endLine": "33",
      "endCol": "3"
    },
    "442": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/contact.person.company.relation.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "26",
      "endCol": "3"
    },
    "443": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/contact.person.company.relation.resolver.ts",
      "startLine": "29",
      "startCol": "3",
      "endLine": "36",
      "endCol": "3"
    },
    "444": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/contact.person.company.relation.resolver.ts",
      "startLine": "39",
      "startCol": "3",
      "endLine": "48",
      "endCol": "3"
    },
    "445": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/contact.person.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "24",
      "endCol": "3"
    },
    "446": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/contact.person.resolver.ts",
      "startLine": "27",
      "startCol": "3",
      "endLine": "29",
      "endCol": "3"
    },
    "447": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/contact.person.resolver.ts",
      "startLine": "32",
      "startCol": "3",
      "endLine": "37",
      "endCol": "3"
    },
    "448": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/country.resolver.ts",
      "startLine": "18",
      "startCol": "3",
      "endLine": "20",
      "endCol": "3"
    },
    "449": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/country.resolver.ts",
      "startLine": "29",
      "startCol": "3",
      "endLine": "34",
      "endCol": "3"
    },
    "450": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/currency.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "24",
      "endCol": "3"
    },
    "451": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/currency.resolver.ts",
      "startLine": "27",
      "startCol": "3",
      "endLine": "32",
      "endCol": "3"
    },
    "452": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.group.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "24",
      "endCol": "3"
    },
    "453": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.group.resolver.ts",
      "startLine": "27",
      "startCol": "3",
      "endLine": "29",
      "endCol": "3"
    },
    "454": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.group.resolver.ts",
      "startLine": "32",
      "startCol": "3",
      "endLine": "37",
      "endCol": "3"
    },
    "455": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.price.list.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "24",
      "endCol": "3"
    },
    "456": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.price.list.resolver.ts",
      "startLine": "27",
      "startCol": "3",
      "endLine": "29",
      "endCol": "3"
    },
    "457": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.price.list.resolver.ts",
      "startLine": "32",
      "startCol": "3",
      "endLine": "41",
      "endCol": "3"
    },
    "458": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.product.price.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "24",
      "endCol": "3"
    },
    "459": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.product.price.resolver.ts",
      "startLine": "27",
      "startCol": "3",
      "endLine": "32",
      "endCol": "3"
    },
    "460": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.product.price.resolver.ts",
      "startLine": "35",
      "startCol": "3",
      "endLine": "44",
      "endCol": "3"
    },
    "461": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.resolver.ts",
      "startLine": "34",
      "startCol": "3",
      "endLine": "36",
      "endCol": "3"
    },
    "462": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.resolver.ts",
      "startLine": "39",
      "startCol": "3",
      "endLine": "41",
      "endCol": "3"
    },
    "463": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.resolver.ts",
      "startLine": "44",
      "startCol": "3",
      "endLine": "59",
      "endCol": "3"
    },
    "464": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/resolvers/customer.resolver.ts",
      "startLine": "65",
      "startCol": "41",
      "endLine": "68",
      "endCol": "18"
    },
    "465": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/customer.resolver.ts",
      "startLine": "76",
      "startCol": "3",
      "endLine": "81",
      "endCol": "3"
    },
    "466": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/factoring.contract.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "26",
      "endCol": "3"
    },
    "467": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/factoring.contract.resolver.ts",
      "startLine": "29",
      "startCol": "3",
      "endLine": "31",
      "endCol": "3"
    },
    "468": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/factoring.contract.resolver.ts",
      "startLine": "34",
      "startCol": "3",
      "endLine": "43",
      "endCol": "3"
    },
    "469": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/factoring.provider.resolver.ts",
      "startLine": "23",
      "startCol": "3",
      "endLine": "25",
      "endCol": "3"
    },
    "470": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/factoring.provider.resolver.ts",
      "startLine": "28",
      "startCol": "3",
      "endLine": "39",
      "endCol": "3"
    },
    "471": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/factoring.provider.resolver.ts",
      "startLine": "42",
      "startCol": "3",
      "endLine": "44",
      "endCol": "3"
    },
    "472": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/factoring.provider.resolver.ts",
      "startLine": "47",
      "startCol": "3",
      "endLine": "56",
      "endCol": "3"
    },
    "473": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/resolvers/menu.resolver.ts",
      "startLine": "14",
      "startCol": "12",
      "endLine": "14",
      "endCol": "35"
    },
    "474": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/menu.resolver.ts",
      "startLine": "11",
      "startCol": "3",
      "endLine": "15",
      "endCol": "3"
    },
    "475": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/organization.resolver.ts",
      "startLine": "22",
      "startCol": "3",
      "endLine": "24",
      "endCol": "3"
    },
    "476": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/organization.resolver.ts",
      "startLine": "36",
      "startCol": "3",
      "endLine": "41",
      "endCol": "3"
    },
    "477": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/product.resolver.ts",
      "startLine": "18",
      "startCol": "3",
      "endLine": "20",
      "endCol": "3"
    },
    "478": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/product.resolver.ts",
      "startLine": "29",
      "startCol": "3",
      "endLine": "34",
      "endCol": "3"
    },
    "479": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/sales.invoice.resolver.ts",
      "startLine": "30",
      "startCol": "3",
      "endLine": "34",
      "endCol": "3"
    },
    "480": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/sales.invoice.resolver.ts",
      "startLine": "37",
      "startCol": "3",
      "endLine": "39",
      "endCol": "3"
    },
    "481": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/sales.invoice.resolver.ts",
      "startLine": "42",
      "startCol": "3",
      "endLine": "47",
      "endCol": "3"
    },
    "482": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/sales.invoice.resolver.ts",
      "startLine": "67",
      "startCol": "3",
      "endLine": "76",
      "endCol": "3"
    },
    "483": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/sales.invoice.resolver.ts",
      "startLine": "79",
      "startCol": "3",
      "endLine": "84",
      "endCol": "3"
    },
    "484": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/sales.invoice.resolver.ts",
      "startLine": "87",
      "startCol": "3",
      "endLine": "97",
      "endCol": "3"
    },
    "485": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/sales.invoice.resolver.ts",
      "startLine": "100",
      "startCol": "3",
      "endLine": "105",
      "endCol": "3"
    },
    "486": {
      "patternID": "pattern1",
      "file": "apps/api/src/app/resolvers/unit.of.measurement.resolver.ts",
      "startLine": "21",
      "startCol": "3",
      "endLine": "23",
      "endCol": "3"
    },
    "487": {
      "patternID": "pattern3",
      "file": "apps/api/src/app/support/everything.subscriber.ts",
      "startLine": "8",
      "startCol": "5",
      "endLine": "8",
      "endCol": "28"
    },
    "488": {
      "patternID": "pattern3",
      "file": "apps/api/src/auth/lib/authentication.service.ts",
      "startLine": "41",
      "startCol": "27",
      "endLine": "41",
      "endCol": "57"
    },
    "489": {
      "patternID": "pattern3",
      "file": "apps/api/src/auth/lib/authentication.service.ts",
      "startLine": "49",
      "startCol": "24",
      "endLine": "55",
      "endCol": "20"
    },
    "490": {
      "patternID": "pattern1",
      "file": "apps/api/src/auth/lib/authentication.service.ts",
      "startLine": "39",
      "startCol": "3",
      "endLine": "74",
      "endCol": "3"
    },
    "491": {
      "patternID": "pattern3",
      "file": "apps/api/src/main.ts",
      "startLine": "12",
      "startCol": "15",
      "endLine": "12",
      "endCol": "49"
    },
    "492": {
      "patternID": "pattern3",
      "file": "apps/api/src/main.ts",
      "startLine": "15",
      "startCol": "3",
      "endLine": "17",
      "endCol": "4"
    },
    "493": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/address.service.ts",
      "startLine": "47",
      "startCol": "23",
      "endLine": "47",
      "endCol": "47"
    },
    "494": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/attachment.service.ts",
      "startLine": "56",
      "startCol": "5",
      "endLine": "56",
      "endCol": "32"
    },
    "495": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/attachment.service.ts",
      "startLine": "55",
      "startCol": "3",
      "endLine": "58",
      "endCol": "3"
    },
    "496": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/attachment.service.ts",
      "startLine": "61",
      "startCol": "5",
      "endLine": "61",
      "endCol": "32"
    },
    "497": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/attachment.service.ts",
      "startLine": "60",
      "startCol": "3",
      "endLine": "63",
      "endCol": "3"
    },
    "498": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/attachment.service.ts",
      "startLine": "65",
      "startCol": "5",
      "endLine": "65",
      "endCol": "32"
    },
    "499": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/attachment.service.ts",
      "startLine": "66",
      "startCol": "12",
      "endLine": "66",
      "endCol": "70"
    },
    "500": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/attachment.service.ts",
      "startLine": "64",
      "startCol": "3",
      "endLine": "67",
      "endCol": "3"
    },
    "501": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "39",
      "startCol": "5",
      "endLine": "42",
      "endCol": "6"
    },
    "502": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "34",
      "startCol": "20",
      "endLine": "42",
      "endCol": "6"
    },
    "503": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "48",
      "startCol": "5",
      "endLine": "48",
      "endCol": "73"
    },
    "504": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "44",
      "startCol": "16",
      "endLine": "48",
      "endCol": "73"
    },
    "505": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "60",
      "startCol": "5",
      "endLine": "60",
      "endCol": "70"
    },
    "506": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "56",
      "startCol": "18",
      "endLine": "60",
      "endCol": "70"
    },
    "507": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "80",
      "startCol": "9",
      "endLine": "80",
      "endCol": "33"
    },
    "508": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "92",
      "startCol": "12",
      "endLine": "92",
      "endCol": "79"
    },
    "509": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "62",
      "startCol": "3",
      "endLine": "93",
      "endCol": "3"
    },
    "510": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "101",
      "startCol": "12",
      "endLine": "101",
      "endCol": "71"
    },
    "511": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "94",
      "startCol": "13",
      "endLine": "102",
      "endCol": "3"
    },
    "512": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "108",
      "startCol": "5",
      "endLine": "108",
      "endCol": "66"
    },
    "513": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/base.entity.service.ts",
      "startLine": "116",
      "startCol": "9",
      "endLine": "119",
      "endCol": "6"
    },
    "514": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/currency.rate.service.ts",
      "startLine": "58",
      "startCol": "12",
      "endLine": "69",
      "endCol": "15"
    },
    "515": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/currency.rate.service.ts",
      "startLine": "31",
      "startCol": "32",
      "endLine": "70",
      "endCol": "3"
    },
    "516": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/customer.price.list.service.ts",
      "startLine": "46",
      "startCol": "9",
      "endLine": "48",
      "endCol": "10"
    },
    "517": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/customer.price.list.service.ts",
      "startLine": "91",
      "startCol": "12",
      "endLine": "109",
      "endCol": "16"
    },
    "518": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/customer.price.list.service.ts",
      "startLine": "84",
      "startCol": "3",
      "endLine": "110",
      "endCol": "3"
    },
    "519": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/customer.product.price.service.ts",
      "startLine": "48",
      "startCol": "32",
      "endLine": "51",
      "endCol": "5"
    },
    "520": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/document.numbering.service.ts",
      "startLine": "19",
      "startCol": "19",
      "endLine": "22",
      "endCol": "6"
    },
    "521": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/document.numbering.service.ts",
      "startLine": "25",
      "startCol": "5",
      "endLine": "25",
      "endCol": "29"
    },
    "522": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/document.numbering.service.ts",
      "startLine": "40",
      "startCol": "5",
      "endLine": "40",
      "endCol": "52"
    },
    "523": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/factoring.provider.service.spec.ts",
      "startLine": "60",
      "startCol": "17",
      "endLine": "68",
      "endCol": "16"
    },
    "524": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/mail.service.ts",
      "startLine": "59",
      "startCol": "7",
      "endLine": "70",
      "endCol": "8"
    },
    "525": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/mail.service.ts",
      "startLine": "78",
      "startCol": "9",
      "endLine": "78",
      "endCol": "39"
    },
    "526": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/organization.service.spec.ts",
      "startLine": "75",
      "startCol": "17",
      "endLine": "84",
      "endCol": "16"
    },
    "527": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/reports.service.ts",
      "startLine": "333",
      "startCol": "22",
      "endLine": "333",
      "endCol": "40"
    },
    "528": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/reports.service.ts",
      "startLine": "334",
      "startCol": "34",
      "endLine": "334",
      "endCol": "60"
    },
    "529": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/reports.service.ts",
      "startLine": "353",
      "startCol": "31",
      "endLine": "353",
      "endCol": "48"
    },
    "530": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/reports.service.ts",
      "startLine": "367",
      "startCol": "25",
      "endLine": "367",
      "endCol": "46"
    },
    "531": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.line.service.spec.ts",
      "startLine": "146",
      "startCol": "17",
      "endLine": "155",
      "endCol": "16"
    },
    "532": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "startLine": "264",
      "startCol": "17",
      "endLine": "266",
      "endCol": "16"
    },
    "533": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "startLine": "415",
      "startCol": "49",
      "endLine": "415",
      "endCol": "58"
    },
    "534": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.spec.ts",
      "startLine": "478",
      "startCol": "22",
      "endLine": "480",
      "endCol": "15"
    },
    "535": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "150",
      "startCol": "8",
      "endLine": "153",
      "endCol": "7"
    },
    "536": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "454",
      "startCol": "17",
      "endLine": "454",
      "endCol": "51"
    },
    "537": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "557",
      "startCol": "22",
      "endLine": "564",
      "endCol": "16"
    },
    "538": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "573",
      "startCol": "7",
      "endLine": "573",
      "endCol": "33"
    },
    "539": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "591",
      "startCol": "9",
      "endLine": "591",
      "endCol": "34"
    },
    "540": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "608",
      "startCol": "19",
      "endLine": "608",
      "endCol": "71"
    },
    "541": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "680",
      "startCol": "29",
      "endLine": "730",
      "endCol": "5"
    },
    "542": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "739",
      "startCol": "12",
      "endLine": "753",
      "endCol": "19"
    },
    "543": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/sales.invoice.service.ts",
      "startLine": "738",
      "startCol": "3",
      "endLine": "754",
      "endCol": "3"
    },
    "544": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/tax.service.ts",
      "startLine": "37",
      "startCol": "5",
      "endLine": "39",
      "endCol": "6"
    },
    "545": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/tax.service.ts",
      "startLine": "36",
      "startCol": "16",
      "endLine": "39",
      "endCol": "6"
    },
    "546": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/tax.service.ts",
      "startLine": "41",
      "startCol": "5",
      "endLine": "43",
      "endCol": "6"
    },
    "547": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/tax.service.ts",
      "startLine": "40",
      "startCol": "20",
      "endLine": "43",
      "endCol": "6"
    },
    "548": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/user.service.spec.ts",
      "startLine": "8",
      "startCol": "17",
      "endLine": "10",
      "endCol": "16"
    },
    "549": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "46",
      "startCol": "19",
      "endLine": "48",
      "endCol": "36"
    },
    "550": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "59",
      "startCol": "19",
      "endLine": "61",
      "endCol": "61"
    },
    "551": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "64",
      "startCol": "3",
      "endLine": "70",
      "endCol": "3"
    },
    "552": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "84",
      "startCol": "9",
      "endLine": "84",
      "endCol": "40"
    },
    "553": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "102",
      "startCol": "5",
      "endLine": "102",
      "endCol": "30"
    },
    "554": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "109",
      "startCol": "5",
      "endLine": "109",
      "endCol": "36"
    },
    "555": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "144",
      "startCol": "29",
      "endLine": "144",
      "endCol": "59"
    },
    "556": {
      "patternID": "pattern1",
      "file": "apps/api/src/model/lib/user.service.ts",
      "startLine": "131",
      "startCol": "3",
      "endLine": "159",
      "endCol": "3"
    },
    "557": {
      "patternID": "pattern3",
      "file": "apps/api/src/model/lib/xml.service.spec.ts",
      "startLine": "8",
      "startCol": "17",
      "endLine": "10",
      "endCol": "16"
    },
    "558": {
      "patternID": "pattern3",
      "file": "apps/api/test/app.e2e-spec.ts",
      "startLine": "9",
      "startCol": "42",
      "endLine": "11",
      "endCol": "16"
    },
    "559": {
      "patternID": "pattern3",
      "file": "apps/api/test/app.e2e-spec.ts",
      "startLine": "14",
      "startCol": "5",
      "endLine": "14",
      "endCol": "20"
    },
    "560": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/attachment.ts",
      "startLine": "48",
      "startCol": "22",
      "endLine": "54",
      "endCol": "16"
    },
    "561": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/attachment.ts",
      "startLine": "49",
      "startCol": "13",
      "endLine": "53",
      "endCol": "14"
    },
    "562": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/customer.ts",
      "startLine": "61",
      "startCol": "24",
      "endLine": "65",
      "endCol": "10"
    },
    "563": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/customer.ts",
      "startLine": "66",
      "startCol": "26",
      "endLine": "66",
      "endCol": "44"
    },
    "564": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/customer.ts",
      "startLine": "76",
      "startCol": "13",
      "endLine": "82",
      "endCol": "14"
    },
    "565": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/salesInvoice.ts",
      "startLine": "70",
      "startCol": "24",
      "endLine": "75",
      "endCol": "10"
    },
    "566": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/salesInvoice.ts",
      "startLine": "106",
      "startCol": "9",
      "endLine": "111",
      "endCol": "10"
    },
    "567": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/salesInvoice.ts",
      "startLine": "116",
      "startCol": "22",
      "endLine": "122",
      "endCol": "16"
    },
    "568": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/core/salesInvoice.ts",
      "startLine": "117",
      "startCol": "13",
      "endLine": "121",
      "endCol": "14"
    },
    "569": {
      "patternID": "pattern3",
      "file": "clients/admin/src/lib/support/testHelpers.ts",
      "startLine": "21",
      "startCol": "24",
      "endLine": "21",
      "endCol": "45"
    },
    "570": {
      "patternID": "pattern3",
      "file": "clients/mobile/app/lib/apollo.ts",
      "startLine": "29",
      "startCol": "20",
      "endLine": "31",
      "endCol": "14"
    }
  },
  "files": {
    "node_modules/ts-jest/dist/compiler/language-service.js": "\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initializeLanguageServiceInstance = void 0;\nvar bs_logger_1 = require(\"bs-logger\");\nvar fs_1 = require(\"fs\");\nvar path_1 = require(\"path\");\nvar memoize = require(\"lodash.memoize\");\nvar mkdirp = require(\"mkdirp\");\nvar constants_1 = require(\"../constants\");\nvar messages_1 = require(\"../util/messages\");\nvar json_1 = require(\"../util/json\");\nvar sha1_1 = require(\"../util/sha1\");\nfunction doTypeChecking(configs, diagnosedFiles, fileName, service, logger) {\n    if (configs.shouldReportDiagnostic(fileName)) {\n        var diagnostics = service.getSemanticDiagnostics(fileName).concat(service.getSyntacticDiagnostics(fileName));\n        diagnosedFiles.push(fileName);\n        configs.raiseDiagnostics(diagnostics, fileName, logger);\n    }\n}\nexports.initializeLanguageServiceInstance = function (configs, logger) {\n    var _a;\n    logger.debug('initializeLanguageServiceInstance(): create typescript compiler');\n    var ts = configs.compilerModule;\n    var cwd = configs.cwd;\n    var cacheDir = configs.tsCacheDir;\n    var _b = configs.parsedTsConfig, options = _b.options, fileNames = _b.fileNames;\n    var diagnosedFiles = [];\n    var serviceHostTraceCtx = (_a = {\n            namespace: 'ts:serviceHost',\n            call: null\n        },\n        _a[bs_logger_1.LogContexts.logLevel] = bs_logger_1.LogLevels.trace,\n        _a);\n    var memoryCache = {\n        files: new Map(),\n        resolvedModules: new Map(),\n    };\n    var tsResolvedModulesCachePath;\n    if (cacheDir) {\n        mkdirp.sync(cacheDir);\n        tsResolvedModulesCachePath = path_1.join(cacheDir, sha1_1.sha1('ts-jest-resolved-modules', '\\x00'));\n        try {\n            var cachedTSResolvedModules = fs_1.readFileSync(tsResolvedModulesCachePath, 'utf-8');\n            memoryCache.resolvedModules = new Map(json_1.parse(cachedTSResolvedModules));\n        }\n        catch (e) { }\n    }\n    configs.parsedTsConfig.fileNames.forEach(function (fileName) {\n        memoryCache.files.set(fileName, {\n            version: 0,\n        });\n    });\n    function isFileInCache(fileName) {\n        return memoryCache.files.has(fileName) && memoryCache.files.get(fileName).version !== 0;\n    }\n    var cacheReadFile = logger.wrap(serviceHostTraceCtx, 'readFile', memoize(ts.sys.readFile));\n    var moduleResolutionHost = {\n        fileExists: memoize(ts.sys.fileExists),\n        readFile: cacheReadFile,\n        directoryExists: memoize(ts.sys.directoryExists),\n        getCurrentDirectory: function () { return cwd; },\n        realpath: ts.sys.realpath && memoize(ts.sys.realpath),\n        getDirectories: memoize(ts.sys.getDirectories),\n    };\n    var moduleResolutionCache = ts.createModuleResolutionCache(cwd, function (x) { return x; }, options);\n    function resolveModuleNames(moduleNames, containingFile) {\n        var _a;\n        var normalizedContainingFile = path_1.normalize(containingFile);\n        var currentResolvedModules = (_a = memoryCache.resolvedModules.get(normalizedContainingFile)) !== null && _a !== void 0 ? _a : [];\n        return moduleNames.map(function (moduleName) {\n            var resolveModuleName = ts.resolveModuleName(moduleName, containingFile, options, moduleResolutionHost, moduleResolutionCache);\n            var resolvedModule = resolveModuleName.resolvedModule;\n            if (configs.isTestFile(normalizedContainingFile) && resolvedModule) {\n                var normalizedResolvedFileName = path_1.normalize(resolvedModule.resolvedFileName);\n                if (!currentResolvedModules.includes(normalizedResolvedFileName)) {\n                    currentResolvedModules.push(normalizedResolvedFileName);\n                    memoryCache.resolvedModules.set(normalizedContainingFile, currentResolvedModules);\n                }\n            }\n            return resolvedModule;\n        });\n    }\n    var projectVersion = 1;\n    var updateMemoryCache = function (contents, fileName) {\n        logger.debug({ fileName: fileName }, 'updateMemoryCache(): update memory cache for language service');\n        var shouldIncrementProjectVersion = false;\n        var hit = isFileInCache(fileName);\n        if (!hit) {\n            memoryCache.files.set(fileName, {\n                text: contents,\n                version: 1,\n            });\n            shouldIncrementProjectVersion = true;\n        }\n        else {\n            var previousContents = memoryCache.files.get(fileName).text;\n            if (previousContents !== contents) {\n                memoryCache.files.set(fileName, {\n                    text: contents,\n                    version: memoryCache.files.get(fileName).version + 1,\n                });\n                if (hit)\n                    shouldIncrementProjectVersion = true;\n            }\n            if (!fileNames.includes(fileName)) {\n                shouldIncrementProjectVersion = true;\n            }\n        }\n        if (shouldIncrementProjectVersion)\n            projectVersion++;\n    };\n    var serviceHost = {\n        getProjectVersion: function () { return String(projectVersion); },\n        getScriptFileNames: function () { return __spread(memoryCache.files.keys()); },\n        getScriptVersion: function (fileName) {\n            var _a;\n            var normalizedFileName = path_1.normalize(fileName);\n            var version = (_a = memoryCache.files.get(normalizedFileName)) === null || _a === void 0 ? void 0 : _a.version;\n            return version === undefined ? undefined : String(version);\n        },\n        getScriptSnapshot: function (fileName) {\n            var _a;\n            var normalizedFileName = path_1.normalize(fileName);\n            var hit = isFileInCache(normalizedFileName);\n            logger.trace({ normalizedFileName: normalizedFileName, cacheHit: hit }, 'getScriptSnapshot():', 'cache', hit ? 'hit' : 'miss');\n            if (!hit) {\n                memoryCache.files.set(normalizedFileName, {\n                    text: cacheReadFile(normalizedFileName),\n                    version: 1,\n                });\n            }\n            var contents = (_a = memoryCache.files.get(normalizedFileName)) === null || _a === void 0 ? void 0 : _a.text;\n            if (contents === undefined)\n                return;\n            return ts.ScriptSnapshot.fromString(contents);\n        },\n        fileExists: memoize(ts.sys.fileExists),\n        readFile: cacheReadFile,\n        readDirectory: memoize(ts.sys.readDirectory),\n        getDirectories: memoize(ts.sys.getDirectories),\n        directoryExists: memoize(ts.sys.directoryExists),\n        realpath: ts.sys.realpath && memoize(ts.sys.realpath),\n        getNewLine: function () { return constants_1.LINE_FEED; },\n        getCurrentDirectory: function () { return cwd; },\n        getCompilationSettings: function () { return options; },\n        getDefaultLibFileName: function () { return ts.getDefaultLibFilePath(options); },\n        getCustomTransformers: function () { return configs.tsCustomTransformers; },\n        resolveModuleNames: resolveModuleNames,\n    };\n    logger.debug('initializeLanguageServiceInstance(): creating language service');\n    var service = ts.createLanguageService(serviceHost, ts.createDocumentRegistry());\n    return {\n        compileFn: function (code, fileName) {\n            var e_1, _a;\n            var _b;\n            logger.debug({ fileName: fileName }, 'compileFn(): compiling using language service');\n            updateMemoryCache(code, fileName);\n            var output = service.getEmitOutput(fileName);\n            if (tsResolvedModulesCachePath) {\n                void (function () { return __awaiter(void 0, void 0, void 0, function () {\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4, fs_1.writeFile(tsResolvedModulesCachePath, json_1.stringify(__spread(memoryCache.resolvedModules)), function () { })];\n                            case 1:\n                                _a.sent();\n                                return [2];\n                        }\n                    });\n                }); })();\n            }\n            if (!diagnosedFiles.includes(fileName)) {\n                logger.debug({ fileName: fileName }, 'compileFn(): computing diagnostics using language service');\n                doTypeChecking(configs, diagnosedFiles, fileName, service, logger);\n            }\n            if (!configs.isTestFile(fileName)) {\n                try {\n                    for (var _c = __values(memoryCache.resolvedModules.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var _e = __read(_d.value, 2), testFileName = _e[0], resolvedModules = _e[1];\n                        if (resolvedModules.includes(fileName) &&\n                            !diagnosedFiles.includes(testFileName) &&\n                            fs_1.existsSync(testFileName)) {\n                            var testFileContent = (_b = memoryCache.files.get(testFileName)) === null || _b === void 0 ? void 0 : _b.text;\n                            if (!testFileContent) {\n                                updateMemoryCache(cacheReadFile(testFileName), testFileName);\n                            }\n                            logger.debug({ testFileName: testFileName }, 'compileFn(): computing diagnostics using language service for test file which uses the module');\n                            doTypeChecking(configs, diagnosedFiles, testFileName, service, logger);\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n            if (output.emitSkipped) {\n                throw new TypeError(path_1.relative(cwd, fileName) + \": Emit skipped for language service\");\n            }\n            if (!output.outputFiles.length) {\n                throw new TypeError(messages_1.interpolate(\"Unable to require `.d.ts` file for file: {{file}}.\\nThis is usually the result of a faulty configuration or import. Make sure there is a `.js`, `.json` or another executable extension available alongside `{{file}}`.\", {\n                    file: path_1.basename(fileName),\n                }));\n            }\n            memoryCache.files.set(fileName, __assign(__assign({}, memoryCache.files.get(fileName)), { output: output.outputFiles[1].text }));\n            return [output.outputFiles[1].text, output.outputFiles[0].text];\n        },\n        program: service.getProgram(),\n    };\n};\n",
    "node_modules/jest-runner/build/runTest.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = runTest;\n\nfunction _chalk() {\n  const data = _interopRequireDefault(require('chalk'));\n\n  _chalk = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction fs() {\n  const data = _interopRequireWildcard(require('graceful-fs'));\n\n  fs = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _sourceMapSupport() {\n  const data = _interopRequireDefault(require('source-map-support'));\n\n  _sourceMapSupport = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _console() {\n  const data = require('@jest/console');\n\n  _console = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestConfig() {\n  const data = require('jest-config');\n\n  _jestConfig = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction docblock() {\n  const data = _interopRequireWildcard(require('jest-docblock'));\n\n  docblock = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestLeakDetector() {\n  const data = _interopRequireDefault(require('jest-leak-detector'));\n\n  _jestLeakDetector = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestMessageUtil() {\n  const data = require('jest-message-util');\n\n  _jestMessageUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestRuntime() {\n  const data = _interopRequireDefault(require('jest-runtime'));\n\n  _jestRuntime = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _jestUtil() {\n  const data = require('jest-util');\n\n  _jestUtil = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\nfunction freezeConsole(testConsole, config) {\n  // @ts-expect-error: `_log` is `private` - we should figure out some proper API here\n  testConsole._log = function fakeConsolePush(_type, message) {\n    const error = new (_jestUtil().ErrorWithStack)(\n      `${_chalk().default.red(\n        `${_chalk().default.bold(\n          'Cannot log after tests are done.'\n        )} Did you forget to wait for something async in your test?`\n      )}\\nAttempted to log \"${message}\".`,\n      fakeConsolePush\n    );\n    const formattedError = (0, _jestMessageUtil().formatExecError)(\n      error,\n      config,\n      {\n        noStackTrace: false\n      },\n      undefined,\n      true\n    );\n    process.stderr.write('\\n' + formattedError + '\\n'); // TODO: set exit code in Jest 25\n    // process.exitCode = 1;\n  };\n} // Keeping the core of \"runTest\" as a separate function (as \"runTestInternal\")\n// is key to be able to detect memory leaks. Since all variables are local to\n// the function, when \"runTestInternal\" finishes its execution, they can all be\n// freed, UNLESS something else is leaking them (and that's why we can detect\n// the leak!).\n//\n// If we had all the code in a single function, we should manually nullify all\n// references to verify if there is a leak, which is not maintainable and error\n// prone. That's why \"runTestInternal\" CANNOT be inlined inside \"runTest\".\n\nasync function runTestInternal(\n  path,\n  globalConfig,\n  config,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const testSource = fs().readFileSync(path, 'utf8');\n  const docblockPragmas = docblock().parse(docblock().extract(testSource));\n  const customEnvironment = docblockPragmas['jest-environment'];\n  let testEnvironment = config.testEnvironment;\n\n  if (customEnvironment) {\n    if (Array.isArray(customEnvironment)) {\n      throw new Error(\n        `You can only define a single test environment through docblocks, got \"${customEnvironment.join(\n          ', '\n        )}\"`\n      );\n    }\n\n    testEnvironment = (0, _jestConfig().getTestEnvironment)({\n      ...config,\n      testEnvironment: customEnvironment\n    });\n  }\n\n  const TestEnvironment = (0, _jestUtil().interopRequireDefault)(\n    require(testEnvironment)\n  ).default;\n  const testFramework = (0, _jestUtil().interopRequireDefault)(\n    process.env.JEST_CIRCUS === '1' // eslint-disable-next-line import/no-extraneous-dependencies\n      ? require('jest-circus/runner')\n      : require(config.testRunner)\n  ).default;\n  const Runtime = (0, _jestUtil().interopRequireDefault)(\n    config.moduleLoader ? require(config.moduleLoader) : require('jest-runtime')\n  ).default;\n  const consoleOut = globalConfig.useStderr ? process.stderr : process.stdout;\n\n  const consoleFormatter = (type, message) =>\n    (0, _console().getConsoleOutput)(\n      config.cwd,\n      !!globalConfig.verbose, // 4 = the console call is buried 4 stack frames deep\n      _console().BufferedConsole.write([], type, message, 4),\n      config,\n      globalConfig\n    );\n\n  let testConsole;\n\n  if (globalConfig.silent) {\n    testConsole = new (_console().NullConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else if (globalConfig.verbose) {\n    testConsole = new (_console().CustomConsole)(\n      consoleOut,\n      consoleOut,\n      consoleFormatter\n    );\n  } else {\n    testConsole = new (_console().BufferedConsole)();\n  }\n\n  const environment = new TestEnvironment(config, {\n    console: testConsole,\n    docblockPragmas,\n    testPath: path\n  });\n  const leakDetector = config.detectLeaks\n    ? new (_jestLeakDetector().default)(environment)\n    : null;\n  const cacheFS = {\n    [path]: testSource\n  };\n  (0, _jestUtil().setGlobal)(environment.global, 'console', testConsole);\n  const runtime = new Runtime(\n    config,\n    environment,\n    resolver,\n    cacheFS,\n    {\n      changedFiles:\n        context === null || context === void 0 ? void 0 : context.changedFiles,\n      collectCoverage: globalConfig.collectCoverage,\n      collectCoverageFrom: globalConfig.collectCoverageFrom,\n      collectCoverageOnlyFrom: globalConfig.collectCoverageOnlyFrom,\n      coverageProvider: globalConfig.coverageProvider,\n      sourcesRelatedToTestsInChangedFiles:\n        context === null || context === void 0\n          ? void 0\n          : context.sourcesRelatedToTestsInChangedFiles\n    },\n    path\n  );\n  const start = Date.now();\n\n  for (const path of config.setupFiles) {\n    var _runtime$unstable_sho;\n\n    // TODO: remove ? in Jest 26\n    const esm =\n      (_runtime$unstable_sho = runtime.unstable_shouldLoadAsEsm) === null ||\n      _runtime$unstable_sho === void 0\n        ? void 0\n        : _runtime$unstable_sho.call(runtime, path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n\n  const sourcemapOptions = {\n    environment: 'node',\n    handleUncaughtExceptions: false,\n    retrieveSourceMap: source => {\n      const sourceMaps = runtime.getSourceMaps();\n      const sourceMapSource = sourceMaps && sourceMaps[source];\n\n      if (sourceMapSource) {\n        try {\n          return {\n            map: JSON.parse(fs().readFileSync(sourceMapSource, 'utf8')),\n            url: source\n          };\n        } catch {}\n      }\n\n      return null;\n    }\n  }; // For tests\n\n  runtime\n    .requireInternalModule(\n      require.resolve('source-map-support'),\n      'source-map-support'\n    )\n    .install(sourcemapOptions); // For runtime errors\n\n  _sourceMapSupport().default.install(sourcemapOptions);\n\n  if (\n    environment.global &&\n    environment.global.process &&\n    environment.global.process.exit\n  ) {\n    const realExit = environment.global.process.exit;\n\n    environment.global.process.exit = function exit(...args) {\n      const error = new (_jestUtil().ErrorWithStack)(\n        `process.exit called with \"${args.join(', ')}\"`,\n        exit\n      );\n      const formattedError = (0, _jestMessageUtil().formatExecError)(\n        error,\n        config,\n        {\n          noStackTrace: false\n        },\n        undefined,\n        true\n      );\n      process.stderr.write(formattedError);\n      return realExit(...args);\n    };\n  } // if we don't have `getVmContext` on the env skip coverage\n\n  const collectV8Coverage =\n    globalConfig.coverageProvider === 'v8' &&\n    typeof environment.getVmContext === 'function';\n\n  try {\n    await environment.setup();\n    let result;\n\n    try {\n      if (collectV8Coverage) {\n        await runtime.collectV8Coverage();\n      }\n\n      result = await testFramework(\n        globalConfig,\n        config,\n        environment,\n        runtime,\n        path,\n        sendMessageToJest\n      );\n    } catch (err) {\n      // Access stack before uninstalling sourcemaps\n      err.stack;\n      throw err;\n    } finally {\n      if (collectV8Coverage) {\n        await runtime.stopCollectingV8Coverage();\n      }\n    }\n\n    freezeConsole(testConsole, config);\n    const testCount =\n      result.numPassingTests +\n      result.numFailingTests +\n      result.numPendingTests +\n      result.numTodoTests;\n    const end = Date.now();\n    const testRuntime = end - start;\n    result.perfStats = {\n      end,\n      runtime: testRuntime,\n      slow: testRuntime / 1000 > config.slowTestThreshold,\n      start\n    };\n    result.testFilePath = path;\n    result.console = testConsole.getBuffer();\n    result.skipped = testCount === result.numPendingTests;\n    result.displayName = config.displayName;\n    const coverage = runtime.getAllCoverageInfoCopy();\n\n    if (coverage) {\n      const coverageKeys = Object.keys(coverage);\n\n      if (coverageKeys.length) {\n        result.coverage = coverage;\n      }\n    }\n\n    if (collectV8Coverage) {\n      const v8Coverage = runtime.getAllV8CoverageInfoCopy();\n\n      if (v8Coverage && v8Coverage.length > 0) {\n        result.v8Coverage = v8Coverage;\n      }\n    }\n\n    if (globalConfig.logHeapUsage) {\n      if (global.gc) {\n        global.gc();\n      }\n\n      result.memoryUsage = process.memoryUsage().heapUsed;\n    } // Delay the resolution to allow log messages to be output.\n\n    return new Promise(resolve => {\n      setImmediate(() =>\n        resolve({\n          leakDetector,\n          result\n        })\n      );\n    });\n  } finally {\n    var _runtime$teardown;\n\n    await environment.teardown(); // TODO: this function might be missing, remove ? in Jest 26\n\n    (_runtime$teardown = runtime.teardown) === null ||\n    _runtime$teardown === void 0\n      ? void 0\n      : _runtime$teardown.call(runtime);\n\n    _sourceMapSupport().default.resetRetrieveHandlers();\n  }\n}\n\nasync function runTest(\n  path,\n  globalConfig,\n  config,\n  resolver,\n  context,\n  sendMessageToJest\n) {\n  const {leakDetector, result} = await runTestInternal(\n    path,\n    globalConfig,\n    config,\n    resolver,\n    context,\n    sendMessageToJest\n  );\n\n  if (leakDetector) {\n    // We wanna allow a tiny but time to pass to allow last-minute cleanup\n    await new Promise(resolve => setTimeout(resolve, 100)); // Resolve leak detector, outside the \"runTestInternal\" closure.\n\n    result.leaks = await leakDetector.isLeaking();\n  } else {\n    result.leaks = false;\n  }\n\n  return result;\n}\n",
    "node_modules/@nestjs/testing/testing-module.builder.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestingModuleBuilder = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst application_config_1 = require(\"@nestjs/core/application-config\");\nconst container_1 = require(\"@nestjs/core/injector/container\");\nconst instance_loader_1 = require(\"@nestjs/core/injector/instance-loader\");\nconst scanner_1 = require(\"@nestjs/core/scanner\");\nconst testing_logger_service_1 = require(\"./services/testing-logger.service\");\nconst testing_module_1 = require(\"./testing-module\");\nclass TestingModuleBuilder {\n    constructor(metadataScanner, metadata) {\n        this.applicationConfig = new application_config_1.ApplicationConfig();\n        this.container = new container_1.NestContainer(this.applicationConfig);\n        this.overloadsMap = new Map();\n        this.instanceLoader = new instance_loader_1.InstanceLoader(this.container);\n        this.scanner = new scanner_1.DependenciesScanner(this.container, metadataScanner, this.applicationConfig);\n        this.module = this.createModule(metadata);\n    }\n    setLogger(testingLogger) {\n        this.testingLogger = testingLogger;\n        return this;\n    }\n    overridePipe(typeOrToken) {\n        return this.override(typeOrToken, false);\n    }\n    overrideFilter(typeOrToken) {\n        return this.override(typeOrToken, false);\n    }\n    overrideGuard(typeOrToken) {\n        return this.override(typeOrToken, false);\n    }\n    overrideInterceptor(typeOrToken) {\n        return this.override(typeOrToken, false);\n    }\n    overrideProvider(typeOrToken) {\n        return this.override(typeOrToken, true);\n    }\n    async compile() {\n        this.applyLogger();\n        await this.scanner.scan(this.module);\n        this.applyOverloadsMap();\n        await this.instanceLoader.createInstancesOfDependencies();\n        this.scanner.applyApplicationProviders();\n        const root = this.getRootModule();\n        return new testing_module_1.TestingModule(this.container, [], root, this.applicationConfig);\n    }\n    override(typeOrToken, isProvider) {\n        const addOverload = (options) => {\n            this.overloadsMap.set(typeOrToken, Object.assign(Object.assign({}, options), { isProvider }));\n            return this;\n        };\n        return this.createOverrideByBuilder(addOverload);\n    }\n    createOverrideByBuilder(add) {\n        return {\n            useValue: value => add({ useValue: value }),\n            useFactory: (options) => add(Object.assign(Object.assign({}, options), { useFactory: options.factory })),\n            useClass: metatype => add({ useClass: metatype }),\n        };\n    }\n    applyOverloadsMap() {\n        [...this.overloadsMap.entries()].forEach(([item, options]) => {\n            this.container.replace(item, options);\n        });\n    }\n    getRootModule() {\n        const modules = this.container.getModules().values();\n        return modules.next().value;\n    }\n    createModule(metadata) {\n        class RootTestModule {\n        }\n        common_1.Module(metadata)(RootTestModule);\n        return RootTestModule;\n    }\n    applyLogger() {\n        common_1.Logger.overrideLogger(this.testingLogger || new testing_logger_service_1.TestingLogger());\n    }\n}\nexports.TestingModuleBuilder = TestingModuleBuilder;\n",
    "node_modules/@nestjs/core/injector/instance-loader.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceLoader = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst messages_1 = require(\"../helpers/messages\");\nconst injector_1 = require(\"./injector\");\nconst internal_core_module_1 = require(\"./internal-core-module\");\nclass InstanceLoader {\n    constructor(container) {\n        this.container = container;\n        this.injector = new injector_1.Injector();\n        this.logger = new common_1.Logger(InstanceLoader.name, true);\n    }\n    async createInstancesOfDependencies() {\n        const modules = this.container.getModules();\n        this.createPrototypes(modules);\n        await this.createInstances(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(module => {\n            this.createPrototypesOfProviders(module);\n            this.createPrototypesOfInjectables(module);\n            this.createPrototypesOfControllers(module);\n        });\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (module) => {\n            await this.createInstancesOfProviders(module);\n            await this.createInstancesOfInjectables(module);\n            await this.createInstancesOfControllers(module);\n            const { name } = module.metatype;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log(messages_1.MODULE_INIT_MESSAGE `${name}`);\n        }));\n    }\n    createPrototypesOfProviders(module) {\n        const { providers } = module;\n        providers.forEach(wrapper => this.injector.loadPrototype(wrapper, providers));\n    }\n    async createInstancesOfProviders(module) {\n        const { providers } = module;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadProvider(item, module)));\n    }\n    createPrototypesOfControllers(module) {\n        const { controllers } = module;\n        controllers.forEach(wrapper => this.injector.loadPrototype(wrapper, controllers));\n    }\n    async createInstancesOfControllers(module) {\n        const { controllers } = module;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadController(item, module)));\n    }\n    createPrototypesOfInjectables(module) {\n        const { injectables } = module;\n        injectables.forEach(wrapper => this.injector.loadPrototype(wrapper, injectables));\n    }\n    async createInstancesOfInjectables(module) {\n        const { injectables } = module;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(item => this.injector.loadInjectable(item, module)));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name;\n    }\n}\nexports.InstanceLoader = InstanceLoader;\n",
    "node_modules/jest-jasmine2/build/queueRunner.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = queueRunner;\n\nvar _jestUtil = require('jest-util');\n\nvar _PCancelable = _interopRequireDefault(require('./PCancelable'));\n\nvar _pTimeout = _interopRequireDefault(require('./pTimeout'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction queueRunner(options) {\n  const token = new _PCancelable.default((onCancel, resolve) => {\n    onCancel(resolve);\n  });\n\n  const mapper = ({fn, timeout, initError = new Error()}) => {\n    let promise = new Promise(resolve => {\n      const next = function (...args) {\n        const err = args[0];\n\n        if (err) {\n          options.fail.apply(null, args);\n        }\n\n        resolve();\n      };\n\n      next.fail = function (...args) {\n        options.fail.apply(null, args);\n        resolve();\n      };\n\n      try {\n        fn.call(options.userContext, next);\n      } catch (e) {\n        options.onException(e);\n        resolve();\n      }\n    });\n    promise = Promise.race([promise, token]);\n\n    if (!timeout) {\n      return promise;\n    }\n\n    const timeoutMs = timeout();\n    return (0, _pTimeout.default)(\n      promise,\n      timeoutMs,\n      options.clearTimeout,\n      options.setTimeout,\n      () => {\n        initError.message =\n          'Timeout - Async callback was not invoked within the ' +\n          (0, _jestUtil.formatTime)(timeoutMs) +\n          ' timeout specified by jest.setTimeout.';\n        initError.stack = initError.message + initError.stack;\n        options.onException(initError);\n      }\n    );\n  };\n\n  const result = options.queueableFns.reduce(\n    (promise, fn) => promise.then(() => mapper(fn)),\n    Promise.resolve()\n  );\n  return {\n    cancel: token.cancel.bind(token),\n    catch: result.catch.bind(result),\n    then: result.then.bind(result)\n  };\n}\n",
    "node_modules/jest-jasmine2/build/jasmineAsyncInstall.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = jasmineAsyncInstall;\n\nvar _co = _interopRequireDefault(require('co'));\n\nvar _isGeneratorFn = _interopRequireDefault(require('is-generator-fn'));\n\nvar _throat = _interopRequireDefault(require('throat'));\n\nvar _isError = _interopRequireDefault(require('./isError'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\n\nconst doneFnNoop = () => {};\n\ndoneFnNoop.fail = () => {};\n\nfunction promisifyLifeCycleFunction(originalFn, env) {\n  return function (fn, timeout) {\n    if (!fn) {\n      // @ts-expect-error: missing fn arg is handled by originalFn\n      return originalFn.call(env);\n    }\n\n    const hasDoneCallback = typeof fn === 'function' && fn.length > 0;\n\n    if (hasDoneCallback) {\n      // Jasmine will handle it\n      return originalFn.call(env, fn, timeout);\n    }\n\n    const extraError = new Error(); // Without this line v8 stores references to all closures\n    // in the stack in the Error object. This line stringifies the stack\n    // property to allow garbage-collecting objects on the stack\n    // https://crbug.com/v8/7142\n\n    extraError.stack = extraError.stack; // We make *all* functions async and run `done` right away if they\n    // didn't return a promise.\n\n    const asyncJestLifecycle = function (done) {\n      const wrappedFn = (0, _isGeneratorFn.default)(fn)\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) {\n            extraError.message = message;\n          }\n\n          done.fail(checkIsError ? error : extraError);\n        });\n      } else {\n        done();\n      }\n    };\n\n    return originalFn.call(env, asyncJestLifecycle, timeout);\n  };\n} // Similar to promisifyLifeCycleFunction but throws an error\n// when the return value is neither a Promise nor `undefined`\n\nfunction promisifyIt(originalFn, env, jasmine) {\n  return function (specName, fn, timeout) {\n    if (!fn) {\n      // @ts-expect-error: missing fn arg is handled by originalFn\n      const spec = originalFn.call(env, specName);\n      spec.pend('not implemented');\n      return spec;\n    }\n\n    const hasDoneCallback = fn.length > 0;\n\n    if (hasDoneCallback) {\n      return originalFn.call(env, specName, fn, timeout);\n    }\n\n    const extraError = new Error(); // Without this line v8 stores references to all closures\n    // in the stack in the Error object. This line stringifies the stack\n    // property to allow garbage-collecting objects on the stack\n    // https://crbug.com/v8/7142\n\n    extraError.stack = extraError.stack;\n\n    const asyncJestTest = function (done) {\n      const wrappedFn = (0, _isGeneratorFn.default)(fn)\n        ? _co.default.wrap(fn)\n        : fn;\n      const returnValue = wrappedFn.call({}, doneFnNoop);\n\n      if (isPromise(returnValue)) {\n        returnValue.then(done.bind(null, null), error => {\n          const {isError: checkIsError, message} = (0, _isError.default)(error);\n\n          if (message) {\n            extraError.message = message;\n          }\n\n          if (jasmine.Spec.isPendingSpecException(error)) {\n            env.pending(message);\n            done();\n          } else {\n            done.fail(checkIsError ? error : extraError);\n          }\n        });\n      } else if (returnValue === undefined) {\n        done();\n      } else {\n        done.fail(\n          new Error(\n            'Jest: `it` and `test` must return either a Promise or undefined.'\n          )\n        );\n      }\n    };\n\n    return originalFn.call(env, specName, asyncJestTest, timeout);\n  };\n}\n\nfunction makeConcurrent(originalFn, env, mutex) {\n  const concurrentFn = function (specName, fn, timeout) {\n    let promise = Promise.resolve();\n    const spec = originalFn.call(env, specName, () => promise, timeout);\n\n    if (env != null && !env.specFilter(spec)) {\n      return spec;\n    }\n\n    try {\n      promise = mutex(() => {\n        const promise = fn();\n\n        if (isPromise(promise)) {\n          return promise;\n        }\n\n        throw new Error(\n          `Jest: concurrent test \"${spec.getFullName()}\" must return a Promise.`\n        );\n      });\n    } catch (error) {\n      promise = Promise.reject(error);\n    }\n\n    return spec;\n  }; // each is binded after the function is made concurrent, so for now it is made noop\n\n  concurrentFn.each = () => () => {};\n\n  return concurrentFn;\n}\n\nfunction jasmineAsyncInstall(globalConfig, global) {\n  const jasmine = global.jasmine;\n  const mutex = (0, _throat.default)(globalConfig.maxConcurrency);\n  const env = jasmine.getEnv();\n  env.it = promisifyIt(env.it, env, jasmine);\n  env.fit = promisifyIt(env.fit, env, jasmine);\n\n  global.it.concurrent = (env => {\n    const concurrent = makeConcurrent(env.it, env, mutex);\n    concurrent.only = makeConcurrent(env.fit, env, mutex);\n    concurrent.skip = makeConcurrent(env.xit, env, mutex);\n    return concurrent;\n  })(env);\n\n  global.fit.concurrent = makeConcurrent(env.fit, env, mutex);\n  env.afterAll = promisifyLifeCycleFunction(env.afterAll, env);\n  env.afterEach = promisifyLifeCycleFunction(env.afterEach, env);\n  env.beforeAll = promisifyLifeCycleFunction(env.beforeAll, env);\n  env.beforeEach = promisifyLifeCycleFunction(env.beforeEach, env);\n}\n",
    "node_modules/jest-jasmine2/build/treeProcessor.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = treeProcessor;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction treeProcessor(options) {\n  const {\n    nodeComplete,\n    nodeStart,\n    queueRunnerFactory,\n    runnableIds,\n    tree\n  } = options;\n\n  function isEnabled(node, parentEnabled) {\n    return parentEnabled || runnableIds.indexOf(node.id) !== -1;\n  }\n\n  function getNodeHandler(node, parentEnabled) {\n    const enabled = isEnabled(node, parentEnabled);\n    return node.children\n      ? getNodeWithChildrenHandler(node, enabled)\n      : getNodeWithoutChildrenHandler(node, enabled);\n  }\n\n  function getNodeWithoutChildrenHandler(node, enabled) {\n    return function fn(done = () => {}) {\n      node.execute(done, enabled);\n    };\n  }\n\n  function getNodeWithChildrenHandler(node, enabled) {\n    return async function fn(done = () => {}) {\n      nodeStart(node);\n      await queueRunnerFactory({\n        onException: error => node.onException(error),\n        queueableFns: wrapChildren(node, enabled),\n        userContext: node.sharedUserContext()\n      });\n      nodeComplete(node);\n      done();\n    };\n  }\n\n  function hasNoEnabledTest(node) {\n    if (node.children) {\n      return node.children.every(hasNoEnabledTest);\n    }\n\n    return node.disabled || node.markedPending;\n  }\n\n  function wrapChildren(node, enabled) {\n    if (!node.children) {\n      throw new Error('`node.children` is not defined.');\n    }\n\n    const children = node.children.map(child => ({\n      fn: getNodeHandler(child, enabled)\n    }));\n\n    if (hasNoEnabledTest(node)) {\n      return children;\n    }\n\n    return node.beforeAllFns.concat(children).concat(node.afterAllFns);\n  }\n\n  const treeHandler = getNodeHandler(tree, false);\n  return treeHandler();\n}\n",
    "node_modules/@nestjs/core/injector/container.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NestContainer = void 0;\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst circular_dependency_exception_1 = require(\"../errors/exceptions/circular-dependency.exception\");\nconst undefined_forwardref_exception_1 = require(\"../errors/exceptions/undefined-forwardref.exception\");\nconst unknown_module_exception_1 = require(\"../errors/exceptions/unknown-module.exception\");\nconst external_context_creator_1 = require(\"../helpers/external-context-creator\");\nconst http_adapter_host_1 = require(\"../helpers/http-adapter-host\");\nconst request_constants_1 = require(\"../router/request/request-constants\");\nconst compiler_1 = require(\"./compiler\");\nconst internal_core_module_1 = require(\"./internal-core-module\");\nconst internal_providers_storage_1 = require(\"./internal-providers-storage\");\nconst module_1 = require(\"./module\");\nconst module_token_factory_1 = require(\"./module-token-factory\");\nconst modules_container_1 = require(\"./modules-container\");\nclass NestContainer {\n    constructor(_applicationConfig = undefined) {\n        this._applicationConfig = _applicationConfig;\n        this.globalModules = new Set();\n        this.moduleTokenFactory = new module_token_factory_1.ModuleTokenFactory();\n        this.moduleCompiler = new compiler_1.ModuleCompiler(this.moduleTokenFactory);\n        this.modules = new modules_container_1.ModulesContainer();\n        this.dynamicModulesMetadata = new Map();\n        this.internalProvidersStorage = new internal_providers_storage_1.InternalProvidersStorage();\n    }\n    get applicationConfig() {\n        return this._applicationConfig;\n    }\n    setHttpAdapter(httpAdapter) {\n        this.internalProvidersStorage.httpAdapter = httpAdapter;\n        if (!this.internalProvidersStorage.httpAdapterHost) {\n            return;\n        }\n        const host = this.internalProvidersStorage.httpAdapterHost;\n        host.httpAdapter = httpAdapter;\n    }\n    getHttpAdapterRef() {\n        return this.internalProvidersStorage.httpAdapter;\n    }\n    async addModule(metatype, scope) {\n        // In DependenciesScanner#scanForModules we already check for undefined or invalid modules\n        // We sill need to catch the edge-case of `forwardRef(() => undefined)`\n        if (!metatype) {\n            throw new undefined_forwardref_exception_1.UndefinedForwardRefException(scope);\n        }\n        const { type, dynamicMetadata, token } = await this.moduleCompiler.compile(metatype);\n        if (this.modules.has(token)) {\n            return;\n        }\n        const moduleRef = new module_1.Module(type, this);\n        this.modules.set(token, moduleRef);\n        await this.addDynamicMetadata(token, dynamicMetadata, [].concat(scope, type));\n        if (this.isGlobalModule(type, dynamicMetadata)) {\n            this.addGlobalModule(moduleRef);\n        }\n        return moduleRef;\n    }\n    async addDynamicMetadata(token, dynamicModuleMetadata, scope) {\n        if (!dynamicModuleMetadata) {\n            return;\n        }\n        this.dynamicModulesMetadata.set(token, dynamicModuleMetadata);\n        const { imports } = dynamicModuleMetadata;\n        await this.addDynamicModules(imports, scope);\n    }\n    async addDynamicModules(modules, scope) {\n        if (!modules) {\n            return;\n        }\n        await Promise.all(modules.map(module => this.addModule(module, scope)));\n    }\n    isGlobalModule(metatype, dynamicMetadata) {\n        if (dynamicMetadata && dynamicMetadata.global) {\n            return true;\n        }\n        return !!Reflect.getMetadata(constants_1.GLOBAL_MODULE_METADATA, metatype);\n    }\n    addGlobalModule(module) {\n        this.globalModules.add(module);\n    }\n    getModules() {\n        return this.modules;\n    }\n    getModuleByKey(moduleKey) {\n        return this.modules.get(moduleKey);\n    }\n    getInternalCoreModuleRef() {\n        return this.internalCoreModule;\n    }\n    async addImport(relatedModule, token) {\n        if (!this.modules.has(token)) {\n            return;\n        }\n        const moduleRef = this.modules.get(token);\n        const { token: relatedModuleToken } = await this.moduleCompiler.compile(relatedModule);\n        const related = this.modules.get(relatedModuleToken);\n        moduleRef.addRelatedModule(related);\n    }\n    addProvider(provider, token) {\n        if (!provider) {\n            throw new circular_dependency_exception_1.CircularDependencyException();\n        }\n        if (!this.modules.has(token)) {\n            throw new unknown_module_exception_1.UnknownModuleException();\n        }\n        const moduleRef = this.modules.get(token);\n        return moduleRef.addProvider(provider);\n    }\n    addInjectable(injectable, token, host) {\n        if (!this.modules.has(token)) {\n            throw new unknown_module_exception_1.UnknownModuleException();\n        }\n        const moduleRef = this.modules.get(token);\n        moduleRef.addInjectable(injectable, host);\n    }\n    addExportedProvider(provider, token) {\n        if (!this.modules.has(token)) {\n            throw new unknown_module_exception_1.UnknownModuleException();\n        }\n        const moduleRef = this.modules.get(token);\n        moduleRef.addExportedProvider(provider);\n    }\n    addController(controller, token) {\n        if (!this.modules.has(token)) {\n            throw new unknown_module_exception_1.UnknownModuleException();\n        }\n        const moduleRef = this.modules.get(token);\n        moduleRef.addController(controller);\n    }\n    clear() {\n        this.modules.clear();\n    }\n    replace(toReplace, options) {\n        this.modules.forEach(moduleRef => moduleRef.replace(toReplace, options));\n    }\n    bindGlobalScope() {\n        this.modules.forEach(moduleRef => this.bindGlobalsToImports(moduleRef));\n    }\n    bindGlobalsToImports(moduleRef) {\n        this.globalModules.forEach(globalModule => this.bindGlobalModuleToModule(moduleRef, globalModule));\n    }\n    bindGlobalModuleToModule(target, globalModule) {\n        if (target === globalModule || target === this.internalCoreModule) {\n            return;\n        }\n        target.addRelatedModule(globalModule);\n    }\n    getDynamicMetadataByToken(token, metadataKey) {\n        const metadata = this.dynamicModulesMetadata.get(token);\n        if (metadata && metadata[metadataKey]) {\n            return metadata[metadataKey];\n        }\n        return [];\n    }\n    createCoreModule() {\n        return internal_core_module_1.InternalCoreModule.register([\n            {\n                provide: external_context_creator_1.ExternalContextCreator,\n                useValue: external_context_creator_1.ExternalContextCreator.fromContainer(this),\n            },\n            {\n                provide: modules_container_1.ModulesContainer,\n                useValue: this.modules,\n            },\n            {\n                provide: http_adapter_host_1.HttpAdapterHost,\n                useValue: this.internalProvidersStorage.httpAdapterHost,\n            },\n        ]);\n    }\n    registerCoreModuleRef(moduleRef) {\n        this.internalCoreModule = moduleRef;\n        this.modules[internal_core_module_1.InternalCoreModule.name] = moduleRef;\n    }\n    getModuleTokenFactory() {\n        return this.moduleTokenFactory;\n    }\n    registerRequestProvider(request, contextId) {\n        const wrapper = this.internalCoreModule.getProviderByKey(request_constants_1.REQUEST);\n        wrapper.setInstanceByContextId(contextId, {\n            instance: request,\n            isResolved: true,\n        });\n    }\n}\nexports.NestContainer = NestContainer;\n",
    "node_modules/@nestjs/core/injector/injector.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Injector = void 0;\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst runtime_exception_1 = require(\"../errors/exceptions/runtime.exception\");\nconst undefined_dependency_exception_1 = require(\"../errors/exceptions/undefined-dependency.exception\");\nconst unknown_dependencies_exception_1 = require(\"../errors/exceptions/unknown-dependencies.exception\");\nconst constants_2 = require(\"./constants\");\nconst inquirer_1 = require(\"./inquirer\");\nconst instance_wrapper_1 = require(\"./instance-wrapper\");\nclass Injector {\n    loadPrototype({ name }, collection, contextId = constants_2.STATIC_CONTEXT) {\n        if (!collection) {\n            return;\n        }\n        const target = collection.get(name);\n        const instance = target.createPrototype(contextId);\n        if (instance) {\n            const wrapper = new instance_wrapper_1.InstanceWrapper(Object.assign(Object.assign({}, target), { instance }));\n            collection.set(name, wrapper);\n        }\n    }\n    async loadInstance(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer);\n        const instanceHost = wrapper.getInstanceByContextId(contextId, inquirerId);\n        if (instanceHost.isPending) {\n            return instanceHost.donePromise;\n        }\n        const done = this.applyDoneHook(instanceHost);\n        const { name, inject } = wrapper;\n        const targetWrapper = collection.get(name);\n        if (shared_utils_1.isUndefined(targetWrapper)) {\n            throw new runtime_exception_1.RuntimeException();\n        }\n        if (instanceHost.isResolved) {\n            return done();\n        }\n        const callback = async (instances) => {\n            const properties = await this.resolveProperties(wrapper, moduleRef, inject, contextId, wrapper, inquirer);\n            const instance = await this.instantiateClass(instances, wrapper, targetWrapper, contextId, inquirer);\n            this.applyProperties(instance, properties);\n            done();\n        };\n        await this.resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId, wrapper, inquirer);\n    }\n    async loadMiddleware(wrapper, collection, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype } = wrapper;\n        const targetWrapper = collection.get(metatype.name);\n        if (!shared_utils_1.isUndefined(targetWrapper.instance)) {\n            return;\n        }\n        targetWrapper.instance = Object.create(metatype.prototype);\n        await this.loadInstance(wrapper, collection, moduleRef, contextId, inquirer || wrapper);\n    }\n    async loadController(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT) {\n        const controllers = moduleRef.controllers;\n        await this.loadInstance(wrapper, controllers, moduleRef, contextId, wrapper);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    async loadInjectable(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const injectables = moduleRef.injectables;\n        await this.loadInstance(wrapper, injectables, moduleRef, contextId, inquirer);\n    }\n    async loadProvider(wrapper, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const providers = moduleRef.providers;\n        await this.loadInstance(wrapper, providers, moduleRef, contextId, inquirer);\n        await this.loadEnhancersPerContext(wrapper, contextId, wrapper);\n    }\n    applyDoneHook(wrapper) {\n        let done;\n        wrapper.donePromise = new Promise((resolve, reject) => {\n            done = resolve;\n        });\n        wrapper.isPending = true;\n        return done;\n    }\n    async resolveConstructorParams(wrapper, moduleRef, inject, callback, contextId = constants_2.STATIC_CONTEXT, inquirer, parentInquirer) {\n        const inquirerId = this.getInquirerId(inquirer);\n        const metadata = wrapper.getCtorMetadata();\n        if (metadata && contextId !== constants_2.STATIC_CONTEXT) {\n            const deps = await this.loadCtorMetadata(metadata, contextId, inquirer, parentInquirer);\n            return callback(deps);\n        }\n        const dependencies = shared_utils_1.isNil(inject)\n            ? this.reflectConstructorParams(wrapper.metatype)\n            : inject;\n        const optionalDependenciesIds = shared_utils_1.isNil(inject)\n            ? this.reflectOptionalParams(wrapper.metatype)\n            : [];\n        let isResolved = true;\n        const resolveParam = async (param, index) => {\n            try {\n                if (this.isInquirer(param, parentInquirer)) {\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, param, { index, dependencies }, moduleRef, contextId, inquirer, index);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                if (!instanceHost.isResolved && !paramWrapper.forwardRef) {\n                    isResolved = false;\n                }\n                return instanceHost === null || instanceHost === void 0 ? void 0 : instanceHost.instance;\n            }\n            catch (err) {\n                const isOptional = optionalDependenciesIds.includes(index);\n                if (!isOptional) {\n                    throw err;\n                }\n                return undefined;\n            }\n        };\n        const instances = await Promise.all(dependencies.map(resolveParam));\n        isResolved && (await callback(instances));\n    }\n    reflectConstructorParams(type) {\n        const paramtypes = Reflect.getMetadata(constants_1.PARAMTYPES_METADATA, type) || [];\n        const selfParams = this.reflectSelfParams(type);\n        selfParams.forEach(({ index, param }) => (paramtypes[index] = param));\n        return paramtypes;\n    }\n    reflectOptionalParams(type) {\n        return Reflect.getMetadata(constants_1.OPTIONAL_DEPS_METADATA, type) || [];\n    }\n    reflectSelfParams(type) {\n        return Reflect.getMetadata(constants_1.SELF_DECLARED_DEPS_METADATA, type) || [];\n    }\n    async resolveSingleParam(wrapper, param, dependencyContext, moduleRef, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        if (shared_utils_1.isUndefined(param)) {\n            throw new undefined_dependency_exception_1.UndefinedDependencyException(wrapper.name, dependencyContext, moduleRef);\n        }\n        const token = this.resolveParamToken(wrapper, param);\n        return this.resolveComponentInstance(moduleRef, shared_utils_1.isFunction(token) ? token.name : token, dependencyContext, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    resolveParamToken(wrapper, param) {\n        if (!param.forwardRef) {\n            return param;\n        }\n        wrapper.forwardRef = true;\n        return param.forwardRef();\n    }\n    async resolveComponentInstance(moduleRef, name, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const providers = moduleRef.providers;\n        const instanceWrapper = await this.lookupComponent(providers, moduleRef, Object.assign(Object.assign({}, dependencyContext), { name }), wrapper, contextId, inquirer, keyOrIndex);\n        return this.resolveComponentHost(moduleRef, instanceWrapper, contextId, inquirer);\n    }\n    async resolveComponentHost(moduleRef, instanceWrapper, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const inquirerId = this.getInquirerId(inquirer);\n        const instanceHost = instanceWrapper.getInstanceByContextId(contextId, inquirerId);\n        if (!instanceHost.isResolved && !instanceWrapper.forwardRef) {\n            await this.loadProvider(instanceWrapper, moduleRef, contextId, inquirer);\n        }\n        else if (!instanceHost.isResolved &&\n            instanceWrapper.forwardRef &&\n            (contextId !== constants_2.STATIC_CONTEXT || !!inquirerId)) {\n            /**\n             * When circular dependency has been detected between\n             * either request/transient providers, we have to asynchronously\n             * resolve instance host for a specific contextId or inquirer, to ensure\n             * that eventual lazily created instance will be merged with the prototype\n             * instantiated beforehand.\n             */\n            instanceHost.donePromise &&\n                instanceHost.donePromise.then(() => this.loadProvider(instanceWrapper, moduleRef, contextId, inquirer));\n        }\n        if (instanceWrapper.async) {\n            const host = instanceWrapper.getInstanceByContextId(contextId, inquirerId);\n            host.instance = await host.instance;\n            instanceWrapper.setInstanceByContextId(contextId, host, inquirerId);\n        }\n        return instanceWrapper;\n    }\n    async lookupComponent(providers, moduleRef, dependencyContext, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const { name } = dependencyContext;\n        if (wrapper && wrapper.name === name) {\n            throw new unknown_dependencies_exception_1.UnknownDependenciesException(wrapper.name, dependencyContext, moduleRef);\n        }\n        if (providers.has(name)) {\n            const instanceWrapper = providers.get(name);\n            this.addDependencyMetadata(keyOrIndex, wrapper, instanceWrapper);\n            return instanceWrapper;\n        }\n        return this.lookupComponentInParentModules(dependencyContext, moduleRef, wrapper, contextId, inquirer, keyOrIndex);\n    }\n    async lookupComponentInParentModules(dependencyContext, moduleRef, wrapper, contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex) {\n        const instanceWrapper = await this.lookupComponentInImports(moduleRef, dependencyContext.name, wrapper, [], contextId, inquirer, keyOrIndex);\n        if (shared_utils_1.isNil(instanceWrapper)) {\n            throw new unknown_dependencies_exception_1.UnknownDependenciesException(wrapper.name, dependencyContext, moduleRef);\n        }\n        return instanceWrapper;\n    }\n    async lookupComponentInImports(moduleRef, name, wrapper, moduleRegistry = [], contextId = constants_2.STATIC_CONTEXT, inquirer, keyOrIndex, isTraversing) {\n        let instanceWrapperRef = null;\n        const imports = moduleRef.imports || new Set();\n        const identity = (item) => item;\n        let children = [...imports.values()].filter(identity);\n        if (isTraversing) {\n            const contextModuleExports = moduleRef.exports;\n            children = children.filter(child => contextModuleExports.has(child.metatype && child.metatype.name));\n        }\n        for (const relatedModule of children) {\n            if (moduleRegistry.includes(relatedModule.id)) {\n                continue;\n            }\n            moduleRegistry.push(relatedModule.id);\n            const { providers, exports } = relatedModule;\n            if (!exports.has(name) || !providers.has(name)) {\n                const instanceRef = await this.lookupComponentInImports(relatedModule, name, wrapper, moduleRegistry, contextId, inquirer, keyOrIndex, true);\n                if (instanceRef) {\n                    this.addDependencyMetadata(keyOrIndex, wrapper, instanceRef);\n                    return instanceRef;\n                }\n                continue;\n            }\n            instanceWrapperRef = providers.get(name);\n            this.addDependencyMetadata(keyOrIndex, wrapper, instanceWrapperRef);\n            const inquirerId = this.getInquirerId(inquirer);\n            const instanceHost = instanceWrapperRef.getInstanceByContextId(contextId, inquirerId);\n            if (!instanceHost.isResolved && !instanceWrapperRef.forwardRef) {\n                await this.loadProvider(instanceWrapperRef, relatedModule, contextId, wrapper);\n                break;\n            }\n        }\n        return instanceWrapperRef;\n    }\n    async resolveProperties(wrapper, moduleRef, inject, contextId = constants_2.STATIC_CONTEXT, inquirer, parentInquirer) {\n        if (!shared_utils_1.isNil(inject)) {\n            return [];\n        }\n        const metadata = wrapper.getPropertiesMetadata();\n        if (metadata && contextId !== constants_2.STATIC_CONTEXT) {\n            return this.loadPropertiesMetadata(metadata, contextId, inquirer);\n        }\n        const properties = this.reflectProperties(wrapper.metatype);\n        const instances = await Promise.all(properties.map(async (item) => {\n            try {\n                const dependencyContext = {\n                    key: item.key,\n                    name: item.name,\n                };\n                if (this.isInquirer(item.name, parentInquirer)) {\n                    return parentInquirer && parentInquirer.instance;\n                }\n                const paramWrapper = await this.resolveSingleParam(wrapper, item.name, dependencyContext, moduleRef, contextId, inquirer, item.key);\n                if (!paramWrapper) {\n                    return undefined;\n                }\n                const inquirerId = this.getInquirerId(inquirer);\n                const instanceHost = paramWrapper.getInstanceByContextId(contextId, inquirerId);\n                return instanceHost.instance;\n            }\n            catch (err) {\n                if (!item.isOptional) {\n                    throw err;\n                }\n                return undefined;\n            }\n        }));\n        return properties.map((item, index) => (Object.assign(Object.assign({}, item), { instance: instances[index] })));\n    }\n    reflectProperties(type) {\n        const properties = Reflect.getMetadata(constants_1.PROPERTY_DEPS_METADATA, type) || [];\n        const optionalKeys = Reflect.getMetadata(constants_1.OPTIONAL_PROPERTY_DEPS_METADATA, type) || [];\n        return properties.map((item) => (Object.assign(Object.assign({}, item), { name: item.type, isOptional: optionalKeys.includes(item.key) })));\n    }\n    applyProperties(instance, properties) {\n        if (!shared_utils_1.isObject(instance)) {\n            return undefined;\n        }\n        iterare_1.iterate(properties)\n            .filter(item => !shared_utils_1.isNil(item.instance))\n            .forEach(item => (instance[item.key] = item.instance));\n    }\n    async instantiateClass(instances, wrapper, targetMetatype, contextId = constants_2.STATIC_CONTEXT, inquirer) {\n        const { metatype, inject } = wrapper;\n        const inquirerId = this.getInquirerId(inquirer);\n        const instanceHost = targetMetatype.getInstanceByContextId(contextId, inquirerId);\n        const isStatic = wrapper.isStatic(contextId, inquirer);\n        const isInRequestScope = wrapper.isInRequestScope(contextId, inquirer);\n        const isLazyTransient = wrapper.isLazyTransient(contextId, inquirer);\n        const isExplicitlyRequested = wrapper.isExplicitlyRequested(contextId, inquirer);\n        const isInContext = isStatic || isInRequestScope || isLazyTransient || isExplicitlyRequested;\n        if (shared_utils_1.isNil(inject) && isInContext) {\n            instanceHost.instance = wrapper.forwardRef\n                ? Object.assign(instanceHost.instance, new metatype(...instances))\n                : new metatype(...instances);\n        }\n        else if (isInContext) {\n            const factoryReturnValue = targetMetatype.metatype(...instances);\n            instanceHost.instance = await factoryReturnValue;\n        }\n        instanceHost.isResolved = true;\n        return instanceHost.instance;\n    }\n    async loadPerContext(instance, moduleRef, collection, ctx, wrapper) {\n        if (!wrapper) {\n            const providerCtor = instance.constructor;\n            const injectionToken = (providerCtor && providerCtor.name) ||\n                providerCtor;\n            wrapper = collection.get(injectionToken);\n        }\n        await this.loadInstance(wrapper, collection, moduleRef, ctx, wrapper);\n        await this.loadEnhancersPerContext(wrapper, ctx, wrapper);\n        const host = wrapper.getInstanceByContextId(ctx, wrapper.id);\n        return host && host.instance;\n    }\n    async loadEnhancersPerContext(wrapper, ctx, inquirer) {\n        const enhancers = wrapper.getEnhancersMetadata() || [];\n        const loadEnhancer = (item) => {\n            const hostModule = item.host;\n            return this.loadInstance(item, hostModule.injectables, hostModule, ctx, inquirer);\n        };\n        await Promise.all(enhancers.map(loadEnhancer));\n    }\n    async loadCtorMetadata(metadata, contextId, inquirer, parentInquirer) {\n        const hosts = await Promise.all(metadata.map(async (item) => this.resolveScopedComponentHost(item, contextId, inquirer, parentInquirer)));\n        const inquirerId = this.getInquirerId(inquirer);\n        return hosts.map(item => item.getInstanceByContextId(contextId, inquirerId).instance);\n    }\n    async loadPropertiesMetadata(metadata, contextId, inquirer) {\n        const dependenciesHosts = await Promise.all(metadata.map(async ({ wrapper: item, key }) => ({\n            key,\n            host: await this.resolveComponentHost(item.host, item, contextId, inquirer),\n        })));\n        const inquirerId = this.getInquirerId(inquirer);\n        return dependenciesHosts.map(({ key, host }) => ({\n            key,\n            name: key,\n            instance: host.getInstanceByContextId(contextId, inquirerId).instance,\n        }));\n    }\n    getInquirerId(inquirer) {\n        return inquirer && inquirer.id;\n    }\n    resolveScopedComponentHost(item, contextId, inquirer, parentInquirer) {\n        return this.isInquirerRequest(item, parentInquirer)\n            ? parentInquirer\n            : this.resolveComponentHost(item.host, item, contextId, inquirer);\n    }\n    isInquirerRequest(item, parentInquirer) {\n        return item.isTransient && item.name === inquirer_1.INQUIRER && parentInquirer;\n    }\n    isInquirer(param, parentInquirer) {\n        return param === inquirer_1.INQUIRER && parentInquirer;\n    }\n    addDependencyMetadata(keyOrIndex, hostWrapper, instanceWrapper) {\n        shared_utils_1.isString(keyOrIndex)\n            ? hostWrapper.addPropertiesMetadata(keyOrIndex, instanceWrapper)\n            : hostWrapper.addCtorMetadata(keyOrIndex, instanceWrapper);\n    }\n}\nexports.Injector = Injector;\n",
    "node_modules/@nestjs/core/scanner.js": "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DependenciesScanner = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst interfaces_1 = require(\"@nestjs/common/interfaces\");\nconst random_string_generator_util_1 = require(\"@nestjs/common/utils/random-string-generator.util\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst application_config_1 = require(\"./application-config\");\nconst constants_2 = require(\"./constants\");\nconst circular_dependency_exception_1 = require(\"./errors/exceptions/circular-dependency.exception\");\nconst invalid_module_exception_1 = require(\"./errors/exceptions/invalid-module.exception\");\nconst undefined_module_exception_1 = require(\"./errors/exceptions/undefined-module.exception\");\nconst get_class_scope_1 = require(\"./helpers/get-class-scope\");\nclass DependenciesScanner {\n    constructor(container, metadataScanner, applicationConfig = new application_config_1.ApplicationConfig()) {\n        this.container = container;\n        this.metadataScanner = metadataScanner;\n        this.applicationConfig = applicationConfig;\n        this.applicationProvidersApplyMap = [];\n    }\n    async scan(module) {\n        await this.registerCoreModule();\n        await this.scanForModules(module);\n        await this.scanModulesForDependencies();\n        this.addScopedEnhancersMetadata();\n        this.container.bindGlobalScope();\n    }\n    async scanForModules(moduleDefinition, scope = [], ctxRegistry = []) {\n        const moduleInstance = await this.insertModule(moduleDefinition, scope);\n        moduleDefinition =\n            moduleDefinition instanceof Promise\n                ? await moduleDefinition\n                : moduleDefinition;\n        ctxRegistry.push(moduleDefinition);\n        if (this.isForwardReference(moduleDefinition)) {\n            moduleDefinition = moduleDefinition.forwardRef();\n        }\n        const modules = !this.isDynamicModule(moduleDefinition)\n            ? this.reflectMetadata(moduleDefinition, constants_1.MODULE_METADATA.IMPORTS)\n            : [\n                ...this.reflectMetadata(moduleDefinition.module, constants_1.MODULE_METADATA.IMPORTS),\n                ...(moduleDefinition.imports || []),\n            ];\n        for (const [index, innerModule] of modules.entries()) {\n            // In case of a circular dependency (ES module system), JavaScript will resolve the type to `undefined`.\n            if (innerModule === undefined) {\n                throw new undefined_module_exception_1.UndefinedModuleException(moduleDefinition, index, scope);\n            }\n            if (!innerModule) {\n                throw new invalid_module_exception_1.InvalidModuleException(moduleDefinition, index, scope);\n            }\n            if (ctxRegistry.includes(innerModule)) {\n                continue;\n            }\n            await this.scanForModules(innerModule, [].concat(scope, moduleDefinition), ctxRegistry);\n        }\n        return moduleInstance;\n    }\n    async insertModule(module, scope) {\n        if (module && module.forwardRef) {\n            return this.container.addModule(module.forwardRef(), scope);\n        }\n        return this.container.addModule(module, scope);\n    }\n    async scanModulesForDependencies() {\n        const modules = this.container.getModules();\n        for (const [token, { metatype }] of modules) {\n            await this.reflectImports(metatype, token, metatype.name);\n            this.reflectProviders(metatype, token);\n            this.reflectControllers(metatype, token);\n            this.reflectExports(metatype, token);\n        }\n        this.calculateModulesDistance(modules);\n    }\n    async reflectImports(module, token, context) {\n        const modules = [\n            ...this.reflectMetadata(module, constants_1.MODULE_METADATA.IMPORTS),\n            ...this.container.getDynamicMetadataByToken(token, constants_1.MODULE_METADATA.IMPORTS),\n        ];\n        for (const related of modules) {\n            await this.insertImport(related, token, context);\n        }\n    }\n    reflectProviders(module, token) {\n        const providers = [\n            ...this.reflectMetadata(module, constants_1.MODULE_METADATA.PROVIDERS),\n            ...this.container.getDynamicMetadataByToken(token, constants_1.MODULE_METADATA.PROVIDERS),\n        ];\n        providers.forEach(provider => {\n            this.insertProvider(provider, token);\n            this.reflectDynamicMetadata(provider, token);\n        });\n    }\n    reflectControllers(module, token) {\n        const controllers = [\n            ...this.reflectMetadata(module, constants_1.MODULE_METADATA.CONTROLLERS),\n            ...this.container.getDynamicMetadataByToken(token, constants_1.MODULE_METADATA.CONTROLLERS),\n        ];\n        controllers.forEach(item => {\n            this.insertController(item, token);\n            this.reflectDynamicMetadata(item, token);\n        });\n    }\n    reflectDynamicMetadata(obj, token) {\n        if (!obj || !obj.prototype) {\n            return;\n        }\n        this.reflectInjectables(obj, token, constants_1.GUARDS_METADATA);\n        this.reflectInjectables(obj, token, constants_1.INTERCEPTORS_METADATA);\n        this.reflectInjectables(obj, token, constants_1.EXCEPTION_FILTERS_METADATA);\n        this.reflectInjectables(obj, token, constants_1.PIPES_METADATA);\n        this.reflectParamInjectables(obj, token, constants_1.ROUTE_ARGS_METADATA);\n    }\n    reflectExports(module, token) {\n        const exports = [\n            ...this.reflectMetadata(module, constants_1.MODULE_METADATA.EXPORTS),\n            ...this.container.getDynamicMetadataByToken(token, constants_1.MODULE_METADATA.EXPORTS),\n        ];\n        exports.forEach(exportedProvider => this.insertExportedProvider(exportedProvider, token));\n    }\n    reflectInjectables(component, token, metadataKey) {\n        const controllerInjectables = this.reflectMetadata(component, metadataKey);\n        const methodsInjectables = this.metadataScanner.scanFromPrototype(null, component.prototype, this.reflectKeyMetadata.bind(this, component, metadataKey));\n        const flattenMethodsInjectables = this.flatten(methodsInjectables);\n        const combinedInjectables = [\n            ...controllerInjectables,\n            ...flattenMethodsInjectables,\n        ].filter(shared_utils_1.isFunction);\n        const injectables = Array.from(new Set(combinedInjectables));\n        injectables.forEach(injectable => this.insertInjectable(injectable, token, component));\n    }\n    reflectParamInjectables(component, token, metadataKey) {\n        const paramsMetadata = this.metadataScanner.scanFromPrototype(null, component.prototype, method => Reflect.getMetadata(metadataKey, component, method));\n        const paramsInjectables = this.flatten(paramsMetadata).map((param) => common_1.flatten(Object.keys(param).map(k => param[k].pipes)).filter(shared_utils_1.isFunction));\n        common_1.flatten(paramsInjectables).forEach((injectable) => this.insertInjectable(injectable, token, component));\n    }\n    reflectKeyMetadata(component, key, method) {\n        let prototype = component.prototype;\n        do {\n            const descriptor = Reflect.getOwnPropertyDescriptor(prototype, method);\n            if (!descriptor) {\n                continue;\n            }\n            return Reflect.getMetadata(key, descriptor.value);\n        } while ((prototype = Reflect.getPrototypeOf(prototype)) &&\n            prototype !== Object.prototype &&\n            prototype);\n        return undefined;\n    }\n    async calculateModulesDistance(modules) {\n        const modulesGenerator = modules.values();\n        const rootModule = modulesGenerator.next().value;\n        const modulesStack = [rootModule];\n        const calculateDistance = (moduleRef, distance = 1) => {\n            if (modulesStack.includes(moduleRef)) {\n                return;\n            }\n            modulesStack.push(moduleRef);\n            const moduleImports = rootModule.relatedModules;\n            moduleImports.forEach(module => {\n                module.distance = distance;\n                calculateDistance(module, distance + 1);\n            });\n        };\n        calculateDistance(rootModule);\n    }\n    async insertImport(related, token, context) {\n        if (shared_utils_1.isUndefined(related)) {\n            throw new circular_dependency_exception_1.CircularDependencyException(context);\n        }\n        if (related && related.forwardRef) {\n            return this.container.addImport(related.forwardRef(), token);\n        }\n        await this.container.addImport(related, token);\n    }\n    isCustomProvider(provider) {\n        return provider && !shared_utils_1.isNil(provider.provide);\n    }\n    insertProvider(provider, token) {\n        const isCustomProvider = this.isCustomProvider(provider);\n        if (!isCustomProvider) {\n            return this.container.addProvider(provider, token);\n        }\n        const applyProvidersMap = this.getApplyProvidersMap();\n        const providersKeys = Object.keys(applyProvidersMap);\n        const type = provider.provide;\n        if (!providersKeys.includes(type)) {\n            return this.container.addProvider(provider, token);\n        }\n        const providerToken = `${type} (UUID: ${random_string_generator_util_1.randomStringGenerator()})`;\n        let scope = provider.scope;\n        if (shared_utils_1.isNil(scope) && provider.useClass) {\n            scope = get_class_scope_1.getClassScope(provider.useClass);\n        }\n        this.applicationProvidersApplyMap.push({\n            type,\n            moduleKey: token,\n            providerKey: providerToken,\n            scope,\n        });\n        const newProvider = Object.assign(Object.assign({}, provider), { provide: providerToken, scope });\n        if (this.isRequestOrTransient(newProvider.scope)) {\n            return this.container.addInjectable(newProvider, token);\n        }\n        this.container.addProvider(newProvider, token);\n    }\n    insertInjectable(injectable, token, host) {\n        this.container.addInjectable(injectable, token, host);\n    }\n    insertExportedProvider(exportedProvider, token) {\n        this.container.addExportedProvider(exportedProvider, token);\n    }\n    insertController(controller, token) {\n        this.container.addController(controller, token);\n    }\n    reflectMetadata(metatype, metadataKey) {\n        return Reflect.getMetadata(metadataKey, metatype) || [];\n    }\n    async registerCoreModule() {\n        const module = this.container.createCoreModule();\n        const instance = await this.scanForModules(module);\n        this.container.registerCoreModuleRef(instance);\n    }\n    /**\n     * Add either request or transient globally scoped enhancers\n     * to all controllers metadata storage\n     */\n    addScopedEnhancersMetadata() {\n        iterare_1.iterate(this.applicationProvidersApplyMap)\n            .filter(wrapper => this.isRequestOrTransient(wrapper.scope))\n            .forEach(({ moduleKey, providerKey }) => {\n            const modulesContainer = this.container.getModules();\n            const { injectables } = modulesContainer.get(moduleKey);\n            const instanceWrapper = injectables.get(providerKey);\n            iterare_1.iterate(modulesContainer.values())\n                .map(module => module.controllers.values())\n                .flatten()\n                .forEach(controller => controller.addEnhancerMetadata(instanceWrapper));\n        });\n    }\n    applyApplicationProviders() {\n        const applyProvidersMap = this.getApplyProvidersMap();\n        const applyRequestProvidersMap = this.getApplyRequestProvidersMap();\n        const getInstanceWrapper = (moduleKey, providerKey, collectionKey) => {\n            const modules = this.container.getModules();\n            const collection = modules.get(moduleKey)[collectionKey];\n            return collection.get(providerKey);\n        };\n        // Add global enhancers to the application config\n        this.applicationProvidersApplyMap.forEach(({ moduleKey, providerKey, type, scope }) => {\n            let instanceWrapper;\n            if (this.isRequestOrTransient(scope)) {\n                instanceWrapper = getInstanceWrapper(moduleKey, providerKey, 'injectables');\n                return applyRequestProvidersMap[type](instanceWrapper);\n            }\n            instanceWrapper = getInstanceWrapper(moduleKey, providerKey, 'providers');\n            applyProvidersMap[type](instanceWrapper.instance);\n        });\n    }\n    getApplyProvidersMap() {\n        return {\n            [constants_2.APP_INTERCEPTOR]: (interceptor) => this.applicationConfig.addGlobalInterceptor(interceptor),\n            [constants_2.APP_PIPE]: (pipe) => this.applicationConfig.addGlobalPipe(pipe),\n            [constants_2.APP_GUARD]: (guard) => this.applicationConfig.addGlobalGuard(guard),\n            [constants_2.APP_FILTER]: (filter) => this.applicationConfig.addGlobalFilter(filter),\n        };\n    }\n    getApplyRequestProvidersMap() {\n        return {\n            [constants_2.APP_INTERCEPTOR]: (interceptor) => this.applicationConfig.addGlobalRequestInterceptor(interceptor),\n            [constants_2.APP_PIPE]: (pipe) => this.applicationConfig.addGlobalRequestPipe(pipe),\n            [constants_2.APP_GUARD]: (guard) => this.applicationConfig.addGlobalRequestGuard(guard),\n            [constants_2.APP_FILTER]: (filter) => this.applicationConfig.addGlobalRequestFilter(filter),\n        };\n    }\n    isDynamicModule(module) {\n        return module && !!module.module;\n    }\n    isForwardReference(module) {\n        return module && !!module.forwardRef;\n    }\n    flatten(arr) {\n        return arr.reduce((a, b) => a.concat(b), []);\n    }\n    isRequestOrTransient(scope) {\n        return scope === interfaces_1.Scope.REQUEST || scope === interfaces_1.Scope.TRANSIENT;\n    }\n}\nexports.DependenciesScanner = DependenciesScanner;\n",
    "node_modules/jest-jasmine2/build/PCancelable.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass CancelError extends Error {\n  constructor() {\n    super('Promise was canceled');\n    this.name = 'CancelError';\n  }\n}\n\nclass PCancelable extends Promise {\n  constructor(executor) {\n    super(resolve => resolve());\n\n    _defineProperty(this, '_pending', true);\n\n    _defineProperty(this, '_canceled', false);\n\n    _defineProperty(this, '_promise', void 0);\n\n    _defineProperty(this, '_cancel', void 0);\n\n    _defineProperty(this, '_reject', () => {});\n\n    this._promise = new Promise((resolve, reject) => {\n      this._reject = reject;\n      return executor(\n        fn => {\n          this._cancel = fn;\n        },\n        val => {\n          this._pending = false;\n          resolve(val);\n        },\n        err => {\n          this._pending = false;\n          reject(err);\n        }\n      );\n    });\n  }\n\n  then(onFulfilled, onRejected) {\n    return this._promise.then(onFulfilled, onRejected);\n  }\n\n  catch(onRejected) {\n    return this._promise.catch(onRejected);\n  }\n\n  cancel() {\n    if (!this._pending || this._canceled) {\n      return;\n    }\n\n    if (typeof this._cancel === 'function') {\n      try {\n        this._cancel();\n      } catch (err) {\n        this._reject(err);\n      }\n    }\n\n    this._canceled = true;\n\n    this._reject(new CancelError());\n  }\n}\n\nexports.default = PCancelable;\n",
    "node_modules/jest-util/build/isPromise.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// capture global.Promise before it may potentially be overwritten\nconst Promise = global.Promise; // see ES2015 spec 25.4.4.5, https://stackoverflow.com/a/38339199\n\nconst isPromise = candidate => Promise.resolve(candidate) === candidate;\n\nvar _default = isPromise;\nexports.default = _default;\n",
    "node_modules/jest-jasmine2/build/index.js": "'use strict';\n\nvar path = _interopRequireWildcard(require('path'));\n\nvar _sourceMap = require('@jest/source-map');\n\nvar _each = _interopRequireDefault(require('./each'));\n\nvar _errorOnPrivate = require('./errorOnPrivate');\n\nvar _jasmineAsyncInstall = _interopRequireDefault(\n  require('./jasmineAsyncInstall')\n);\n\nvar _reporter = _interopRequireDefault(require('./reporter'));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== 'function') return null;\n  var cache = new WeakMap();\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {\n    return {default: obj};\n  }\n  var cache = _getRequireWildcardCache();\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor =\n    Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor\n        ? Object.getOwnPropertyDescriptor(obj, key)\n        : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst JASMINE = require.resolve('./jasmine/jasmineLight');\n\nconst jestEachBuildDir = path.dirname(require.resolve('jest-each'));\n\nasync function jasmine2(globalConfig, config, environment, runtime, testPath) {\n  var _runtime$unstable_sho2;\n\n  const reporter = new _reporter.default(globalConfig, config, testPath);\n  const jasmineFactory = runtime.requireInternalModule(JASMINE);\n  const jasmine = jasmineFactory.create({\n    process,\n    testPath,\n    testTimeout: globalConfig.testTimeout\n  });\n  const env = jasmine.getEnv();\n\n  const jasmineInterface = jasmineFactory._interface(jasmine, env);\n\n  Object.assign(environment.global, jasmineInterface);\n  env.addReporter(jasmineInterface.jsApiReporter); // TODO: Remove config option if V8 exposes some way of getting location of caller\n  // in a future version\n\n  if (config.testLocationInResults === true) {\n    function wrapIt(original) {\n      const wrapped = (testName, fn, timeout) => {\n        var _stack$getFileName;\n\n        const sourcemaps = runtime.getSourceMaps();\n        let stack = (0, _sourceMap.getCallsite)(1, sourcemaps);\n        const it = original(testName, fn, timeout);\n\n        if (\n          (_stack$getFileName = stack.getFileName()) === null ||\n          _stack$getFileName === void 0\n            ? void 0\n            : _stack$getFileName.startsWith(jestEachBuildDir)\n        ) {\n          stack = (0, _sourceMap.getCallsite)(4, sourcemaps);\n        } // @ts-expect-error\n\n        it.result.__callsite = stack;\n        return it;\n      };\n\n      return wrapped;\n    }\n\n    environment.global.it = wrapIt(environment.global.it);\n    environment.global.xit = wrapIt(environment.global.xit);\n    environment.global.fit = wrapIt(environment.global.fit);\n  }\n\n  (0, _jasmineAsyncInstall.default)(globalConfig, environment.global);\n  (0, _each.default)(environment);\n  environment.global.test = environment.global.it;\n  environment.global.it.only = environment.global.fit;\n  environment.global.it.todo = env.todo;\n  environment.global.it.skip = environment.global.xit;\n  environment.global.xtest = environment.global.xit;\n  environment.global.describe.skip = environment.global.xdescribe;\n  environment.global.describe.only = environment.global.fdescribe;\n\n  if (config.timers === 'fake' || config.timers === 'legacy') {\n    environment.fakeTimers.useFakeTimers();\n  } else if (config.timers === 'modern') {\n    environment.fakeTimersModern.useFakeTimers();\n  }\n\n  env.beforeEach(() => {\n    if (config.resetModules) {\n      runtime.resetModules();\n    }\n\n    if (config.clearMocks) {\n      runtime.clearAllMocks();\n    }\n\n    if (config.resetMocks) {\n      runtime.resetAllMocks();\n\n      if (config.timers === 'fake' || config.timers === 'legacy') {\n        environment.fakeTimers.useFakeTimers();\n      }\n    }\n\n    if (config.restoreMocks) {\n      runtime.restoreAllMocks();\n    }\n  });\n  env.addReporter(reporter);\n  runtime\n    .requireInternalModule(path.resolve(__dirname, './jestExpect.js'))\n    .default({\n      expand: globalConfig.expand\n    });\n\n  if (globalConfig.errorOnDeprecated) {\n    (0, _errorOnPrivate.installErrorOnPrivate)(environment.global);\n  } else {\n    Object.defineProperty(jasmine, 'DEFAULT_TIMEOUT_INTERVAL', {\n      configurable: true,\n      enumerable: true,\n\n      get() {\n        return this._DEFAULT_TIMEOUT_INTERVAL;\n      },\n\n      set(value) {\n        this._DEFAULT_TIMEOUT_INTERVAL = value;\n      }\n    });\n  }\n\n  const snapshotState = runtime\n    .requireInternalModule(path.resolve(__dirname, './setup_jest_globals.js'))\n    .default({\n      config,\n      globalConfig,\n      localRequire: runtime.requireModule.bind(runtime),\n      testPath\n    });\n\n  for (const path of config.setupFilesAfterEnv) {\n    var _runtime$unstable_sho;\n\n    // TODO: remove ? in Jest 26\n    const esm =\n      (_runtime$unstable_sho = runtime.unstable_shouldLoadAsEsm) === null ||\n      _runtime$unstable_sho === void 0\n        ? void 0\n        : _runtime$unstable_sho.call(runtime, path);\n\n    if (esm) {\n      await runtime.unstable_importModule(path);\n    } else {\n      runtime.requireModule(path);\n    }\n  }\n\n  if (globalConfig.enabledTestsMap) {\n    env.specFilter = spec => {\n      const suiteMap =\n        globalConfig.enabledTestsMap &&\n        globalConfig.enabledTestsMap[spec.result.testPath];\n      return (suiteMap && suiteMap[spec.result.fullName]) || false;\n    };\n  } else if (globalConfig.testNamePattern) {\n    const testNameRegex = new RegExp(globalConfig.testNamePattern, 'i');\n\n    env.specFilter = spec => testNameRegex.test(spec.getFullName());\n  } // TODO: remove ? in Jest 26\n\n  const esm =\n    (_runtime$unstable_sho2 = runtime.unstable_shouldLoadAsEsm) === null ||\n    _runtime$unstable_sho2 === void 0\n      ? void 0\n      : _runtime$unstable_sho2.call(runtime, testPath);\n\n  if (esm) {\n    await runtime.unstable_importModule(testPath);\n  } else {\n    runtime.requireModule(testPath);\n  }\n\n  await env.execute();\n  const results = await reporter.getResults();\n  return addSnapshotData(results, snapshotState);\n}\n\nconst addSnapshotData = (results, snapshotState) => {\n  results.testResults.forEach(({fullName, status}) => {\n    if (status === 'pending' || status === 'failed') {\n      // if test is skipped or failed, we don't want to mark\n      // its snapshots as obsolete.\n      snapshotState.markSnapshotsAsCheckedForTest(fullName);\n    }\n  });\n  const uncheckedCount = snapshotState.getUncheckedCount();\n  const uncheckedKeys = snapshotState.getUncheckedKeys();\n\n  if (uncheckedCount) {\n    snapshotState.removeUncheckedKeys();\n  }\n\n  const status = snapshotState.save();\n  results.snapshot.fileDeleted = status.deleted;\n  results.snapshot.added = snapshotState.added;\n  results.snapshot.matched = snapshotState.matched;\n  results.snapshot.unmatched = snapshotState.unmatched;\n  results.snapshot.updated = snapshotState.updated;\n  results.snapshot.unchecked = !status.deleted ? uncheckedCount : 0; // Copy the array to prevent memory leaks\n\n  results.snapshot.uncheckedKeys = Array.from(uncheckedKeys);\n  return results;\n};\n\nmodule.exports = jasmine2;\n",
    "node_modules/jest-jasmine2/build/pTimeout.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = pTimeout;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Symbol = global['jest-symbol-do-not-touch'] || global.Symbol;\nvar Promise = global[Symbol.for('jest-native-promise')] || global.Promise;\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// A specialized version of `p-timeout` that does not touch globals.\n// It does not throw on timeout.\nfunction pTimeout(promise, ms, clearTimeout, setTimeout, onTimeout) {\n  return new Promise((resolve, reject) => {\n    const timer = setTimeout(() => resolve(onTimeout()), ms);\n    promise.then(\n      val => {\n        clearTimeout(timer);\n        resolve(val);\n      },\n      err => {\n        clearTimeout(timer);\n        reject(err);\n      }\n    );\n  });\n}\n",
    "apps/api/src/model/lib/xml.service.spec.ts": "import { Test } from '@nestjs/testing';\nimport { XmlService } from './xml.service';\n\ndescribe('XmlService', () => {\n  let service: XmlService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [XmlService],\n    }).compile();\n\n    service = app.get<XmlService>(XmlService);\n  });\n\n  describe('XmlService', () => {\n    it('works for null', async () => {\n      service.test();\n    });\n  });\n});\n",
    "node_modules/lodash/lodash.js": "/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n",
    "node_modules/jest-jasmine2/build/jasmine/Spec.js": "'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = void 0;\n\nvar _assert = require('assert');\n\nvar _ExpectationFailed = _interopRequireDefault(\n  require('../ExpectationFailed')\n);\n\nvar _assertionErrorMessage = _interopRequireDefault(\n  require('../assertionErrorMessage')\n);\n\nvar _expectationResultFactory = _interopRequireDefault(\n  require('../expectationResultFactory')\n);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {default: obj};\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nclass Spec {\n  static isPendingSpecException(e) {\n    return !!(\n      e &&\n      e.toString &&\n      e.toString().indexOf(Spec.pendingSpecExceptionMessage) !== -1\n    );\n  }\n\n  constructor(attrs) {\n    _defineProperty(this, 'id', void 0);\n\n    _defineProperty(this, 'description', void 0);\n\n    _defineProperty(this, 'resultCallback', void 0);\n\n    _defineProperty(this, 'queueableFn', void 0);\n\n    _defineProperty(this, 'beforeAndAfterFns', void 0);\n\n    _defineProperty(this, 'userContext', void 0);\n\n    _defineProperty(this, 'onStart', void 0);\n\n    _defineProperty(this, 'getSpecName', void 0);\n\n    _defineProperty(this, 'queueRunnerFactory', void 0);\n\n    _defineProperty(this, 'throwOnExpectationFailure', void 0);\n\n    _defineProperty(this, 'initError', void 0);\n\n    _defineProperty(this, 'result', void 0);\n\n    _defineProperty(this, 'disabled', void 0);\n\n    _defineProperty(this, 'currentRun', void 0);\n\n    _defineProperty(this, 'markedTodo', void 0);\n\n    _defineProperty(this, 'markedPending', void 0);\n\n    _defineProperty(this, 'expand', void 0);\n\n    this.resultCallback = attrs.resultCallback || function () {};\n\n    this.id = attrs.id;\n    this.description = attrs.description || '';\n    this.queueableFn = attrs.queueableFn;\n\n    this.beforeAndAfterFns =\n      attrs.beforeAndAfterFns ||\n      function () {\n        return {\n          befores: [],\n          afters: []\n        };\n      };\n\n    this.userContext =\n      attrs.userContext ||\n      function () {\n        return {};\n      };\n\n    this.onStart = attrs.onStart || function () {};\n\n    this.getSpecName =\n      attrs.getSpecName ||\n      function () {\n        return '';\n      };\n\n    this.queueRunnerFactory = attrs.queueRunnerFactory || function () {};\n\n    this.throwOnExpectationFailure = !!attrs.throwOnExpectationFailure;\n    this.initError = new Error();\n    this.initError.name = ''; // Without this line v8 stores references to all closures\n    // in the stack in the Error object. This line stringifies the stack\n    // property to allow garbage-collecting objects on the stack\n    // https://crbug.com/v8/7142\n\n    this.initError.stack = this.initError.stack;\n    this.queueableFn.initError = this.initError; // @ts-expect-error\n\n    this.result = {\n      id: this.id,\n      description: this.description,\n      fullName: this.getFullName(),\n      failedExpectations: [],\n      passedExpectations: [],\n      pendingReason: '',\n      testPath: attrs.getTestPath()\n    };\n  }\n\n  addExpectationResult(passed, data, isError) {\n    const expectationResult = (0, _expectationResultFactory.default)(\n      data,\n      this.initError\n    );\n\n    if (passed) {\n      this.result.passedExpectations.push(expectationResult);\n    } else {\n      this.result.failedExpectations.push(expectationResult);\n\n      if (this.throwOnExpectationFailure && !isError) {\n        throw new _ExpectationFailed.default();\n      }\n    }\n  }\n\n  execute(onComplete, enabled) {\n    const self = this;\n    this.onStart(this);\n\n    if (\n      !this.isExecutable() ||\n      this.markedPending ||\n      this.markedTodo ||\n      enabled === false\n    ) {\n      complete(enabled);\n      return;\n    }\n\n    const fns = this.beforeAndAfterFns();\n    const allFns = fns.befores.concat(this.queueableFn).concat(fns.afters);\n    this.currentRun = this.queueRunnerFactory({\n      queueableFns: allFns,\n\n      onException() {\n        // @ts-expect-error\n        self.onException.apply(self, arguments);\n      },\n\n      userContext: this.userContext(),\n      setTimeout,\n      clearTimeout,\n      fail: () => {}\n    });\n    this.currentRun.then(() => complete(true));\n\n    function complete(enabledAgain) {\n      self.result.status = self.status(enabledAgain);\n      self.resultCallback(self.result);\n\n      if (onComplete) {\n        onComplete();\n      }\n    }\n  }\n\n  cancel() {\n    if (this.currentRun) {\n      this.currentRun.cancel();\n    }\n  }\n\n  onException(error) {\n    if (Spec.isPendingSpecException(error)) {\n      this.pend(extractCustomPendingMessage(error));\n      return;\n    }\n\n    if (error instanceof _ExpectationFailed.default) {\n      return;\n    }\n\n    this.addExpectationResult(\n      false,\n      {\n        matcherName: '',\n        passed: false,\n        expected: '',\n        actual: '',\n        error: this.isAssertionError(error)\n          ? (0, _assertionErrorMessage.default)(error, {\n              expand: this.expand\n            })\n          : error\n      },\n      true\n    );\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  pend(message) {\n    this.markedPending = true;\n\n    if (message) {\n      this.result.pendingReason = message;\n    }\n  }\n\n  todo() {\n    this.markedTodo = true;\n  }\n\n  getResult() {\n    this.result.status = this.status();\n    return this.result;\n  }\n\n  status(enabled) {\n    if (this.disabled || enabled === false) {\n      return 'disabled';\n    }\n\n    if (this.markedTodo) {\n      return 'todo';\n    }\n\n    if (this.markedPending) {\n      return 'pending';\n    }\n\n    if (this.result.failedExpectations.length > 0) {\n      return 'failed';\n    } else {\n      return 'passed';\n    }\n  }\n\n  isExecutable() {\n    return !this.disabled;\n  }\n\n  getFullName() {\n    return this.getSpecName(this);\n  }\n\n  isAssertionError(error) {\n    return (\n      error instanceof _assert.AssertionError ||\n      (error && error.name === _assert.AssertionError.name)\n    );\n  }\n}\n\nexports.default = Spec;\n\n_defineProperty(Spec, 'pendingSpecExceptionMessage', void 0);\n\nSpec.pendingSpecExceptionMessage = '=> marked Pending';\n\nconst extractCustomPendingMessage = function (e) {\n  const fullMessage = e.toString();\n  const boilerplateStart = fullMessage.indexOf(\n    Spec.pendingSpecExceptionMessage\n  );\n  const boilerplateEnd =\n    boilerplateStart + Spec.pendingSpecExceptionMessage.length;\n  return fullMessage.substr(boilerplateEnd);\n};\n",
    "apps/api/src/app/app.controller.spec.ts": "import { Test, TestingModule } from '@nestjs/testing';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\ndescribe('AppController', () => {\n  let app: TestingModule;\n\n  beforeAll(async () => {\n    app = await Test.createTestingModule({\n      controllers: [AppController],\n      providers: [AppService],\n    }).compile();\n  });\n\n  describe('getData', () => {\n    it('should return \"Welcome to api!\"', async () => {\n      const appController = app.get<AppController>(AppController);\n      expect(await appController.getData()).toEqual({\n        message: 'Welcome to api!',\n      });\n    });\n  });\n});\n",
    "node_modules/es6-shim/es6-shim.js": " /*!\n  * https://github.com/paulmillr/es6-shim\n  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n  *   and contributors,  MIT License\n  * es6-shim: v0.35.1\n  * see https://github.com/paulmillr/es6-shim/blob/0.35.1/LICENSE\n  * Details and documentation:\n  * https://github.com/paulmillr/es6-shim/\n  */\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n  /*global define, module, exports */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory();\n  }\n}(this, function () {\n  'use strict';\n\n  var _apply = Function.call.bind(Function.apply);\n  var _call = Function.call.bind(Function.call);\n  var isArray = Array.isArray;\n  var keys = Object.keys;\n\n  var not = function notThunker(func) {\n    return function notThunk() {\n      return !_apply(func, this, arguments);\n    };\n  };\n  var throwsError = function (func) {\n    try {\n      func();\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\n    try {\n      return func();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var isCallableWithoutNew = not(throwsError);\n  var arePropertyDescriptorsSupported = function () {\n    // if Object.defineProperty exists but throws, it's IE 8\n    return !throwsError(function () {\n      Object.defineProperty({}, 'x', { get: function () {} });\n    });\n  };\n  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\n  var functionsHaveNames = (function foo() {}).name === 'foo'; // eslint-disable-line no-extra-parens\n\n  var _forEach = Function.call.bind(Array.prototype.forEach);\n  var _reduce = Function.call.bind(Array.prototype.reduce);\n  var _filter = Function.call.bind(Array.prototype.filter);\n  var _some = Function.call.bind(Array.prototype.some);\n\n  var defineProperty = function (object, name, value, force) {\n    if (!force && name in object) { return; }\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  // Define configurable, writable and non-enumerable props\n  // if they don’t exist.\n  var defineProperties = function (object, map, forceOverride) {\n    _forEach(keys(map), function (name) {\n      var method = map[name];\n      defineProperty(object, name, method, !!forceOverride);\n    });\n  };\n\n  var _toString = Function.call.bind(Object.prototype.toString);\n  var isCallable = typeof /abc/ === 'function' ? function IsCallableSlow(x) {\n    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'\n    return typeof x === 'function' && _toString(x) === '[object Function]';\n  } : function IsCallableFast(x) { return typeof x === 'function'; };\n\n  var Value = {\n    getter: function (object, name, getter) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        get: getter\n      });\n    },\n    proxy: function (originalObject, key, targetObject) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\n      Object.defineProperty(targetObject, key, {\n        configurable: originalDescriptor.configurable,\n        enumerable: originalDescriptor.enumerable,\n        get: function getKey() { return originalObject[key]; },\n        set: function setKey(value) { originalObject[key] = value; }\n      });\n    },\n    redefine: function (object, property, newValue) {\n      if (supportsDescriptors) {\n        var descriptor = Object.getOwnPropertyDescriptor(object, property);\n        descriptor.value = newValue;\n        Object.defineProperty(object, property, descriptor);\n      } else {\n        object[property] = newValue;\n      }\n    },\n    defineByDescriptor: function (object, property, descriptor) {\n      if (supportsDescriptors) {\n        Object.defineProperty(object, property, descriptor);\n      } else if ('value' in descriptor) {\n        object[property] = descriptor.value;\n      }\n    },\n    preserveToString: function (target, source) {\n      if (source && isCallable(source.toString)) {\n        defineProperty(target, 'toString', source.toString.bind(source), true);\n      }\n    }\n  };\n\n  // Simple shim for Object.create on ES3 browsers\n  // (unlike real shim, no attempt to support `prototype === null`)\n  var create = Object.create || function (prototype, properties) {\n    var Prototype = function Prototype() {};\n    Prototype.prototype = prototype;\n    var object = new Prototype();\n    if (typeof properties !== 'undefined') {\n      keys(properties).forEach(function (key) {\n        Value.defineByDescriptor(object, key, properties[key]);\n      });\n    }\n    return object;\n  };\n\n  var supportsSubclassing = function (C, f) {\n    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\n    return valueOrFalseIfThrows(function () {\n      var Sub = function Subclass(arg) {\n        var o = new C(arg);\n        Object.setPrototypeOf(o, Subclass.prototype);\n        return o;\n      };\n      Object.setPrototypeOf(Sub, C);\n      Sub.prototype = create(C.prototype, {\n        constructor: { value: Sub }\n      });\n      return f(Sub);\n    });\n  };\n\n  var getGlobal = function () {\n    /* global self, window, global */\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n  };\n\n  var globals = getGlobal();\n  var globalIsFinite = globals.isFinite;\n  var _indexOf = Function.call.bind(String.prototype.indexOf);\n  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\n  var _concat = Function.call.bind(Array.prototype.concat);\n  // var _sort = Function.call.bind(Array.prototype.sort);\n  var _strSlice = Function.call.bind(String.prototype.slice);\n  var _push = Function.call.bind(Array.prototype.push);\n  var _pushApply = Function.apply.bind(Array.prototype.push);\n  var _shift = Function.call.bind(Array.prototype.shift);\n  var _max = Math.max;\n  var _min = Math.min;\n  var _floor = Math.floor;\n  var _abs = Math.abs;\n  var _exp = Math.exp;\n  var _log = Math.log;\n  var _sqrt = Math.sqrt;\n  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n  var ArrayIterator; // make our implementation private\n  var noop = function () {};\n\n  var OrigMap = globals.Map;\n  var origMapDelete = OrigMap && OrigMap.prototype['delete'];\n  var origMapGet = OrigMap && OrigMap.prototype.get;\n  var origMapHas = OrigMap && OrigMap.prototype.has;\n  var origMapSet = OrigMap && OrigMap.prototype.set;\n\n  var Symbol = globals.Symbol || {};\n  var symbolSpecies = Symbol.species || '@@species';\n\n  var numberIsNaN = Number.isNaN || function isNaN(value) {\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if x !== x,\n    // then x is NaN.\n    // isNaN is broken: it converts its argument to number, so\n    // isNaN('foo') => true\n    return value !== value;\n  };\n  var numberIsFinite = Number.isFinite || function isFinite(value) {\n    return typeof value === 'number' && globalIsFinite(value);\n  };\n  var _sign = isCallable(Math.sign) ? Math.sign : function sign(value) {\n    var number = Number(value);\n    if (number === 0) { return number; }\n    if (numberIsNaN(number)) { return number; }\n    return number < 0 ? -1 : 1;\n  };\n\n  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n  // can be replaced with require('is-arguments') if we ever use a build process instead\n  var isStandardArguments = function isArguments(value) {\n    return _toString(value) === '[object Arguments]';\n  };\n  var isLegacyArguments = function isArguments(value) {\n    return value !== null &&\n      typeof value === 'object' &&\n      typeof value.length === 'number' &&\n      value.length >= 0 &&\n      _toString(value) !== '[object Array]' &&\n      _toString(value.callee) === '[object Function]';\n  };\n  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\n  var Type = {\n    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\n    string: function (x) { return _toString(x) === '[object String]'; },\n    regex: function (x) { return _toString(x) === '[object RegExp]'; },\n    symbol: function (x) {\n      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\n    }\n  };\n\n  var overrideNative = function overrideNative(object, property, replacement) {\n    var original = object[property];\n    defineProperty(object, property, replacement, true);\n    Value.preserveToString(object[property], original);\n  };\n\n  // eslint-disable-next-line no-restricted-properties\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\n\n  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\n  // we're going to use an arbitrary _-prefixed name to make our shims\n  // work properly with each other, even though we don't have full Iterator\n  // support.  That is, `Array.from(map.keys())` will work, but we don't\n  // pretend to export a \"real\" Iterator interface.\n  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\n  // Firefox ships a partial implementation using the name @@iterator.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\n  // So use that name if we detect it.\n  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  // Reflect\n  if (!globals.Reflect) {\n    defineProperty(globals, 'Reflect', {}, true);\n  }\n  var Reflect = globals.Reflect;\n\n  var $String = String;\n\n  /* global document */\n  var domAll = (typeof document === 'undefined' || !document) ? null : document.all;\n  /* jshint eqnull:true */\n  var isNullOrUndefined = domAll == null ? function isNullOrUndefined(x) {\n    /* jshint eqnull:true */\n    return x == null;\n  } : function isNullOrUndefinedAndNotDocumentAll(x) {\n    /* jshint eqnull:true */\n    return x == null && x !== domAll;\n  };\n\n  var ES = {\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-call\n    Call: function Call(F, V) {\n      var args = arguments.length > 2 ? arguments[2] : [];\n      if (!ES.IsCallable(F)) {\n        throw new TypeError(F + ' is not a function');\n      }\n      return _apply(F, V, args);\n    },\n\n    RequireObjectCoercible: function (x, optMessage) {\n      if (isNullOrUndefined(x)) {\n        throw new TypeError(optMessage || 'Cannot call method on ' + x);\n      }\n      return x;\n    },\n\n    // This might miss the \"(non-standard exotic and does not implement\n    // [[Call]])\" case from\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\n    // but we can't find any evidence these objects exist in practice.\n    // If we find some in the future, you could test `Object(x) === x`,\n    // which is reliable according to\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\n    // but is not well optimized by runtimes and creates an object\n    // whenever it returns false, and thus is very slow.\n    TypeIsObject: function (x) {\n      if (x === void 0 || x === null || x === true || x === false) {\n        return false;\n      }\n      return typeof x === 'function' || typeof x === 'object' || x === domAll;\n    },\n\n    ToObject: function (o, optMessage) {\n      return Object(ES.RequireObjectCoercible(o, optMessage));\n    },\n\n    IsCallable: isCallable,\n\n    IsConstructor: function (x) {\n      // We can't tell callables from constructors in ES5\n      return ES.IsCallable(x);\n    },\n\n    ToInt32: function (x) {\n      return ES.ToNumber(x) >> 0;\n    },\n\n    ToUint32: function (x) {\n      return ES.ToNumber(x) >>> 0;\n    },\n\n    ToNumber: function (value) {\n      if (_toString(value) === '[object Symbol]') {\n        throw new TypeError('Cannot convert a Symbol value to a number');\n      }\n      return +value;\n    },\n\n    ToInteger: function (value) {\n      var number = ES.ToNumber(value);\n      if (numberIsNaN(number)) { return 0; }\n      if (number === 0 || !numberIsFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * _floor(_abs(number));\n    },\n\n    ToLength: function (value) {\n      var len = ES.ToInteger(value);\n      if (len <= 0) { return 0; } // includes converting -0 to +0\n      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\n      return len;\n    },\n\n    SameValue: function (a, b) {\n      if (a === b) {\n        // 0 === -0, but they are not identical.\n        if (a === 0) { return 1 / a === 1 / b; }\n        return true;\n      }\n      return numberIsNaN(a) && numberIsNaN(b);\n    },\n\n    SameValueZero: function (a, b) {\n      // same as SameValue except for SameValueZero(+0, -0) == true\n      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\n    },\n\n    IsIterable: function (o) {\n      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));\n    },\n\n    GetIterator: function (o) {\n      if (isArguments(o)) {\n        // special case support for `arguments`\n        return new ArrayIterator(o, 'value');\n      }\n      var itFn = ES.GetMethod(o, $iterator$);\n      if (!ES.IsCallable(itFn)) {\n        // Better diagnostics if itFn is null or undefined\n        throw new TypeError('value is not an iterable');\n      }\n      var it = ES.Call(itFn, o);\n      if (!ES.TypeIsObject(it)) {\n        throw new TypeError('bad iterator');\n      }\n      return it;\n    },\n\n    GetMethod: function (o, p) {\n      var func = ES.ToObject(o)[p];\n      if (isNullOrUndefined(func)) {\n        return void 0;\n      }\n      if (!ES.IsCallable(func)) {\n        throw new TypeError('Method not callable: ' + p);\n      }\n      return func;\n    },\n\n    IteratorComplete: function (iterResult) {\n      return !!iterResult.done;\n    },\n\n    IteratorClose: function (iterator, completionIsThrow) {\n      var returnMethod = ES.GetMethod(iterator, 'return');\n      if (returnMethod === void 0) {\n        return;\n      }\n      var innerResult, innerException;\n      try {\n        innerResult = ES.Call(returnMethod, iterator);\n      } catch (e) {\n        innerException = e;\n      }\n      if (completionIsThrow) {\n        return;\n      }\n      if (innerException) {\n        throw innerException;\n      }\n      if (!ES.TypeIsObject(innerResult)) {\n        throw new TypeError(\"Iterator's return method returned a non-object.\");\n      }\n    },\n\n    IteratorNext: function (it) {\n      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\n      if (!ES.TypeIsObject(result)) {\n        throw new TypeError('bad iterator');\n      }\n      return result;\n    },\n\n    IteratorStep: function (it) {\n      var result = ES.IteratorNext(it);\n      var done = ES.IteratorComplete(result);\n      return done ? false : result;\n    },\n\n    Construct: function (C, args, newTarget, isES6internal) {\n      var target = typeof newTarget === 'undefined' ? C : newTarget;\n\n      if (!isES6internal && Reflect.construct) {\n        // Try to use Reflect.construct if available\n        return Reflect.construct(C, args, target);\n      }\n      // OK, we have to fake it.  This will only work if the\n      // C.[[ConstructorKind]] == \"base\" -- but that's the only\n      // kind we can make in ES5 code anyway.\n\n      // OrdinaryCreateFromConstructor(target, \"%ObjectPrototype%\")\n      var proto = target.prototype;\n      if (!ES.TypeIsObject(proto)) {\n        proto = Object.prototype;\n      }\n      var obj = create(proto);\n      // Call the constructor.\n      var result = ES.Call(C, obj, args);\n      return ES.TypeIsObject(result) ? result : obj;\n    },\n\n    SpeciesConstructor: function (O, defaultConstructor) {\n      var C = O.constructor;\n      if (C === void 0) {\n        return defaultConstructor;\n      }\n      if (!ES.TypeIsObject(C)) {\n        throw new TypeError('Bad constructor');\n      }\n      var S = C[symbolSpecies];\n      if (isNullOrUndefined(S)) {\n        return defaultConstructor;\n      }\n      if (!ES.IsConstructor(S)) {\n        throw new TypeError('Bad @@species');\n      }\n      return S;\n    },\n\n    CreateHTML: function (string, tag, attribute, value) {\n      var S = ES.ToString(string);\n      var p1 = '<' + tag;\n      if (attribute !== '') {\n        var V = ES.ToString(value);\n        var escapedV = V.replace(/\"/g, '&quot;');\n        p1 += ' ' + attribute + '=\"' + escapedV + '\"';\n      }\n      var p2 = p1 + '>';\n      var p3 = p2 + S;\n      return p3 + '</' + tag + '>';\n    },\n\n    IsRegExp: function IsRegExp(argument) {\n      if (!ES.TypeIsObject(argument)) {\n        return false;\n      }\n      var isRegExp = argument[Symbol.match];\n      if (typeof isRegExp !== 'undefined') {\n        return !!isRegExp;\n      }\n      return Type.regex(argument);\n    },\n\n    ToString: function ToString(string) {\n      return $String(string);\n    }\n  };\n\n  // Well-known Symbol shims\n  if (supportsDescriptors && hasSymbols) {\n    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\n      if (Type.symbol(Symbol[name])) {\n        return Symbol[name];\n      }\n      // eslint-disable-next-line no-restricted-properties\n      var sym = Symbol['for']('Symbol.' + name);\n      Object.defineProperty(Symbol, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: sym\n      });\n      return sym;\n    };\n    if (!Type.symbol(Symbol.search)) {\n      var symbolSearch = defineWellKnownSymbol('search');\n      var originalSearch = String.prototype.search;\n      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\n        return ES.Call(originalSearch, string, [this]);\n      });\n      var searchShim = function search(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var searcher = ES.GetMethod(regexp, symbolSearch);\n          if (typeof searcher !== 'undefined') {\n            return ES.Call(searcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'search', searchShim);\n    }\n    if (!Type.symbol(Symbol.replace)) {\n      var symbolReplace = defineWellKnownSymbol('replace');\n      var originalReplace = String.prototype.replace;\n      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\n        return ES.Call(originalReplace, string, [this, replaceValue]);\n      });\n      var replaceShim = function replace(searchValue, replaceValue) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(searchValue)) {\n          var replacer = ES.GetMethod(searchValue, symbolReplace);\n          if (typeof replacer !== 'undefined') {\n            return ES.Call(replacer, searchValue, [O, replaceValue]);\n          }\n        }\n        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\n      };\n      overrideNative(String.prototype, 'replace', replaceShim);\n    }\n    if (!Type.symbol(Symbol.split)) {\n      var symbolSplit = defineWellKnownSymbol('split');\n      var originalSplit = String.prototype.split;\n      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\n        return ES.Call(originalSplit, string, [this, limit]);\n      });\n      var splitShim = function split(separator, limit) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(separator)) {\n          var splitter = ES.GetMethod(separator, symbolSplit);\n          if (typeof splitter !== 'undefined') {\n            return ES.Call(splitter, separator, [O, limit]);\n          }\n        }\n        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\n      };\n      overrideNative(String.prototype, 'split', splitShim);\n    }\n    var symbolMatchExists = Type.symbol(Symbol.match);\n    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\n      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\n      // Firefox 40 and below have Symbol.match but String#match works fine.\n      var o = {};\n      o[Symbol.match] = function () { return 42; };\n      return 'a'.match(o) !== 42;\n    }());\n    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\n      var symbolMatch = defineWellKnownSymbol('match');\n\n      var originalMatch = String.prototype.match;\n      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\n        return ES.Call(originalMatch, string, [this]);\n      });\n\n      var matchShim = function match(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var matcher = ES.GetMethod(regexp, symbolMatch);\n          if (typeof matcher !== 'undefined') {\n            return ES.Call(matcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'match', matchShim);\n    }\n  }\n\n  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\n    Value.preserveToString(replacement, original);\n    if (Object.setPrototypeOf) {\n      // sets up proper prototype chain where possible\n      Object.setPrototypeOf(original, replacement);\n    }\n    if (supportsDescriptors) {\n      _forEach(Object.getOwnPropertyNames(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        Value.proxy(original, key, replacement);\n      });\n    } else {\n      _forEach(Object.keys(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        replacement[key] = original[key];\n      });\n    }\n    replacement.prototype = original.prototype;\n    Value.redefine(original.prototype, 'constructor', replacement);\n  };\n\n  var defaultSpeciesGetter = function () { return this; };\n  var addDefaultSpecies = function (C) {\n    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\n      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\n    }\n  };\n\n  var addIterator = function (prototype, impl) {\n    var implementation = impl || function iterator() { return this; };\n    defineProperty(prototype, $iterator$, implementation);\n    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\n      // implementations are buggy when $iterator$ is a Symbol\n      prototype[$iterator$] = implementation;\n    }\n  };\n\n  var createDataProperty = function createDataProperty(object, name, value) {\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\n    createDataProperty(object, name, value);\n    if (!ES.SameValue(object[name], value)) {\n      throw new TypeError('property is nonconfigurable');\n    }\n  };\n\n  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\n    // This is an es5 approximation to es6 construct semantics.  in es6,\n    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\n    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\n    // to Foo and then returns Foo().\n\n    // Many ES6 object then have constructors of the form:\n    // 1. If NewTarget is undefined, throw a TypeError exception\n    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\n\n    // So we're going to emulate those first two steps.\n    if (!ES.TypeIsObject(o)) {\n      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\n    }\n    var proto = defaultNewTarget.prototype;\n    if (!ES.TypeIsObject(proto)) {\n      proto = defaultProto;\n    }\n    var obj = create(proto);\n    for (var name in slots) {\n      if (_hasOwnProperty(slots, name)) {\n        var value = slots[name];\n        defineProperty(obj, name, value, true);\n      }\n    }\n    return obj;\n  };\n\n  // Firefox 31 reports this function's length as 0\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\n  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\n    var originalFromCodePoint = String.fromCodePoint;\n    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) {\n      return ES.Call(originalFromCodePoint, this, arguments);\n    });\n  }\n\n  var StringShims = {\n    fromCodePoint: function fromCodePoint(codePoints) {\n      var result = [];\n      var next;\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        next = Number(arguments[i]);\n        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\n          throw new RangeError('Invalid code point ' + next);\n        }\n\n        if (next < 0x10000) {\n          _push(result, String.fromCharCode(next));\n        } else {\n          next -= 0x10000;\n          _push(result, String.fromCharCode((next >> 10) + 0xD800));\n          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\n        }\n      }\n      return result.join('');\n    },\n\n    raw: function raw(callSite) {\n      var cooked = ES.ToObject(callSite, 'bad callSite');\n      var rawString = ES.ToObject(cooked.raw, 'bad raw value');\n      var len = rawString.length;\n      var literalsegments = ES.ToLength(len);\n      if (literalsegments <= 0) {\n        return '';\n      }\n\n      var stringElements = [];\n      var nextIndex = 0;\n      var nextKey, next, nextSeg, nextSub;\n      while (nextIndex < literalsegments) {\n        nextKey = ES.ToString(nextIndex);\n        nextSeg = ES.ToString(rawString[nextKey]);\n        _push(stringElements, nextSeg);\n        if (nextIndex + 1 >= literalsegments) {\n          break;\n        }\n        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\n        nextSub = ES.ToString(next);\n        _push(stringElements, nextSub);\n        nextIndex += 1;\n      }\n      return stringElements.join('');\n    }\n  };\n  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\n    // IE 11 TP has a broken String.raw implementation\n    overrideNative(String, 'raw', StringShims.raw);\n  }\n  defineProperties(String, StringShims);\n\n  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\n  // Perf: http://jsperf.com/string-repeat2/2\n  var stringRepeat = function repeat(s, times) {\n    if (times < 1) { return ''; }\n    if (times % 2) { return repeat(s, times - 1) + s; }\n    var half = repeat(s, times / 2);\n    return half + half;\n  };\n  var stringMaxLength = Infinity;\n\n  var StringPrototypeShims = {\n    repeat: function repeat(times) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var numTimes = ES.ToInteger(times);\n      if (numTimes < 0 || numTimes >= stringMaxLength) {\n        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\n      }\n      return stringRepeat(thisStr, numTimes);\n    },\n\n    startsWith: function startsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"startsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      var start = _max(ES.ToInteger(position), 0);\n      return _strSlice(S, start, start + searchStr.length) === searchStr;\n    },\n\n    endsWith: function endsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"endsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var len = S.length;\n      var endPosition;\n      if (arguments.length > 1) {\n        endPosition = arguments[1];\n      }\n      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\n      var end = _min(_max(pos, 0), len);\n      return _strSlice(S, end - searchStr.length, end) === searchStr;\n    },\n\n    includes: function includes(searchString) {\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('\"includes\" does not accept a RegExp');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      // Somehow this trick makes method 100% compat with the spec.\n      return _indexOf(this, searchStr, position) !== -1;\n    },\n\n    codePointAt: function codePointAt(pos) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var position = ES.ToInteger(pos);\n      var length = thisStr.length;\n      if (position >= 0 && position < length) {\n        var first = thisStr.charCodeAt(position);\n        var isEnd = position + 1 === length;\n        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\n        var second = thisStr.charCodeAt(position + 1);\n        if (second < 0xDC00 || second > 0xDFFF) { return first; }\n        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\n      }\n    }\n  };\n  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\n    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n  }\n\n  if (String.prototype.startsWith && String.prototype.endsWith) {\n    var startsWithRejectsRegex = throwsError(function () {\n      /* throws if spec-compliant */\n      '/a/'.startsWith(/a/);\n    });\n    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\n      return 'abc'.startsWith('a', Infinity) === false;\n    });\n    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\n      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n  }\n  if (hasSymbols) {\n    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.startsWith(re);\n    });\n    if (!startsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n    }\n    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.endsWith(re);\n    });\n    if (!endsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.includes(re);\n    });\n    if (!includesSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n    }\n  }\n\n  defineProperties(String.prototype, StringPrototypeShims);\n\n  // whitespace from: http://es5.github.io/#x15.5.4.20\n  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n  var ws = [\n    '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n    '\\u2029\\uFEFF'\n  ].join('');\n  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\n  var trimShim = function trim() {\n    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\n  };\n  var nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\n  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\n  var isBadHexRegex = /^[-+]0x[0-9a-f]+$/i;\n  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\n  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\n\n  // Given an argument x, it will return an IteratorResult object,\n  // with value set to x and done to false.\n  // Given no arguments, it will return an iterator completion object.\n  var iteratorResult = function (x) {\n    return { value: x, done: arguments.length === 0 };\n  };\n\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype-@@iterator\n  var StringIterator = function (s) {\n    ES.RequireObjectCoercible(s);\n    this._s = ES.ToString(s);\n    this._i = 0;\n  };\n  StringIterator.prototype.next = function () {\n    var s = this._s;\n    var i = this._i;\n    if (typeof s === 'undefined' || i >= s.length) {\n      this._s = void 0;\n      return iteratorResult();\n    }\n    var first = s.charCodeAt(i);\n    var second, len;\n    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\n      len = 1;\n    } else {\n      second = s.charCodeAt(i + 1);\n      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\n    }\n    this._i = i + len;\n    return iteratorResult(s.substr(i, len));\n  };\n  addIterator(StringIterator.prototype);\n  addIterator(String.prototype, function () {\n    return new StringIterator(this);\n  });\n\n  var ArrayShims = {\n    from: function from(items) {\n      var C = this;\n      var mapFn;\n      if (arguments.length > 1) {\n        mapFn = arguments[1];\n      }\n      var mapping, T;\n      if (typeof mapFn === 'undefined') {\n        mapping = false;\n      } else {\n        if (!ES.IsCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n        mapping = true;\n      }\n\n      // Note that that Arrays will use ArrayIterator:\n      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\n      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\n\n      var length, result, i;\n      if (usingIterator) {\n        result = ES.IsConstructor(C) ? Object(new C()) : [];\n        var iterator = ES.GetIterator(items);\n        var next, nextValue;\n\n        i = 0;\n        while (true) {\n          next = ES.IteratorStep(iterator);\n          if (next === false) {\n            break;\n          }\n          nextValue = next.value;\n          try {\n            if (mapping) {\n              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\n            }\n            result[i] = nextValue;\n          } catch (e) {\n            ES.IteratorClose(iterator, true);\n            throw e;\n          }\n          i += 1;\n        }\n        length = i;\n      } else {\n        var arrayLike = ES.ToObject(items);\n        length = ES.ToLength(arrayLike.length);\n        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\n        var value;\n        for (i = 0; i < length; ++i) {\n          value = arrayLike[i];\n          if (mapping) {\n            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\n          }\n          createDataPropertyOrThrow(result, i, value);\n        }\n      }\n\n      result.length = length;\n      return result;\n    },\n\n    of: function of() {\n      var len = arguments.length;\n      var C = this;\n      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\n      for (var k = 0; k < len; ++k) {\n        createDataPropertyOrThrow(A, k, arguments[k]);\n      }\n      A.length = len;\n      return A;\n    }\n  };\n  defineProperties(Array, ArrayShims);\n  addDefaultSpecies(Array);\n\n  // Our ArrayIterator is private; see\n  // https://github.com/paulmillr/es6-shim/issues/252\n  ArrayIterator = function (array, kind) {\n    this.i = 0;\n    this.array = array;\n    this.kind = kind;\n  };\n\n  defineProperties(ArrayIterator.prototype, {\n    next: function () {\n      var i = this.i;\n      var array = this.array;\n      if (!(this instanceof ArrayIterator)) {\n        throw new TypeError('Not an ArrayIterator');\n      }\n      if (typeof array !== 'undefined') {\n        var len = ES.ToLength(array.length);\n        for (; i < len; i++) {\n          var kind = this.kind;\n          var retval;\n          if (kind === 'key') {\n            retval = i;\n          } else if (kind === 'value') {\n            retval = array[i];\n          } else if (kind === 'entry') {\n            retval = [i, array[i]];\n          }\n          this.i = i + 1;\n          return iteratorResult(retval);\n        }\n      }\n      this.array = void 0;\n      return iteratorResult();\n    }\n  });\n  addIterator(ArrayIterator.prototype);\n\n/*\n  var orderKeys = function orderKeys(a, b) {\n    var aNumeric = String(ES.ToInteger(a)) === a;\n    var bNumeric = String(ES.ToInteger(b)) === b;\n    if (aNumeric && bNumeric) {\n      return b - a;\n    } else if (aNumeric && !bNumeric) {\n      return -1;\n    } else if (!aNumeric && bNumeric) {\n      return 1;\n    } else {\n      return a.localeCompare(b);\n    }\n  };\n\n  var getAllKeys = function getAllKeys(object) {\n    var ownKeys = [];\n    var keys = [];\n\n    for (var key in object) {\n      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\n    }\n    _sort(ownKeys, orderKeys);\n    _sort(keys, orderKeys);\n\n    return _concat(ownKeys, keys);\n  };\n  */\n\n  // note: this is positioned here because it depends on ArrayIterator\n  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\n    // Detects a bug in Webkit nightly r181886\n    var Foo = function Foo(len) { this.length = len; };\n    Foo.prototype = [];\n    var fooArr = Array.of.apply(Foo, [1, 2]);\n    return fooArr instanceof Foo && fooArr.length === 2;\n  }());\n  if (!arrayOfSupportsSubclassing) {\n    overrideNative(Array, 'of', ArrayShims.of);\n  }\n\n  var ArrayPrototypeShims = {\n    copyWithin: function copyWithin(target, start) {\n      var o = ES.ToObject(this);\n      var len = ES.ToLength(o.length);\n      var relativeTarget = ES.ToInteger(target);\n      var relativeStart = ES.ToInteger(start);\n      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\n      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\n      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\n      var count = _min(finalItem - from, len - to);\n      var direction = 1;\n      if (from < to && to < (from + count)) {\n        direction = -1;\n        from += count - 1;\n        to += count - 1;\n      }\n      while (count > 0) {\n        if (from in o) {\n          o[to] = o[from];\n        } else {\n          delete o[to];\n        }\n        from += direction;\n        to += direction;\n        count -= 1;\n      }\n      return o;\n    },\n\n    fill: function fill(value) {\n      var start;\n      if (arguments.length > 1) {\n        start = arguments[1];\n      }\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var O = ES.ToObject(this);\n      var len = ES.ToLength(O.length);\n      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\n      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\n\n      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\n      var relativeEnd = end < 0 ? len + end : end;\n\n      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\n        O[i] = value;\n      }\n      return O;\n    },\n\n    find: function find(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#find: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0, value; i < length; i++) {\n        value = list[i];\n        if (thisArg) {\n          if (_call(predicate, thisArg, value, i, list)) {\n            return value;\n          }\n        } else if (predicate(value, i, list)) {\n          return value;\n        }\n      }\n    },\n\n    findIndex: function findIndex(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#findIndex: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0; i < length; i++) {\n        if (thisArg) {\n          if (_call(predicate, thisArg, list[i], i, list)) {\n            return i;\n          }\n        } else if (predicate(list[i], i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n\n    keys: function keys() {\n      return new ArrayIterator(this, 'key');\n    },\n\n    values: function values() {\n      return new ArrayIterator(this, 'value');\n    },\n\n    entries: function entries() {\n      return new ArrayIterator(this, 'entry');\n    }\n  };\n  // Safari 7.1 defines Array#keys and Array#entries natively,\n  // but the resulting ArrayIterator objects don't have a \"next\" method.\n  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\n    delete Array.prototype.keys;\n  }\n  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\n    delete Array.prototype.entries;\n  }\n\n  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\n  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\n    defineProperties(Array.prototype, {\n      values: Array.prototype[$iterator$]\n    });\n    if (Type.symbol(Symbol.unscopables)) {\n      Array.prototype[Symbol.unscopables].values = true;\n    }\n  }\n  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\n  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\n    var originalArrayPrototypeValues = Array.prototype.values;\n    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\n    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\n  }\n  defineProperties(Array.prototype, ArrayPrototypeShims);\n\n  if (1 / [true].indexOf(true, -0) < 0) {\n    // indexOf when given a position arg of -0 should return +0.\n    // https://github.com/tc39/ecma262/pull/316\n    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\n      var value = _arrayIndexOfApply(this, arguments);\n      if (value === 0 && (1 / value) < 0) {\n        return 0;\n      }\n      return value;\n    }, true);\n  }\n\n  addIterator(Array.prototype, function () { return this.values(); });\n  // Chrome defines keys/values/entries on Array, but doesn't give us\n  // any way to identify its iterator.  So add our own shimmed field.\n  if (Object.getPrototypeOf) {\n    addIterator(Object.getPrototypeOf([].values()));\n  }\n\n  // note: this is positioned here because it relies on Array#entries\n  var arrayFromSwallowsNegativeLengths = (function () {\n    // Detects a Firefox bug in v32\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\n    return valueOrFalseIfThrows(function () {\n      return Array.from({ length: -1 }).length === 0;\n    });\n  }());\n  var arrayFromHandlesIterables = (function () {\n    // Detects a bug in Webkit nightly r181886\n    var arr = Array.from([0].entries());\n    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\n  }());\n  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\n    overrideNative(Array, 'from', ArrayShims.from);\n  }\n  var arrayFromHandlesUndefinedMapFunction = (function () {\n    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\n    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\n    return valueOrFalseIfThrows(function () {\n      return Array.from([0], void 0);\n    });\n  }());\n  if (!arrayFromHandlesUndefinedMapFunction) {\n    var origArrayFrom = Array.from;\n    overrideNative(Array, 'from', function from(items) {\n      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\n        return ES.Call(origArrayFrom, this, arguments);\n      } else {\n        return _call(origArrayFrom, this, items);\n      }\n    });\n  }\n\n  var int32sAsOne = -(Math.pow(2, 32) - 1);\n  var toLengthsCorrectly = function (method, reversed) {\n    var obj = { length: int32sAsOne };\n    obj[reversed ? (obj.length >>> 0) - 1 : 0] = true;\n    return valueOrFalseIfThrows(function () {\n      _call(method, obj, function () {\n        // note: in nonconforming browsers, this will be called\n        // -1 >>> 0 times, which is 4294967295, so the throw matters.\n        throw new RangeError('should not reach here');\n      }, []);\n      return true;\n    });\n  };\n  if (!toLengthsCorrectly(Array.prototype.forEach)) {\n    var originalForEach = Array.prototype.forEach;\n    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\n      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.map)) {\n    var originalMap = Array.prototype.map;\n    overrideNative(Array.prototype, 'map', function map(callbackFn) {\n      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.filter)) {\n    var originalFilter = Array.prototype.filter;\n    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\n      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.some)) {\n    var originalSome = Array.prototype.some;\n    overrideNative(Array.prototype, 'some', function some(callbackFn) {\n      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.every)) {\n    var originalEvery = Array.prototype.every;\n    overrideNative(Array.prototype, 'every', function every(callbackFn) {\n      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduce)) {\n    var originalReduce = Array.prototype.reduce;\n    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\n      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\n    var originalReduceRight = Array.prototype.reduceRight;\n    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\n      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n\n  var lacksOctalSupport = Number('0o10') !== 8;\n  var lacksBinarySupport = Number('0b10') !== 2;\n  var trimsNonWhitespace = _some(nonWS, function (c) {\n    return Number(c + 0 + c) === 0;\n  });\n  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\n    var OrigNumber = Number;\n    var binaryRegex = /^0b[01]+$/i;\n    var octalRegex = /^0o[0-7]+$/i;\n    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is an own property of regexes. wtf.\n    var isBinary = binaryRegex.test.bind(binaryRegex);\n    var isOctal = octalRegex.test.bind(octalRegex);\n    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`\n      var result;\n      if (typeof O.valueOf === 'function') {\n        result = O.valueOf();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      if (typeof O.toString === 'function') {\n        result = O.toString();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      throw new TypeError('No default value');\n    };\n    var hasNonWS = nonWSregex.test.bind(nonWSregex);\n    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\n    var NumberShim = (function () {\n      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\n      var NumberShim = function Number(value) {\n        var primValue;\n        if (arguments.length > 0) {\n          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\n        } else {\n          primValue = 0;\n        }\n        if (typeof primValue === 'string') {\n          primValue = ES.Call(trimShim, primValue);\n          if (isBinary(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 2);\n          } else if (isOctal(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 8);\n          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\n            primValue = NaN;\n          }\n        }\n        var receiver = this;\n        var valueOfSucceeds = valueOrFalseIfThrows(function () {\n          OrigNumber.prototype.valueOf.call(receiver);\n          return true;\n        });\n        if (receiver instanceof NumberShim && !valueOfSucceeds) {\n          return new OrigNumber(primValue);\n        }\n        /* jshint newcap: false */\n        return OrigNumber(primValue);\n        /* jshint newcap: true */\n      };\n      return NumberShim;\n    }());\n    wrapConstructor(OrigNumber, NumberShim, {});\n    // this is necessary for ES3 browsers, where these properties are non-enumerable.\n    defineProperties(NumberShim, {\n      NaN: OrigNumber.NaN,\n      MAX_VALUE: OrigNumber.MAX_VALUE,\n      MIN_VALUE: OrigNumber.MIN_VALUE,\n      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\n      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\n    });\n    /* globals Number: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    Number = NumberShim;\n    Value.redefine(globals, 'Number', NumberShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals Number: false */\n  }\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  defineProperties(Number, {\n    MAX_SAFE_INTEGER: maxSafeInteger,\n    MIN_SAFE_INTEGER: -maxSafeInteger,\n    EPSILON: 2.220446049250313e-16,\n\n    parseInt: globals.parseInt,\n    parseFloat: globals.parseFloat,\n\n    isFinite: numberIsFinite,\n\n    isInteger: function isInteger(value) {\n      return numberIsFinite(value) && ES.ToInteger(value) === value;\n    },\n\n    isSafeInteger: function isSafeInteger(value) {\n      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\n    },\n\n    isNaN: numberIsNaN\n  });\n  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\n  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\n\n  // Work around bugs in Array#find and Array#findIndex -- early\n  // implementations skipped holes in sparse arrays. (Note that the\n  // implementations of find/findIndex indirectly use shimmed\n  // methods of Number, so this test has to happen down here.)\n  /*jshint elision: true */\n  /* eslint-disable no-sparse-arrays */\n  if ([, 1].find(function () { return true; }) === 1) {\n    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\n  }\n  if ([, 1].findIndex(function () { return true; }) !== 0) {\n    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\n  }\n  /* eslint-enable no-sparse-arrays */\n  /*jshint elision: false */\n\n  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\n  var ensureEnumerable = function ensureEnumerable(obj, prop) {\n    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\n      Object.defineProperty(obj, prop, { enumerable: false });\n    }\n  };\n  var sliceArgs = function sliceArgs() {\n    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\n    var initial = Number(this);\n    var len = arguments.length;\n    var desiredArgCount = len - initial;\n    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\n    for (var i = initial; i < len; ++i) {\n      args[i - initial] = arguments[i];\n    }\n    return args;\n  };\n  var assignTo = function assignTo(source) {\n    return function assignToSource(target, key) {\n      target[key] = source[key];\n      return target;\n    };\n  };\n  var assignReducer = function (target, source) {\n    var sourceKeys = keys(Object(source));\n    var symbols;\n    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\n    }\n    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\n  };\n\n  var ObjectShims = {\n    // 19.1.3.1\n    assign: function (target, source) {\n      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\n      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\n    },\n\n    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\n    is: function is(a, b) {\n      return ES.SameValue(a, b);\n    }\n  };\n  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\n    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\n    var thrower = Object.preventExtensions({ 1: 2 });\n    try {\n      Object.assign(thrower, 'xy');\n    } catch (e) {\n      return thrower[1] === 'y';\n    }\n  }());\n  if (assignHasPendingExceptions) {\n    overrideNative(Object, 'assign', ObjectShims.assign);\n  }\n  defineProperties(Object, ObjectShims);\n\n  if (supportsDescriptors) {\n    var ES5ObjectShims = {\n      // 19.1.3.9\n      // shim from https://gist.github.com/WebReflection/5593554\n      setPrototypeOf: (function (Object, magic) {\n        var set;\n\n        var checkArgs = function (O, proto) {\n          if (!ES.TypeIsObject(O)) {\n            throw new TypeError('cannot set prototype on a non-object');\n          }\n          if (!(proto === null || ES.TypeIsObject(proto))) {\n            throw new TypeError('can only set prototype to an object or null' + proto);\n          }\n        };\n\n        var setPrototypeOf = function (O, proto) {\n          checkArgs(O, proto);\n          _call(set, O, proto);\n          return O;\n        };\n\n        try {\n          // this works already in Firefox and Safari\n          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\n          _call(set, {}, null);\n        } catch (e) {\n          if (Object.prototype !== {}[magic]) {\n            // IE < 11 cannot be shimmed\n            return;\n          }\n          // probably Chrome or some old Mobile stock browser\n          set = function (proto) {\n            this[magic] = proto;\n          };\n          // please note that this will **not** work\n          // in those browsers that do not inherit\n          // __proto__ by mistake from Object.prototype\n          // in these cases we should probably throw an error\n          // or at least be informed about the issue\n          setPrototypeOf.polyfill = setPrototypeOf(\n            setPrototypeOf({}, null),\n            Object.prototype\n          ) instanceof Object;\n          // setPrototypeOf.polyfill === true means it works as meant\n          // setPrototypeOf.polyfill === false means it's not 100% reliable\n          // setPrototypeOf.polyfill === undefined\n          // or\n          // setPrototypeOf.polyfill ==  null means it's not a polyfill\n          // which means it works as expected\n          // we can even delete Object.prototype.__proto__;\n        }\n        return setPrototypeOf;\n      }(Object, '__proto__'))\n    };\n\n    defineProperties(Object, ES5ObjectShims);\n  }\n\n  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\n  // but Object.create(null) does.\n  if (Object.setPrototypeOf && Object.getPrototypeOf &&\n      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&\n      Object.getPrototypeOf(Object.create(null)) === null) {\n    (function () {\n      var FAKENULL = Object.create(null);\n      var gpo = Object.getPrototypeOf;\n      var spo = Object.setPrototypeOf;\n      Object.getPrototypeOf = function (o) {\n        var result = gpo(o);\n        return result === FAKENULL ? null : result;\n      };\n      Object.setPrototypeOf = function (o, p) {\n        var proto = p === null ? FAKENULL : p;\n        return spo(o, proto);\n      };\n      Object.setPrototypeOf.polyfill = false;\n    }());\n  }\n\n  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });\n  if (!objectKeysAcceptsPrimitives) {\n    var originalObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      return originalObjectKeys(ES.ToObject(value));\n    });\n    keys = Object.keys;\n  }\n  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });\n  if (objectKeysRejectsRegex) {\n    var regexRejectingObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      if (Type.regex(value)) {\n        var regexKeys = [];\n        for (var k in value) {\n          if (_hasOwnProperty(value, k)) {\n            _push(regexKeys, k);\n          }\n        }\n        return regexKeys;\n      }\n      return regexRejectingObjectKeys(value);\n    });\n    keys = Object.keys;\n  }\n\n  if (Object.getOwnPropertyNames) {\n    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });\n    if (!objectGOPNAcceptsPrimitives) {\n      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\n        var val = ES.ToObject(value);\n        if (_toString(val) === '[object Window]') {\n          try {\n            return originalObjectGetOwnPropertyNames(val);\n          } catch (e) {\n            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\n            return _concat([], cachedWindowNames);\n          }\n        }\n        return originalObjectGetOwnPropertyNames(val);\n      });\n    }\n  }\n  if (Object.getOwnPropertyDescriptor) {\n    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });\n    if (!objectGOPDAcceptsPrimitives) {\n      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\n        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\n      });\n    }\n  }\n  if (Object.seal) {\n    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });\n    if (!objectSealAcceptsPrimitives) {\n      var originalObjectSeal = Object.seal;\n      overrideNative(Object, 'seal', function seal(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectSeal(value);\n      });\n    }\n  }\n  if (Object.isSealed) {\n    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });\n    if (!objectIsSealedAcceptsPrimitives) {\n      var originalObjectIsSealed = Object.isSealed;\n      overrideNative(Object, 'isSealed', function isSealed(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsSealed(value);\n      });\n    }\n  }\n  if (Object.freeze) {\n    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });\n    if (!objectFreezeAcceptsPrimitives) {\n      var originalObjectFreeze = Object.freeze;\n      overrideNative(Object, 'freeze', function freeze(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectFreeze(value);\n      });\n    }\n  }\n  if (Object.isFrozen) {\n    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });\n    if (!objectIsFrozenAcceptsPrimitives) {\n      var originalObjectIsFrozen = Object.isFrozen;\n      overrideNative(Object, 'isFrozen', function isFrozen(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsFrozen(value);\n      });\n    }\n  }\n  if (Object.preventExtensions) {\n    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });\n    if (!objectPreventExtensionsAcceptsPrimitives) {\n      var originalObjectPreventExtensions = Object.preventExtensions;\n      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectPreventExtensions(value);\n      });\n    }\n  }\n  if (Object.isExtensible) {\n    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });\n    if (!objectIsExtensibleAcceptsPrimitives) {\n      var originalObjectIsExtensible = Object.isExtensible;\n      overrideNative(Object, 'isExtensible', function isExtensible(value) {\n        if (!ES.TypeIsObject(value)) { return false; }\n        return originalObjectIsExtensible(value);\n      });\n    }\n  }\n  if (Object.getPrototypeOf) {\n    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });\n    if (!objectGetProtoAcceptsPrimitives) {\n      var originalGetProto = Object.getPrototypeOf;\n      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\n        return originalGetProto(ES.ToObject(value));\n      });\n    }\n  }\n\n  var hasFlags = supportsDescriptors && (function () {\n    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n    return desc && ES.IsCallable(desc.get);\n  }());\n  if (supportsDescriptors && !hasFlags) {\n    var regExpFlagsGetter = function flags() {\n      if (!ES.TypeIsObject(this)) {\n        throw new TypeError('Method called on incompatible type: must be an object.');\n      }\n      var result = '';\n      if (this.global) {\n        result += 'g';\n      }\n      if (this.ignoreCase) {\n        result += 'i';\n      }\n      if (this.multiline) {\n        result += 'm';\n      }\n      if (this.unicode) {\n        result += 'u';\n      }\n      if (this.sticky) {\n        result += 'y';\n      }\n      return result;\n    };\n\n    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\n  }\n\n  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\n    return String(new RegExp(/a/g, 'i')) === '/a/i';\n  });\n  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\n    // Edge 0.12 supports flags fully, but does not support Symbol.match\n    var regex = /./;\n    regex[Symbol.match] = false;\n    return RegExp(regex) === regex;\n  }());\n\n  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\n  });\n  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\n  });\n  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\n    var origRegExpToString = RegExp.prototype.toString;\n    defineProperty(RegExp.prototype, 'toString', function toString() {\n      var R = ES.RequireObjectCoercible(this);\n      if (Type.regex(R)) {\n        return _call(origRegExpToString, R);\n      }\n      var pattern = $String(R.source);\n      var flags = $String(R.flags);\n      return '/' + pattern + '/' + flags;\n    }, true);\n    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\n  }\n\n  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\n    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\n    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\n    var legacySourceGetter = function () {\n      // prior to it being a getter, it's own + nonconfigurable\n      return this.source;\n    };\n    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\n\n    var OrigRegExp = RegExp;\n    var RegExpShim = (function () {\n      return function RegExp(pattern, flags) {\n        var patternIsRegExp = ES.IsRegExp(pattern);\n        var calledWithNew = this instanceof RegExp;\n        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\n          return pattern;\n        }\n\n        var P = pattern;\n        var F = flags;\n        if (Type.regex(pattern)) {\n          P = ES.Call(sourceGetter, pattern);\n          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\n          return new RegExp(P, F);\n        } else if (patternIsRegExp) {\n          P = pattern.source;\n          F = typeof flags === 'undefined' ? pattern.flags : flags;\n        }\n        return new OrigRegExp(pattern, flags);\n      };\n    }());\n    wrapConstructor(OrigRegExp, RegExpShim, {\n      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property\n    });\n    /* globals RegExp: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    RegExp = RegExpShim;\n    Value.redefine(globals, 'RegExp', RegExpShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals RegExp: false */\n  }\n\n  if (supportsDescriptors) {\n    var regexGlobals = {\n      input: '$_',\n      lastMatch: '$&',\n      lastParen: '$+',\n      leftContext: '$`',\n      rightContext: '$\\''\n    };\n    _forEach(keys(regexGlobals), function (prop) {\n      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\n        Value.getter(RegExp, regexGlobals[prop], function get() {\n          return RegExp[prop];\n        });\n      }\n    });\n  }\n  addDefaultSpecies(RegExp);\n\n  var inverseEpsilon = 1 / Number.EPSILON;\n  var roundTiesToEven = function roundTiesToEven(n) {\n    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\n    return (n + inverseEpsilon) - inverseEpsilon;\n  };\n  var BINARY_32_EPSILON = Math.pow(2, -23);\n  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\n  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\n  var E = Math.E;\n  var LOG2E = Math.LOG2E;\n  var LOG10E = Math.LOG10E;\n  var numberCLZ = Number.prototype.clz;\n  delete Number.prototype.clz; // Safari 8 has Number#clz\n\n  var MathShims = {\n    acosh: function acosh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || value < 1) { return NaN; }\n      if (x === 1) { return 0; }\n      if (x === Infinity) { return x; }\n      return _log((x / E) + (_sqrt(x + 1) * _sqrt(x - 1) / E)) + 1;\n    },\n\n    asinh: function asinh(value) {\n      var x = Number(value);\n      if (x === 0 || !globalIsFinite(x)) {\n        return x;\n      }\n      return x < 0 ? -asinh(-x) : _log(x + _sqrt((x * x) + 1));\n    },\n\n    atanh: function atanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x < -1 || x > 1) {\n        return NaN;\n      }\n      if (x === -1) { return -Infinity; }\n      if (x === 1) { return Infinity; }\n      if (x === 0) { return x; }\n      return 0.5 * _log((1 + x) / (1 - x));\n    },\n\n    cbrt: function cbrt(value) {\n      var x = Number(value);\n      if (x === 0) { return x; }\n      var negate = x < 0;\n      var result;\n      if (negate) { x = -x; }\n      if (x === Infinity) {\n        result = Infinity;\n      } else {\n        result = _exp(_log(x) / 3);\n        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n        result = ((x / (result * result)) + (2 * result)) / 3;\n      }\n      return negate ? -result : result;\n    },\n\n    clz32: function clz32(value) {\n      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\n      var x = Number(value);\n      var number = ES.ToUint32(x);\n      if (number === 0) {\n        return 32;\n      }\n      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * LOG2E);\n    },\n\n    cosh: function cosh(value) {\n      var x = Number(value);\n      if (x === 0) { return 1; } // +0 or -0\n      if (numberIsNaN(x)) { return NaN; }\n      if (!globalIsFinite(x)) { return Infinity; }\n      if (x < 0) { x = -x; }\n      if (x > 21) { return _exp(x) / 2; }\n      return (_exp(x) + _exp(-x)) / 2;\n    },\n\n    expm1: function expm1(value) {\n      var x = Number(value);\n      if (x === -Infinity) { return -1; }\n      if (!globalIsFinite(x) || x === 0) { return x; }\n      if (_abs(x) > 0.5) {\n        return _exp(x) - 1;\n      }\n      // A more precise approximation using Taylor series expansion\n      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\n      var t = x;\n      var sum = 0;\n      var n = 1;\n      while (sum + t !== sum) {\n        sum += t;\n        n += 1;\n        t *= x / n;\n      }\n      return sum;\n    },\n\n    hypot: function hypot(x, y) {\n      var result = 0;\n      var largest = 0;\n      for (var i = 0; i < arguments.length; ++i) {\n        var value = _abs(Number(arguments[i]));\n        if (largest < value) {\n          result *= (largest / value) * (largest / value);\n          result += 1;\n          largest = value;\n        } else {\n          result += value > 0 ? (value / largest) * (value / largest) : value;\n        }\n      }\n      return largest === Infinity ? Infinity : largest * _sqrt(result);\n    },\n\n    log2: function log2(value) {\n      return _log(value) * LOG2E;\n    },\n\n    log10: function log10(value) {\n      return _log(value) * LOG10E;\n    },\n\n    log1p: function log1p(value) {\n      var x = Number(value);\n      if (x < -1 || numberIsNaN(x)) { return NaN; }\n      if (x === 0 || x === Infinity) { return x; }\n      if (x === -1) { return -Infinity; }\n\n      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\n    },\n\n    sign: _sign,\n\n    sinh: function sinh(value) {\n      var x = Number(value);\n      if (!globalIsFinite(x) || x === 0) { return x; }\n\n      if (_abs(x) < 1) {\n        return (Math.expm1(x) - Math.expm1(-x)) / 2;\n      }\n      return (_exp(x - 1) - _exp(-x - 1)) * E / 2;\n    },\n\n    tanh: function tanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x === 0) { return x; }\n      // can exit early at +-20 as JS loses precision for true value at this integer\n      if (x >= 20) { return 1; }\n      if (x <= -20) { return -1; }\n\n      return (Math.expm1(x) - Math.expm1(-x)) / (_exp(x) + _exp(-x));\n    },\n\n    trunc: function trunc(value) {\n      var x = Number(value);\n      return x < 0 ? -_floor(-x) : _floor(x);\n    },\n\n    imul: function imul(x, y) {\n      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n      var a = ES.ToUint32(x);\n      var b = ES.ToUint32(y);\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0) | 0;\n    },\n\n    fround: function fround(x) {\n      var v = Number(x);\n      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\n        return v;\n      }\n      var sign = _sign(v);\n      var abs = _abs(v);\n      if (abs < BINARY_32_MIN_VALUE) {\n        return sign * roundTiesToEven(\n          abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON\n        ) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\n      }\n      // Veltkamp's splitting (?)\n      var a = (1 + (BINARY_32_EPSILON / Number.EPSILON)) * abs;\n      var result = a - (a - abs);\n      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\n        return sign * Infinity;\n      }\n      return sign * result;\n    }\n  };\n  defineProperties(Math, MathShims);\n  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\n  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\n  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\n  // Chrome 40 has an imprecise Math.tanh with very small numbers\n  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\n  // Chrome 40 loses Math.acosh precision with high numbers\n  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\n  // Firefox 38 on Windows\n  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - (Math.cbrt(1e-300) / 1e-100)) / Number.EPSILON > 8);\n  // node 0.11 has an imprecise Math.sinh with very small numbers\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\n  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\n  var expm1OfTen = Math.expm1(10);\n  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\n\n  var origMathRound = Math.round;\n  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\n  var roundHandlesBoundaryConditions = Math.round(0.5 - (Number.EPSILON / 4)) === 0 &&\n    Math.round(-0.5 + (Number.EPSILON / 3.99)) === 1;\n\n  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\n  // This behavior should be governed by \"round to nearest, ties to even mode\"\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-number-type\n  // These are the boundary cases where it breaks.\n  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\n  var largestPositiveNumberWhereRoundBreaks = (2 * inverseEpsilon) - 1;\n  var roundDoesNotIncreaseIntegers = [\n    smallestPositiveNumberWhereRoundBreaks,\n    largestPositiveNumberWhereRoundBreaks\n  ].every(function (num) {\n    return Math.round(num) === num;\n  });\n  defineProperty(Math, 'round', function round(x) {\n    var floor = _floor(x);\n    var ceil = floor === -1 ? -0 : floor + 1;\n    return x - floor < 0.5 ? floor : ceil;\n  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\n  Value.preserveToString(Math.round, origMathRound);\n\n  var origImul = Math.imul;\n  if (Math.imul(0xffffffff, 5) !== -5) {\n    // Safari 6.1, at least, reports \"0\" for this value\n    Math.imul = MathShims.imul;\n    Value.preserveToString(Math.imul, origImul);\n  }\n  if (Math.imul.length !== 2) {\n    // Safari 8.0.4 has a length of 1\n    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\n    overrideNative(Math, 'imul', function imul(x, y) {\n      return ES.Call(origImul, Math, arguments);\n    });\n  }\n\n  // Promises\n  // Simplest possible implementation; use a 3rd-party library if you\n  // want the best possible speed and/or long stack traces.\n  var PromiseShim = (function () {\n    var setTimeout = globals.setTimeout;\n    // some environments don't have setTimeout - no way to shim here.\n    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\n\n    ES.IsPromise = function (promise) {\n      if (!ES.TypeIsObject(promise)) {\n        return false;\n      }\n      if (typeof promise._promise === 'undefined') {\n        return false; // uninitialized, or missing our hidden field.\n      }\n      return true;\n    };\n\n    // \"PromiseCapability\" in the spec is what most promise implementations\n    // call a \"deferred\".\n    var PromiseCapability = function (C) {\n      if (!ES.IsConstructor(C)) {\n        throw new TypeError('Bad promise constructor');\n      }\n      var capability = this;\n      var resolver = function (resolve, reject) {\n        if (capability.resolve !== void 0 || capability.reject !== void 0) {\n          throw new TypeError('Bad Promise implementation!');\n        }\n        capability.resolve = resolve;\n        capability.reject = reject;\n      };\n      // Initialize fields to inform optimizers about the object shape.\n      capability.resolve = void 0;\n      capability.reject = void 0;\n      capability.promise = new C(resolver);\n      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\n        throw new TypeError('Bad promise constructor');\n      }\n    };\n\n    // find an appropriate setImmediate-alike\n    var makeZeroTimeout;\n    /*global window */\n    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\n      makeZeroTimeout = function () {\n        // from http://dbaron.org/log/20100309-faster-timeouts\n        var timeouts = [];\n        var messageName = 'zero-timeout-message';\n        var setZeroTimeout = function (fn) {\n          _push(timeouts, fn);\n          window.postMessage(messageName, '*');\n        };\n        var handleMessage = function (event) {\n          if (event.source === window && event.data === messageName) {\n            event.stopPropagation();\n            if (timeouts.length === 0) { return; }\n            var fn = _shift(timeouts);\n            fn();\n          }\n        };\n        window.addEventListener('message', handleMessage, true);\n        return setZeroTimeout;\n      };\n    }\n    var makePromiseAsap = function () {\n      // An efficient task-scheduler based on a pre-existing Promise\n      // implementation, which we can use even if we override the\n      // global Promise below (in order to workaround bugs)\n      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\n      var P = globals.Promise;\n      var pr = P && P.resolve && P.resolve();\n      return pr && function (task) {\n        return pr.then(task);\n      };\n    };\n    /*global process */\n    /* jscs:disable disallowMultiLineTernary */\n    var enqueue = ES.IsCallable(globals.setImmediate) ?\n      globals.setImmediate :\n      typeof process === 'object' && process.nextTick ? process.nextTick :\n      makePromiseAsap() ||\n      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :\n      function (task) { setTimeout(task, 0); }); // fallback\n    /* jscs:enable disallowMultiLineTernary */\n\n    // Constants for Promise implementation\n    var PROMISE_IDENTITY = function (x) { return x; };\n    var PROMISE_THROWER = function (e) { throw e; };\n    var PROMISE_PENDING = 0;\n    var PROMISE_FULFILLED = 1;\n    var PROMISE_REJECTED = 2;\n    // We store fulfill/reject handlers and capabilities in a single array.\n    var PROMISE_FULFILL_OFFSET = 0;\n    var PROMISE_REJECT_OFFSET = 1;\n    var PROMISE_CAPABILITY_OFFSET = 2;\n    // This is used in an optimization for chaining promises via then.\n    var PROMISE_FAKE_CAPABILITY = {};\n\n    var enqueuePromiseReactionJob = function (handler, capability, argument) {\n      enqueue(function () {\n        promiseReactionJob(handler, capability, argument);\n      });\n    };\n\n    var promiseReactionJob = function (handler, promiseCapability, argument) {\n      var handlerResult, f;\n      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\n        // Fast case, when we don't actually need to chain through to a\n        // (real) promiseCapability.\n        return handler(argument);\n      }\n      try {\n        handlerResult = handler(argument);\n        f = promiseCapability.resolve;\n      } catch (e) {\n        handlerResult = e;\n        f = promiseCapability.reject;\n      }\n      f(handlerResult);\n    };\n\n    var fulfillPromise = function (promise, value) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.fulfillReactionHandler0,\n          _promise.reactionCapability0,\n          value\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_FULFILL_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              value\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = value;\n      _promise.state = PROMISE_FULFILLED;\n      _promise.reactionLength = 0;\n    };\n\n    var rejectPromise = function (promise, reason) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.rejectReactionHandler0,\n          _promise.reactionCapability0,\n          reason\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_REJECT_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              reason\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = reason;\n      _promise.state = PROMISE_REJECTED;\n      _promise.reactionLength = 0;\n    };\n\n    var createResolvingFunctions = function (promise) {\n      var alreadyResolved = false;\n      var resolve = function (resolution) {\n        var then;\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        if (resolution === promise) {\n          return rejectPromise(promise, new TypeError('Self resolution'));\n        }\n        if (!ES.TypeIsObject(resolution)) {\n          return fulfillPromise(promise, resolution);\n        }\n        try {\n          then = resolution.then;\n        } catch (e) {\n          return rejectPromise(promise, e);\n        }\n        if (!ES.IsCallable(then)) {\n          return fulfillPromise(promise, resolution);\n        }\n        enqueue(function () {\n          promiseResolveThenableJob(promise, resolution, then);\n        });\n      };\n      var reject = function (reason) {\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        return rejectPromise(promise, reason);\n      };\n      return { resolve: resolve, reject: reject };\n    };\n\n    var optimizedThen = function (then, thenable, resolve, reject) {\n      // Optimization: since we discard the result, we can pass our\n      // own then implementation a special hint to let it know it\n      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\n      // object is local to this implementation and unforgeable outside.)\n      if (then === Promise$prototype$then) {\n        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\n      } else {\n        _call(then, thenable, resolve, reject);\n      }\n    };\n    var promiseResolveThenableJob = function (promise, thenable, then) {\n      var resolvingFunctions = createResolvingFunctions(promise);\n      var resolve = resolvingFunctions.resolve;\n      var reject = resolvingFunctions.reject;\n      try {\n        optimizedThen(then, thenable, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var Promise$prototype, Promise$prototype$then;\n    var Promise = (function () {\n      var PromiseShim = function Promise(resolver) {\n        if (!(this instanceof PromiseShim)) {\n          throw new TypeError('Constructor Promise requires \"new\"');\n        }\n        if (this && this._promise) {\n          throw new TypeError('Bad construction');\n        }\n        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\n        if (!ES.IsCallable(resolver)) {\n          throw new TypeError('not a valid resolver');\n        }\n        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\n          _promise: {\n            result: void 0,\n            state: PROMISE_PENDING,\n            // The first member of the \"reactions\" array is inlined here,\n            // since most promises only have one reaction.\n            // We've also exploded the 'reaction' object to inline the\n            // \"handler\" and \"capability\" fields, since both fulfill and\n            // reject reactions share the same capability.\n            reactionLength: 0,\n            fulfillReactionHandler0: void 0,\n            rejectReactionHandler0: void 0,\n            reactionCapability0: void 0\n          }\n        });\n        var resolvingFunctions = createResolvingFunctions(promise);\n        var reject = resolvingFunctions.reject;\n        try {\n          resolver(resolvingFunctions.resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        return promise;\n      };\n      return PromiseShim;\n    }());\n    Promise$prototype = Promise.prototype;\n\n    var _promiseAllResolver = function (index, values, capability, remaining) {\n      var alreadyCalled = false;\n      return function (x) {\n        if (alreadyCalled) { return; }\n        alreadyCalled = true;\n        values[index] = x;\n        if ((--remaining.count) === 0) {\n          var resolve = capability.resolve;\n          resolve(values); // call w/ this===undefined\n        }\n      };\n    };\n\n    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var values = [];\n      var remaining = { count: 1 };\n      var next, nextValue;\n      var index = 0;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        values[index] = void 0;\n        var nextPromise = C.resolve(nextValue);\n        var resolveElement = _promiseAllResolver(\n          index, values, resultCapability, remaining\n        );\n        remaining.count += 1;\n        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\n        index += 1;\n      }\n      if ((--remaining.count) === 0) {\n        var resolve = resultCapability.resolve;\n        resolve(values); // call w/ this===undefined\n      }\n      return resultCapability.promise;\n    };\n\n    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var next, nextValue, nextPromise;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            // NOTE: If iterable has no items, resulting promise will never\n            // resolve; see:\n            // https://github.com/domenic/promises-unwrapping/issues/75\n            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        nextPromise = C.resolve(nextValue);\n        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\n      }\n      return resultCapability.promise;\n    };\n\n    defineProperties(Promise, {\n      all: function all(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseAll(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      race: function race(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseRace(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      reject: function reject(reason) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        var capability = new PromiseCapability(C);\n        var rejectFunc = capability.reject;\n        rejectFunc(reason); // call with this===undefined\n        return capability.promise;\n      },\n\n      resolve: function resolve(v) {\n        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        if (ES.IsPromise(v)) {\n          var constructor = v.constructor;\n          if (constructor === C) {\n            return v;\n          }\n        }\n        var capability = new PromiseCapability(C);\n        var resolveFunc = capability.resolve;\n        resolveFunc(v); // call with this===undefined\n        return capability.promise;\n      }\n    });\n\n    defineProperties(Promise$prototype, {\n      'catch': function (onRejected) {\n        return this.then(null, onRejected);\n      },\n\n      then: function then(onFulfilled, onRejected) {\n        var promise = this;\n        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\n        var C = ES.SpeciesConstructor(promise, Promise);\n        var resultCapability;\n        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\n        if (returnValueIsIgnored && C === Promise) {\n          resultCapability = PROMISE_FAKE_CAPABILITY;\n        } else {\n          resultCapability = new PromiseCapability(C);\n        }\n        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\n        // Note that we've split the 'reaction' object into its two\n        // components, \"capabilities\" and \"handler\"\n        // \"capabilities\" is always equal to `resultCapability`\n        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\n        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\n        var _promise = promise._promise;\n        var value;\n        if (_promise.state === PROMISE_PENDING) {\n          if (_promise.reactionLength === 0) {\n            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\n            _promise.rejectReactionHandler0 = rejectReactionHandler;\n            _promise.reactionCapability0 = resultCapability;\n          } else {\n            var idx = 3 * (_promise.reactionLength - 1);\n            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\n            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\n            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\n          }\n          _promise.reactionLength += 1;\n        } else if (_promise.state === PROMISE_FULFILLED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            fulfillReactionHandler, resultCapability, value\n          );\n        } else if (_promise.state === PROMISE_REJECTED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            rejectReactionHandler, resultCapability, value\n          );\n        } else {\n          throw new TypeError('unexpected Promise state');\n        }\n        return resultCapability.promise;\n      }\n    });\n    // This helps the optimizer by ensuring that methods which take\n    // capabilities aren't polymorphic.\n    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\n    Promise$prototype$then = Promise$prototype.then;\n\n    return Promise;\n  }());\n\n  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\n  if (globals.Promise) {\n    delete globals.Promise.accept;\n    delete globals.Promise.defer;\n    delete globals.Promise.prototype.chain;\n  }\n\n  if (typeof PromiseShim === 'function') {\n    // export the Promise constructor.\n    defineProperties(globals, { Promise: PromiseShim });\n    // In Chrome 33 (and thereabouts) Promise is defined, but the\n    // implementation is buggy in a number of ways.  Let's check subclassing\n    // support to see if we have a buggy implementation.\n    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\n      return S.resolve(42).then(function () {}) instanceof S;\n    });\n    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () {\n      globals.Promise.reject(42).then(null, 5).then(null, noop);\n    });\n    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });\n    // Promise.resolve() was errata'ed late in the ES6 process.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\n    //      https://code.google.com/p/v8/issues/detail?id=4161\n    // It serves as a proxy for a number of other bugs in early Promise\n    // implementations.\n    var promiseResolveBroken = (function (Promise) {\n      var p = Promise.resolve(5);\n      p.constructor = {};\n      var p2 = Promise.resolve(p);\n      try {\n        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n      } catch (e) {\n        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\n      }\n      return p === p2; // This *should* be false!\n    }(globals.Promise));\n\n    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\n    var getsThenSynchronously = supportsDescriptors && (function () {\n      var count = 0;\n      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\n      Promise.resolve(thenable);\n      return count === 1;\n    }());\n\n    var BadResolverPromise = function BadResolverPromise(executor) {\n      var p = new Promise(executor);\n      executor(3, function () {});\n      this.then = p.then;\n      this.constructor = BadResolverPromise;\n    };\n    BadResolverPromise.prototype = Promise.prototype;\n    BadResolverPromise.all = Promise.all;\n    // Chrome Canary 49 (probably older too) has some implementation bugs\n    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\n      return !!BadResolverPromise.all([1, 2]);\n    });\n\n    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||\n        !promiseRequiresObjectContext || promiseResolveBroken ||\n        !getsThenSynchronously || hasBadResolverPromise) {\n      /* globals Promise: true */\n      /* eslint-disable no-undef, no-global-assign */\n      /* jshint -W020 */\n      Promise = PromiseShim;\n      /* jshint +W020 */\n      /* eslint-enable no-undef, no-global-assign */\n      /* globals Promise: false */\n      overrideNative(globals, 'Promise', PromiseShim);\n    }\n    if (Promise.all.length !== 1) {\n      var origAll = Promise.all;\n      overrideNative(Promise, 'all', function all(iterable) {\n        return ES.Call(origAll, this, arguments);\n      });\n    }\n    if (Promise.race.length !== 1) {\n      var origRace = Promise.race;\n      overrideNative(Promise, 'race', function race(iterable) {\n        return ES.Call(origRace, this, arguments);\n      });\n    }\n    if (Promise.resolve.length !== 1) {\n      var origResolve = Promise.resolve;\n      overrideNative(Promise, 'resolve', function resolve(x) {\n        return ES.Call(origResolve, this, arguments);\n      });\n    }\n    if (Promise.reject.length !== 1) {\n      var origReject = Promise.reject;\n      overrideNative(Promise, 'reject', function reject(r) {\n        return ES.Call(origReject, this, arguments);\n      });\n    }\n    ensureEnumerable(Promise, 'all');\n    ensureEnumerable(Promise, 'race');\n    ensureEnumerable(Promise, 'resolve');\n    ensureEnumerable(Promise, 'reject');\n    addDefaultSpecies(Promise);\n  }\n\n  // Map and Set require a true ES5 environment\n  // Their fast path also requires that the environment preserve\n  // property insertion order, which is not guaranteed by the spec.\n  var testOrder = function (a) {\n    var b = keys(_reduce(a, function (o, k) {\n      o[k] = true;\n      return o;\n    }, {}));\n    return a.join(':') === b.join(':');\n  };\n  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\n  // some engines (eg, Chrome) only preserve insertion order for string keys\n  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\n\n  if (supportsDescriptors) {\n\n    var fastkey = function fastkey(key, skipInsertionOrderCheck) {\n      if (!skipInsertionOrderCheck && !preservesInsertionOrder) {\n        return null;\n      }\n      if (isNullOrUndefined(key)) {\n        return '^' + ES.ToString(key);\n      } else if (typeof key === 'string') {\n        return '$' + key;\n      } else if (typeof key === 'number') {\n        // note that -0 will get coerced to \"0\" when used as a property key\n        if (!preservesNumericInsertionOrder) {\n          return 'n' + key;\n        }\n        return key;\n      } else if (typeof key === 'boolean') {\n        return 'b' + key;\n      }\n      return null;\n    };\n\n    var emptyObject = function emptyObject() {\n      // accomodate some older not-quite-ES5 browsers\n      return Object.create ? Object.create(null) : {};\n    };\n\n    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (entry) {\n          if (!ES.TypeIsObject(entry)) {\n            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\n          }\n          map.set(entry[0], entry[1]);\n        });\n      } else if (iterable instanceof MapConstructor) {\n        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\n          map.set(key, value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = map.set;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextItem = next.value;\n            try {\n              if (!ES.TypeIsObject(nextItem)) {\n                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\n              }\n              _call(adder, map, nextItem[0], nextItem[1]);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (value) {\n          set.add(value);\n        });\n      } else if (iterable instanceof SetConstructor) {\n        _call(SetConstructor.prototype.forEach, iterable, function (value) {\n          set.add(value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = set.add;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextValue = next.value;\n            try {\n              _call(adder, set, nextValue);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n\n    var collectionShims = {\n      Map: (function () {\n\n        var empty = {};\n\n        var MapEntry = function MapEntry(key, value) {\n          this.key = key;\n          this.value = value;\n          this.next = null;\n          this.prev = null;\n        };\n\n        MapEntry.prototype.isRemoved = function isRemoved() {\n          return this.key === empty;\n        };\n\n        var isMap = function isMap(map) {\n          return !!map._es6map;\n        };\n\n        var requireMapSlot = function requireMapSlot(map, method) {\n          if (!ES.TypeIsObject(map) || !isMap(map)) {\n            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\n          }\n        };\n\n        var MapIterator = function MapIterator(map, kind) {\n          requireMapSlot(map, '[[MapIterator]]');\n          this.head = map._head;\n          this.i = this.head;\n          this.kind = kind;\n        };\n\n        MapIterator.prototype = {\n          next: function next() {\n            var i = this.i;\n            var kind = this.kind;\n            var head = this.head;\n            if (typeof this.i === 'undefined') {\n              return iteratorResult();\n            }\n            while (i.isRemoved() && i !== head) {\n              // back up off of removed entries\n              i = i.prev;\n            }\n            // advance to next unreturned element.\n            var result;\n            while (i.next !== head) {\n              i = i.next;\n              if (!i.isRemoved()) {\n                if (kind === 'key') {\n                  result = i.key;\n                } else if (kind === 'value') {\n                  result = i.value;\n                } else {\n                  result = [i.key, i.value];\n                }\n                this.i = i;\n                return iteratorResult(result);\n              }\n            }\n            // once the iterator is done, it is done forever.\n            this.i = void 0;\n            return iteratorResult();\n          }\n        };\n        addIterator(MapIterator.prototype);\n\n        var Map$prototype;\n        var MapShim = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          if (this && this._es6map) {\n            throw new TypeError('Bad construction');\n          }\n          var map = emulateES6construct(this, Map, Map$prototype, {\n            _es6map: true,\n            _head: null,\n            _map: OrigMap ? new OrigMap() : null,\n            _size: 0,\n            _storage: emptyObject()\n          });\n\n          var head = new MapEntry(null, null);\n          // circular doubly-linked list.\n          /* eslint no-multi-assign: 1 */\n          head.next = head.prev = head;\n          map._head = head;\n\n          // Optionally initialize map from iterable\n          if (arguments.length > 0) {\n            addIterableToMap(Map, map, arguments[0]);\n          }\n          return map;\n        };\n        Map$prototype = MapShim.prototype;\n\n        Value.getter(Map$prototype, 'size', function () {\n          if (typeof this._size === 'undefined') {\n            throw new TypeError('size method called on incompatible Map');\n          }\n          return this._size;\n        });\n\n        defineProperties(Map$prototype, {\n          get: function get(key) {\n            requireMapSlot(this, 'get');\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              entry = this._storage[fkey];\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            if (this._map) {\n              // fast object key path\n              entry = origMapGet.call(this._map, key);\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return i.value;\n              }\n            }\n          },\n\n          has: function has(key) {\n            requireMapSlot(this, 'has');\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              return typeof this._storage[fkey] !== 'undefined';\n            }\n            if (this._map) {\n              // fast object key path\n              return origMapHas.call(this._map, key);\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return true;\n              }\n            }\n            return false;\n          },\n\n          set: function set(key, value) {\n            requireMapSlot(this, 'set');\n            var head = this._head;\n            var i = head;\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] !== 'undefined') {\n                this._storage[fkey].value = value;\n                return this;\n              } else {\n                entry = this._storage[fkey] = new MapEntry(key, value); /* eslint no-multi-assign: 1 */\n                i = head.prev;\n                // fall through\n              }\n            } else if (this._map) {\n              // fast object key path\n              if (origMapHas.call(this._map, key)) {\n                origMapGet.call(this._map, key).value = value;\n              } else {\n                entry = new MapEntry(key, value);\n                origMapSet.call(this._map, key, entry);\n                i = head.prev;\n                // fall through\n              }\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.value = value;\n                return this;\n              }\n            }\n            entry = entry || new MapEntry(key, value);\n            if (ES.SameValue(-0, key)) {\n              entry.key = +0; // coerce -0 to +0 in entry\n            }\n            entry.next = this._head;\n            entry.prev = this._head.prev;\n            entry.prev.next = entry;\n            entry.next.prev = entry;\n            this._size += 1;\n            return this;\n          },\n\n          'delete': function (key) {\n            requireMapSlot(this, 'delete');\n            var head = this._head;\n            var i = head;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] === 'undefined') {\n                return false;\n              }\n              i = this._storage[fkey].prev;\n              delete this._storage[fkey];\n              // fall through\n            } else if (this._map) {\n              // fast object key path\n              if (!origMapHas.call(this._map, key)) {\n                return false;\n              }\n              i = origMapGet.call(this._map, key).prev;\n              origMapDelete.call(this._map, key);\n              // fall through\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.key = empty;\n                i.value = empty;\n                i.prev.next = i.next;\n                i.next.prev = i.prev;\n                this._size -= 1;\n                return true;\n              }\n            }\n            return false;\n          },\n\n          clear: function clear() {\n             /* eslint no-multi-assign: 1 */\n            requireMapSlot(this, 'clear');\n            this._map = OrigMap ? new OrigMap() : null;\n            this._size = 0;\n            this._storage = emptyObject();\n            var head = this._head;\n            var i = head;\n            var p = i.next;\n            while ((i = p) !== head) {\n              i.key = empty;\n              i.value = empty;\n              p = i.next;\n              i.next = i.prev = head;\n            }\n            head.next = head.prev = head;\n          },\n\n          keys: function keys() {\n            requireMapSlot(this, 'keys');\n            return new MapIterator(this, 'key');\n          },\n\n          values: function values() {\n            requireMapSlot(this, 'values');\n            return new MapIterator(this, 'value');\n          },\n\n          entries: function entries() {\n            requireMapSlot(this, 'entries');\n            return new MapIterator(this, 'key+value');\n          },\n\n          forEach: function forEach(callback) {\n            requireMapSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var it = this.entries();\n            for (var entry = it.next(); !entry.done; entry = it.next()) {\n              if (context) {\n                _call(callback, context, entry.value[1], entry.value[0], this);\n              } else {\n                callback(entry.value[1], entry.value[0], this);\n              }\n            }\n          }\n        });\n        addIterator(Map$prototype, Map$prototype.entries);\n\n        return MapShim;\n      }()),\n\n      Set: (function () {\n        var isSet = function isSet(set) {\n          return set._es6set && typeof set._storage !== 'undefined';\n        };\n        var requireSetSlot = function requireSetSlot(set, method) {\n          if (!ES.TypeIsObject(set) || !isSet(set)) {\n            // https://github.com/paulmillr/es6-shim/issues/176\n            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\n          }\n        };\n\n        // Creating a Map is expensive.  To speed up the common case of\n        // Sets containing only string or numeric keys, we use an object\n        // as backing storage and lazily create a full Map only when\n        // required.\n        var Set$prototype;\n        var SetShim = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          if (this && this._es6set) {\n            throw new TypeError('Bad construction');\n          }\n          var set = emulateES6construct(this, Set, Set$prototype, {\n            _es6set: true,\n            '[[SetData]]': null,\n            _storage: emptyObject()\n          });\n          if (!set._es6set) {\n            throw new TypeError('bad set');\n          }\n\n          // Optionally initialize Set from iterable\n          if (arguments.length > 0) {\n            addIterableToSet(Set, set, arguments[0]);\n          }\n          return set;\n        };\n        Set$prototype = SetShim.prototype;\n\n        var decodeKey = function (key) {\n          var k = key;\n          if (k === '^null') {\n            return null;\n          } else if (k === '^undefined') {\n            return void 0;\n          } else {\n            var first = k.charAt(0);\n            if (first === '$') {\n              return _strSlice(k, 1);\n            } else if (first === 'n') {\n              return +_strSlice(k, 1);\n            } else if (first === 'b') {\n              return k === 'btrue';\n            }\n          }\n          return +k;\n        };\n        // Switch from the object backing storage to a full Map.\n        var ensureMap = function ensureMap(set) {\n          if (!set['[[SetData]]']) {\n            var m = new collectionShims.Map();\n            set['[[SetData]]'] = m;\n            _forEach(keys(set._storage), function (key) {\n              var k = decodeKey(key);\n              m.set(k, k);\n            });\n            set['[[SetData]]'] = m;\n          }\n          set._storage = null; // free old backing storage\n        };\n\n        Value.getter(SetShim.prototype, 'size', function () {\n          requireSetSlot(this, 'size');\n          if (this._storage) {\n            return keys(this._storage).length;\n          }\n          ensureMap(this);\n          return this['[[SetData]]'].size;\n        });\n\n        defineProperties(SetShim.prototype, {\n          has: function has(key) {\n            requireSetSlot(this, 'has');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              return !!this._storage[fkey];\n            }\n            ensureMap(this);\n            return this['[[SetData]]'].has(key);\n          },\n\n          add: function add(key) {\n            requireSetSlot(this, 'add');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              this._storage[fkey] = true;\n              return this;\n            }\n            ensureMap(this);\n            this['[[SetData]]'].set(key, key);\n            return this;\n          },\n\n          'delete': function (key) {\n            requireSetSlot(this, 'delete');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              var hasFKey = _hasOwnProperty(this._storage, fkey);\n              return (delete this._storage[fkey]) && hasFKey;\n            }\n            ensureMap(this);\n            return this['[[SetData]]']['delete'](key);\n          },\n\n          clear: function clear() {\n            requireSetSlot(this, 'clear');\n            if (this._storage) {\n              this._storage = emptyObject();\n            }\n            if (this['[[SetData]]']) {\n              this['[[SetData]]'].clear();\n            }\n          },\n\n          values: function values() {\n            requireSetSlot(this, 'values');\n            ensureMap(this);\n            return this['[[SetData]]'].values();\n          },\n\n          entries: function entries() {\n            requireSetSlot(this, 'entries');\n            ensureMap(this);\n            return this['[[SetData]]'].entries();\n          },\n\n          forEach: function forEach(callback) {\n            requireSetSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var entireSet = this;\n            ensureMap(entireSet);\n            this['[[SetData]]'].forEach(function (value, key) {\n              if (context) {\n                _call(callback, context, key, key, entireSet);\n              } else {\n                callback(key, key, entireSet);\n              }\n            });\n          }\n        });\n        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\n        addIterator(SetShim.prototype, SetShim.prototype.values);\n\n        return SetShim;\n      }())\n    };\n\n    if (globals.Map || globals.Set) {\n      // Safari 8, for example, doesn't accept an iterable.\n      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\n      if (!mapAcceptsArguments) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, globals.Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = create(OrigMap.prototype);\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var testMap = new Map();\n      var mapUsesSameValueZero = (function () {\n        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\n        m.set(-0, m);\n        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\n      }());\n      var mapSupportsChaining = testMap.set(1, 2) === testMap;\n      if (!mapUsesSameValueZero || !mapSupportsChaining) {\n        overrideNative(Map.prototype, 'set', function set(k, v) {\n          _call(origMapSet, this, k === 0 ? 0 : k, v);\n          return this;\n        });\n      }\n      if (!mapUsesSameValueZero) {\n        defineProperties(Map.prototype, {\n          get: function get(k) {\n            return _call(origMapGet, this, k === 0 ? 0 : k);\n          },\n          has: function has(k) {\n            return _call(origMapHas, this, k === 0 ? 0 : k);\n          }\n        }, true);\n        Value.preserveToString(Map.prototype.get, origMapGet);\n        Value.preserveToString(Map.prototype.has, origMapHas);\n      }\n      var testSet = new Set();\n      var setUsesSameValueZero = (function (s) {\n        s['delete'](0);\n        s.add(-0);\n        return !s.has(0);\n      }(testSet));\n      var setSupportsChaining = testSet.add(1) === testSet;\n      if (!setUsesSameValueZero || !setSupportsChaining) {\n        var origSetAdd = Set.prototype.add;\n        Set.prototype.add = function add(v) {\n          _call(origSetAdd, this, v === 0 ? 0 : v);\n          return this;\n        };\n        Value.preserveToString(Set.prototype.add, origSetAdd);\n      }\n      if (!setUsesSameValueZero) {\n        var origSetHas = Set.prototype.has;\n        Set.prototype.has = function has(v) {\n          return _call(origSetHas, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype.has, origSetHas);\n        var origSetDel = Set.prototype['delete'];\n        Set.prototype['delete'] = function SetDelete(v) {\n          return _call(origSetDel, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype['delete'], origSetDel);\n      }\n      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\n        var m = new M([]);\n        // Firefox 32 is ok with the instantiating the subclass but will\n        // throw when the map is used.\n        m.set(42, 42);\n        return m instanceof M;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing;\n      var mapRequiresNew = (function () {\n        try {\n          return !(globals.Map() instanceof globals.Map);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = OrigMap.prototype;\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\n        var s = new S([]);\n        s.add(42, 42);\n        return s instanceof S;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing;\n      var setRequiresNew = (function () {\n        try {\n          return !(globals.Set() instanceof globals.Set);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\n        var OrigSet = globals.Set;\n        globals.Set = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          var s = new OrigSet();\n          if (arguments.length > 0) {\n            addIterableToSet(Set, s, arguments[0]);\n          }\n          delete s.constructor;\n          Object.setPrototypeOf(s, Set.prototype);\n          return s;\n        };\n        globals.Set.prototype = OrigSet.prototype;\n        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\n        Value.preserveToString(globals.Set, OrigSet);\n      }\n      var newMap = new globals.Map();\n      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\n        return newMap.keys().next().done;\n      });\n      /*\n        - In Firefox < 23, Map#size is a function.\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n        - In Firefox 24, Map and Set do not implement forEach\n        - In Firefox 25 at least, Map and Set are callable without \"new\"\n      */\n      if (\n        typeof globals.Map.prototype.clear !== 'function' ||\n        new globals.Set().size !== 0 ||\n        newMap.size !== 0 ||\n        typeof globals.Map.prototype.keys !== 'function' ||\n        typeof globals.Set.prototype.keys !== 'function' ||\n        typeof globals.Map.prototype.forEach !== 'function' ||\n        typeof globals.Set.prototype.forEach !== 'function' ||\n        isCallableWithoutNew(globals.Map) ||\n        isCallableWithoutNew(globals.Set) ||\n        typeof newMap.keys().next !== 'function' || // Safari 8\n        mapIterationThrowsStopIterator || // Firefox 25\n        !mapSupportsSubclassing\n      ) {\n        defineProperties(globals, {\n          Map: collectionShims.Map,\n          Set: collectionShims.Set\n        }, true);\n      }\n\n      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\n        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\n        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\n      }\n\n      // Shim incomplete iterator implementations.\n      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\n      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\n\n      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\n        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\n        var anonymousSetHas = globals.Set.prototype.has;\n        overrideNative(globals.Set.prototype, 'has', function has(key) {\n          return _call(anonymousSetHas, this, key);\n        });\n      }\n    }\n    defineProperties(globals, collectionShims);\n    addDefaultSpecies(globals.Map);\n    addDefaultSpecies(globals.Set);\n  }\n\n  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\n    if (!ES.TypeIsObject(target)) {\n      throw new TypeError('target must be an object');\n    }\n  };\n\n  // Some Reflect methods are basically the same as\n  // those on the Object global, except that a TypeError is thrown if\n  // target isn't an object. As well as returning a boolean indicating\n  // the success of the operation.\n  var ReflectShims = {\n    // Apply method in a functional form.\n    apply: function apply() {\n      return ES.Call(ES.Call, null, arguments);\n    },\n\n    // New operator in a functional form.\n    construct: function construct(constructor, args) {\n      if (!ES.IsConstructor(constructor)) {\n        throw new TypeError('First argument must be a constructor.');\n      }\n      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\n      if (!ES.IsConstructor(newTarget)) {\n        throw new TypeError('new.target must be a constructor.');\n      }\n      return ES.Construct(constructor, args, newTarget, 'internal');\n    },\n\n    // When deleting a non-existent or configurable property,\n    // true is returned.\n    // When attempting to delete a non-configurable property,\n    // it will return false.\n    deleteProperty: function deleteProperty(target, key) {\n      throwUnlessTargetIsObject(target);\n      if (supportsDescriptors) {\n        var desc = Object.getOwnPropertyDescriptor(target, key);\n\n        if (desc && !desc.configurable) {\n          return false;\n        }\n      }\n\n      // Will return true.\n      return delete target[key];\n    },\n\n    has: function has(target, key) {\n      throwUnlessTargetIsObject(target);\n      return key in target;\n    }\n  };\n\n  if (Object.getOwnPropertyNames) {\n    Object.assign(ReflectShims, {\n      // Basically the result of calling the internal [[OwnPropertyKeys]].\n      // Concatenating propertyNames and propertySymbols should do the trick.\n      // This should continue to work together with a Symbol shim\n      // which overrides Object.getOwnPropertyNames and implements\n      // Object.getOwnPropertySymbols.\n      ownKeys: function ownKeys(target) {\n        throwUnlessTargetIsObject(target);\n        var keys = Object.getOwnPropertyNames(target);\n\n        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n          _pushApply(keys, Object.getOwnPropertySymbols(target));\n        }\n\n        return keys;\n      }\n    });\n  }\n\n  var callAndCatchException = function ConvertExceptionToBoolean(func) {\n    return !throwsError(func);\n  };\n\n  if (Object.preventExtensions) {\n    Object.assign(ReflectShims, {\n      isExtensible: function isExtensible(target) {\n        throwUnlessTargetIsObject(target);\n        return Object.isExtensible(target);\n      },\n      preventExtensions: function preventExtensions(target) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.preventExtensions(target);\n        });\n      }\n    });\n  }\n\n  if (supportsDescriptors) {\n    var internalGet = function get(target, key, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent === null) {\n          return void 0;\n        }\n\n        return internalGet(parent, key, receiver);\n      }\n\n      if ('value' in desc) {\n        return desc.value;\n      }\n\n      if (desc.get) {\n        return ES.Call(desc.get, receiver);\n      }\n\n      return void 0;\n    };\n\n    var internalSet = function set(target, key, value, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return internalSet(parent, key, value, receiver);\n        }\n\n        desc = {\n          value: void 0,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        };\n      }\n\n      if ('value' in desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        if (!ES.TypeIsObject(receiver)) {\n          return false;\n        }\n\n        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\n\n        if (existingDesc) {\n          return Reflect.defineProperty(receiver, key, {\n            value: value\n          });\n        } else {\n          return Reflect.defineProperty(receiver, key, {\n            value: value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n\n      if (desc.set) {\n        _call(desc.set, receiver, value);\n        return true;\n      }\n\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      defineProperty: function defineProperty(target, propertyKey, attributes) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.defineProperty(target, propertyKey, attributes);\n        });\n      },\n\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n        throwUnlessTargetIsObject(target);\n        return Object.getOwnPropertyDescriptor(target, propertyKey);\n      },\n\n      // Syntax in a functional form.\n      get: function get(target, key) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 2 ? arguments[2] : target;\n\n        return internalGet(target, key, receiver);\n      },\n\n      set: function set(target, key, value) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 3 ? arguments[3] : target;\n\n        return internalSet(target, key, value, receiver);\n      }\n    });\n  }\n\n  if (Object.getPrototypeOf) {\n    var objectDotGetPrototypeOf = Object.getPrototypeOf;\n    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\n      throwUnlessTargetIsObject(target);\n      return objectDotGetPrototypeOf(target);\n    };\n  }\n\n  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\n    var willCreateCircularPrototype = function (object, lastProto) {\n      var proto = lastProto;\n      while (proto) {\n        if (object === proto) {\n          return true;\n        }\n        proto = ReflectShims.getPrototypeOf(proto);\n      }\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      // Sets the prototype of the given object.\n      // Returns true on success, otherwise false.\n      setPrototypeOf: function setPrototypeOf(object, proto) {\n        throwUnlessTargetIsObject(object);\n        if (proto !== null && !ES.TypeIsObject(proto)) {\n          throw new TypeError('proto must be an object or null');\n        }\n\n        // If they already are the same, we're done.\n        if (proto === Reflect.getPrototypeOf(object)) {\n          return true;\n        }\n\n        // Cannot alter prototype if object not extensible.\n        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\n          return false;\n        }\n\n        // Ensure that we do not create a circular prototype chain.\n        if (willCreateCircularPrototype(object, proto)) {\n          return false;\n        }\n\n        Object.setPrototypeOf(object, proto);\n\n        return true;\n      }\n    });\n  }\n  var defineOrOverrideReflectProperty = function (key, shim) {\n    if (!ES.IsCallable(globals.Reflect[key])) {\n      defineProperty(globals.Reflect, key, shim);\n    } else {\n      var acceptsPrimitives = valueOrFalseIfThrows(function () {\n        globals.Reflect[key](1);\n        globals.Reflect[key](NaN);\n        globals.Reflect[key](true);\n        return true;\n      });\n      if (acceptsPrimitives) {\n        overrideNative(globals.Reflect, key, shim);\n      }\n    }\n  };\n  Object.keys(ReflectShims).forEach(function (key) {\n    defineOrOverrideReflectProperty(key, ReflectShims[key]);\n  });\n  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\n  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\n    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\n      return _call(originalReflectGetProto, globals.Reflect, target);\n    });\n  }\n  if (globals.Reflect.setPrototypeOf) {\n    if (valueOrFalseIfThrows(function () {\n      globals.Reflect.setPrototypeOf(1, {});\n      return true;\n    })) {\n      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\n    }\n  }\n  if (globals.Reflect.defineProperty) {\n    if (!valueOrFalseIfThrows(function () {\n      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\n      // \"extensible\" fails on Edge 0.12\n      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\n      return basic && extensible;\n    })) {\n      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\n    }\n  }\n  if (globals.Reflect.construct) {\n    if (!valueOrFalseIfThrows(function () {\n      var F = function F() {};\n      return globals.Reflect.construct(function () {}, [], F) instanceof F;\n    })) {\n      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\n    }\n  }\n\n  if (String(new Date(NaN)) !== 'Invalid Date') {\n    var dateToString = Date.prototype.toString;\n    var shimmedDateToString = function toString() {\n      var valueOf = +this;\n      if (valueOf !== valueOf) {\n        return 'Invalid Date';\n      }\n      return ES.Call(dateToString, this);\n    };\n    overrideNative(Date.prototype, 'toString', shimmedDateToString);\n  }\n\n  // Annex B HTML methods\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-string.prototype-object\n  var stringHTMLshims = {\n    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\n    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\n    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\n    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\n    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\n    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\n    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\n    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\n    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\n    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\n    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\n    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\n    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\n  };\n  _forEach(Object.keys(stringHTMLshims), function (key) {\n    var method = String.prototype[key];\n    var shouldOverwrite = false;\n    if (ES.IsCallable(method)) {\n      var output = _call(method, '', ' \" ');\n      var quotesCount = _concat([], output.match(/\"/g)).length;\n      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\n    } else {\n      shouldOverwrite = true;\n    }\n    if (shouldOverwrite) {\n      overrideNative(String.prototype, key, stringHTMLshims[key]);\n    }\n  });\n\n  var JSONstringifiesSymbols = (function () {\n    // Microsoft Edge v0.12 stringifies Symbols incorrectly\n    if (!hasSymbols) { return false; } // Symbols are not supported\n    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\n    if (!stringify) { return false; } // JSON.stringify is not supported\n    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\n    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\n    var obj = { a: Symbol() };\n    obj[Symbol()] = true;\n    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\n    return false;\n  }());\n  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\n    // Chrome 45 throws on stringifying object symbols\n    if (!hasSymbols) { return true; } // Symbols are not supported\n    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\n  });\n  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\n    var origStringify = JSON.stringify;\n    overrideNative(JSON, 'stringify', function stringify(value) {\n      if (typeof value === 'symbol') { return; }\n      var replacer;\n      if (arguments.length > 1) {\n        replacer = arguments[1];\n      }\n      var args = [value];\n      if (!isArray(replacer)) {\n        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\n        var wrappedReplacer = function (key, val) {\n          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\n          if (typeof parsedValue !== 'symbol') {\n            if (Type.symbol(parsedValue)) {\n              return assignTo({})(parsedValue);\n            } else {\n              return parsedValue;\n            }\n          }\n        };\n        args.push(wrappedReplacer);\n      } else {\n        // create wrapped replacer that handles an array replacer?\n        args.push(replacer);\n      }\n      if (arguments.length > 2) {\n        args.push(arguments[2]);\n      }\n      return origStringify.apply(this, args);\n    });\n  }\n\n  return globals;\n}));\n",
    "apps/api/src/model/lib/factoring.provider.service.spec.ts": "import { Test } from '@nestjs/testing';\nimport {\n  SaveArgsValidationService,\n  SaveArgsValidationServiceKey,\n} from './save.args.validation.service';\nimport { UserModel } from './user.model';\nimport { BankModel } from './bank.model';\nimport { AddressServiceKey } from './address.service';\nimport { BankAccountServiceKey } from './bank.account.service';\nimport { AccountingSchemeServiceKey } from './accounting.scheme.service';\nimport { FactoringProviderService } from './factoring.provider.service';\n\nlet mockBankAccountServiceCalled = false;\n\nconst mockBankAccountService = {\n  save: x => {\n    mockBankAccountServiceCalled = true;\n    return x;\n  },\n};\nexport const mockBankAccountServiceProvider = {\n  provide: BankAccountServiceKey,\n  useValue: mockBankAccountService,\n};\nconst mockAddressService = {\n  save: x => x,\n};\nexport const mockAddressServiceProvider = {\n  provide: AddressServiceKey,\n  useValue: mockAddressService,\n};\nconst mockAccountingSchemeService = {};\nexport const mockAccountingSchemeServiceProvider = {\n  provide: AccountingSchemeServiceKey,\n  useValue: mockAccountingSchemeService,\n};\n\nconst mockEntityManager = {\n  getRepository: () => ({\n    save: x => x,\n  }),\n} as any;\n\n(global as any).moduleRef = {\n  get: () /*token*/ =>\n    /*token === SalesInvoiceServiceKey\n      ? mockSalesInvoiceService\n      :*/ new SaveArgsValidationService(),\n};\n\nconst saveArgsValidationServiceProvider = {\n  provide: SaveArgsValidationServiceKey,\n  useClass: SaveArgsValidationService,\n};\n\ndescribe('FactoringProviderService', () => {\n  let service: FactoringProviderService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [\n        FactoringProviderService,\n        mockBankAccountServiceProvider,\n        mockAddressServiceProvider,\n        saveArgsValidationServiceProvider,\n        mockAccountingSchemeServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<FactoringProviderService>(FactoringProviderService);\n  });\n\n  it('will create a new bank account if needed and set the document numbering', async () => {\n    mockBankAccountServiceCalled = false;\n    await service.save(\n      mockEntityManager,\n      {\n        displayName: '',\n        legalName: '',\n\n        newBankAccount: {\n          bank: {} as BankModel,\n          displayName: '',\n          bankAccountCustomerPrintableNumber: '',\n          iban: '',\n          swift: '',\n        },\n\n        contact: '',\n      },\n      { id: 1 } as UserModel,\n    );\n    expect(mockBankAccountServiceCalled).toBeTruthy();\n  });\n});\n",
    "apps/api/src/model/lib/base.entity.service.ts": "import { BaseModel } from './base.model';\nimport { BaseSaveArgsModel } from './base.save.args.model';\nimport { EntityManager, Repository, SelectQueryBuilder } from 'typeorm';\nimport { getService } from './module.reference.service';\nimport {\n  SaveArgsValidationService,\n  SaveArgsValidationServiceKey,\n} from './save.args.validation.service';\nimport { FindManyOptions } from 'typeorm/find-options/FindManyOptions';\nimport { FindOneOptions } from 'typeorm/find-options/FindOneOptions';\nimport { UserModel } from './user.model';\n\nexport abstract class BaseEntityService<\n  T extends BaseModel,\n  S extends BaseSaveArgsModel\n> {\n  abstract createEntity(): T;\n  protected abstract getRepository(\n    transactionalEntityManager: EntityManager,\n  ): Repository<T>;\n  protected abstract async doSave(\n    transactionalEntityManager: EntityManager,\n    args: S,\n    entity: T,\n    currentUser: UserModel,\n  ): Promise<T>;\n\n  abstract typeName(): string;\n\n  loadEntityByIdRelations(): string[] {\n    return [];\n  }\n\n  loadEntityById = async (\n    transactionalEntityManager: EntityManager,\n    id: number,\n    relations?: string[],\n  ): Promise<T> =>\n    await this.getRepository(transactionalEntityManager).findOne({\n      where: { id },\n      relations: relations || this.loadEntityByIdRelations(),\n    });\n\n  loadEntity = async (\n    transactionalEntityManager: EntityManager,\n    options: FindOneOptions<T>,\n  ): Promise<T> =>\n    await this.getRepository(transactionalEntityManager).findOne(options);\n\n  createQueryBuilder = (\n    transactionalEntityManager: EntityManager,\n    alias: string,\n  ): SelectQueryBuilder<T> =>\n    this.getRepository(transactionalEntityManager).createQueryBuilder(alias);\n\n  loadEntities = async (\n    transactionalEntityManager: EntityManager,\n    options?: FindManyOptions<T>,\n  ): Promise<Array<T>> =>\n    await this.getRepository(transactionalEntityManager).find(options);\n\n  async save(\n    transactionalEntityManager: EntityManager,\n    args: S,\n    currentUser: UserModel,\n  ): Promise<T> {\n    const saveArgsValidationService: SaveArgsValidationService = getService(\n      SaveArgsValidationServiceKey,\n    );\n\n    await saveArgsValidationService.checkIsSaveArgValid(\n      transactionalEntityManager,\n      this.typeName(),\n      args,\n    );\n\n    if (!args) throw new Error('Args must be set when saving an entity');\n    const entity = args.id\n      ? await this.loadEntityById(transactionalEntityManager, args.id)\n      : await this.createEntity();\n    (entity as any).updtOp = currentUser;\n    (entity as any).updtOpId = currentUser.id;\n    const toBeSaved = await this.doSave(\n      transactionalEntityManager,\n      args,\n      entity,\n      currentUser,\n    );\n    (toBeSaved as any).updtOp = currentUser;\n    (toBeSaved as any).updtOpId = currentUser.id;\n\n    return await this.getRepository(transactionalEntityManager).save(toBeSaved);\n  }\n  persist = async (\n    transactionalEntityManager: EntityManager,\n    t: T,\n    currentUser: UserModel,\n  ): Promise<T> => {\n    (t as any).updtOp = currentUser;\n    (t as any).updtOpId = currentUser.id;\n    return await this.getRepository(transactionalEntityManager).save(t);\n  };\n\n  delete = async (\n    transactionalEntityManager: EntityManager,\n    t: T,\n  ): Promise<void> => {\n    await this.getRepository(transactionalEntityManager).remove(t);\n  };\n  reloadEntity = async (\n    transactionalEntityManager: EntityManager,\n    entity: T,\n    relations?: string[],\n  ): Promise<T> => ({\n    ...entity,\n    ...(await this.getRepository(transactionalEntityManager).findOne({\n      where: { id: entity.id },\n      relations,\n    })),\n  });\n}\n",
    "apps/api/src/model/lib/organization.service.spec.ts": "import { Test } from '@nestjs/testing';\nimport {\n  SaveArgsValidationService,\n  SaveArgsValidationServiceKey,\n} from './save.args.validation.service';\nimport { UserModel } from './user.model';\nimport { OrganizationService } from './organization.service';\nimport { CountryModel } from './country.model';\nimport { BankModel } from './bank.model';\nimport { AddressServiceKey } from './address.service';\nimport { BankAccountServiceKey } from './bank.account.service';\nimport { AccountingSchemeServiceKey } from './accounting.scheme.service';\nimport { AccountingSchemeModel } from './accounting.scheme.model';\nimport { DocumentNumberingServiceKey } from './document.numbering.service';\n\nlet mockBankAccountServiceCalled = false;\nlet mockDocumentNumberingServiceCalled = false;\n\nconst mockDocumentNumberingService = {\n  save: x => {\n    mockDocumentNumberingServiceCalled = true;\n    return x;\n  },\n};\nexport const mockDocumentNumberingServiceProvider = {\n  provide: DocumentNumberingServiceKey,\n  useValue: mockDocumentNumberingService,\n};\n\nconst mockBankAccountService = {\n  save: x => {\n    mockBankAccountServiceCalled = true;\n    return x;\n  },\n};\nexport const mockBankAccountServiceProvider = {\n  provide: BankAccountServiceKey,\n  useValue: mockBankAccountService,\n};\nconst mockAddressService = {\n  save: x => x,\n};\nexport const mockAddressServiceProvider = {\n  provide: AddressServiceKey,\n  useValue: mockAddressService,\n};\nconst mockAccountingSchemeService = {};\nexport const mockAccountingSchemeServiceProvider = {\n  provide: AccountingSchemeServiceKey,\n  useValue: mockAccountingSchemeService,\n};\n\nconst mockEntityManager = {\n  getRepository: () => ({\n    save: x => x,\n  }),\n} as any;\n\n(global as any).moduleRef = {\n  get: () /*token*/ =>\n    /*token === SalesInvoiceServiceKey\n      ? mockSalesInvoiceService\n      :*/ new SaveArgsValidationService(),\n};\n\nconst saveArgsValidationServiceProvider = {\n  provide: SaveArgsValidationServiceKey,\n  useClass: SaveArgsValidationService,\n};\n\ndescribe('OrganizationService', () => {\n  let service: OrganizationService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [\n        OrganizationService,\n        mockBankAccountServiceProvider,\n        mockAddressServiceProvider,\n        saveArgsValidationServiceProvider,\n        mockAccountingSchemeServiceProvider,\n        mockDocumentNumberingServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<OrganizationService>(OrganizationService);\n  });\n\n  it('will create a new bank account if needed and set the document numbering', async () => {\n    mockBankAccountServiceCalled = false;\n    await service.save(\n      mockEntityManager,\n      {\n        displayName: '',\n        legalName: '',\n        legalAddress: {\n          city: '',\n          line1: '',\n          zipCode: '',\n          country: {} as CountryModel,\n        },\n\n        newBankAccount: {\n          bank: {} as BankModel,\n          displayName: '',\n          bankAccountCustomerPrintableNumber: '',\n          iban: '',\n          swift: '',\n        },\n\n        accountingScheme: {} as AccountingSchemeModel,\n\n        registration: '',\n        contact: '',\n        idNumber: '',\n        vatNumber: null,\n\n        currentInvoiceDocumentNumber: 1000,\n      },\n      { id: 1 } as UserModel,\n    );\n    expect(mockBankAccountServiceCalled).toBeTruthy();\n    expect(mockDocumentNumberingServiceCalled).toBeTruthy();\n  });\n});\n",
    "apps/api/src/model/lib/organization.service.ts": "import { Inject, Injectable } from '@nestjs/common';\nimport { BaseEntityService } from './base.entity.service';\nimport { OrganizationModel } from './organization.model';\nimport { OrganizationSaveArgsModel } from './organization.save.args.model';\nimport { EntityManager, Repository } from 'typeorm';\nimport { AddressService, AddressServiceKey } from './address.service';\nimport {\n  BankAccountService,\n  BankAccountServiceKey,\n} from './bank.account.service';\nimport {\n  AccountingSchemeService,\n  AccountingSchemeServiceKey,\n} from './accounting.scheme.service';\nimport { Organization } from '../generated/entities/Organization';\nimport { UserModel } from './user.model';\nimport {\n  DocumentNumberingService,\n  DocumentNumberingServiceKey,\n} from './document.numbering.service';\n\nexport const OrganizationServiceKey = 'OrganizationService';\n\n@Injectable()\nexport class OrganizationService extends BaseEntityService<\n  OrganizationModel,\n  OrganizationSaveArgsModel\n> {\n  typeName(): string {\n    return OrganizationServiceKey;\n  }\n  constructor(\n    @Inject(AddressServiceKey) public readonly addressService: AddressService,\n    @Inject(BankAccountServiceKey)\n    public readonly bankAccountService: BankAccountService,\n    @Inject(AccountingSchemeServiceKey)\n    public readonly accountingSchemeService: AccountingSchemeService,\n    @Inject(DocumentNumberingServiceKey)\n    public readonly documentNumberingService: DocumentNumberingService,\n  ) {\n    super();\n  }\n\n  createEntity(): OrganizationModel {\n    return new Organization();\n  }\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: OrganizationSaveArgsModel,\n    organization: OrganizationModel,\n    currentUser: UserModel,\n  ): Promise<OrganizationModel> {\n    organization.contact = args.contact;\n    organization.registration = args.registration;\n    organization.displayName = args.displayName;\n    organization.legalName = args.legalName;\n    organization.legalAddress = await this.addressService.save(\n      transactionalEntityManager,\n      args.legalAddress,\n      currentUser,\n    );\n    organization.idNumber = args.idNumber;\n\n    if (!(args.bankAccount || args.newBankAccount || args.bankAccountId)) {\n      throw new Error('Bank account not specified');\n    }\n\n    organization.bankAccount =\n      args.bankAccount ||\n      (args.bankAccountId &&\n        (await this.bankAccountService.loadEntityById(\n          transactionalEntityManager,\n          args.bankAccountId,\n        ))) ||\n      (args.newBankAccount &&\n        (await this.bankAccountService.save(\n          transactionalEntityManager,\n          args.newBankAccount,\n          currentUser,\n        )));\n    organization.accountingScheme =\n      args.accountingScheme ||\n      (await this.accountingSchemeService.loadEntityById(\n        transactionalEntityManager,\n        args.accountingSchemeId,\n      ));\n    organization.vatNumber = args.vatNumber;\n\n    const org = await this.persist(\n      transactionalEntityManager,\n      organization,\n      currentUser,\n    );\n\n    await this.documentNumberingService.save(\n      transactionalEntityManager,\n      args.currentInvoiceDocumentNumber,\n      currentUser,\n      org,\n    );\n\n    return org;\n  }\n\n  protected getRepository(\n    transactionalEntityManager: EntityManager,\n  ): Repository<OrganizationModel> {\n    return transactionalEntityManager.getRepository(Organization);\n  }\n\n  getOrg = (\n    transactionalEntityManager: EntityManager,\n    id: number | null,\n    displayName: string,\n    relations?: string[],\n  ) =>\n    id\n      ? this.loadEntityById(transactionalEntityManager, id, relations)\n      : this.getRepository(transactionalEntityManager).findOne({\n          where: { displayName },\n          relations,\n        });\n}\n",
    "node_modules/babel-runtime/node_modules/core-js/library/modules/es6.promise.js": "'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n",
    "node_modules/babel-runtime/node_modules/core-js/library/modules/_new-promise-capability.js": "'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n",
    "apps/api/src/model/lib/sales.invoice.line.service.spec.ts": "import { Test } from '@nestjs/testing';\nimport { ProductModel } from './product.model';\nimport { CustomerModel } from './customer.model';\nimport { SalesInvoiceModel } from './sales.invoice.model';\nimport { TaxServiceKey } from './tax.service';\nimport { ProductServiceKey } from './product.service';\nimport {\n  SalesInvoiceLineService,\n  SalesInvoiceServiceKey,\n} from './sales.invoice.service';\nimport {\n  SaveArgsValidationService,\n  SaveArgsValidationServiceKey,\n} from './save.args.validation.service';\nimport { UserModel } from './user.model';\nimport { CustomerGroupModel } from './customer.group.model';\nimport { CustomerPriceListServiceKey } from './customer.price.list.service';\nimport { CustomerPriceListModel } from './customer.price.list.model';\nimport { CustomerProductPriceModel } from './customer.product.price.model';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\n\nconst customerGroup1: CustomerGroupModel = {\n  id: 0,\n  displayName: 'AAA',\n  customers: [],\n};\n\nconst customer: CustomerModel = {\n  contactPersonCompanyRelations: [],\n  invoicingEmail: '',\n  idNumber: '',\n  id: 0,\n  displayName: '',\n  legalName: '',\n  legalAddress: {} as any,\n  customerGroup: customerGroup1,\n};\n\nconst invoice: SalesInvoiceModel = {\n  printLanguage: undefined,\n  reverseCharge: false,\n  paymentTermInDays: 0,\n  currencyMultiplyingRateToAccountingSchemeCurrency: 1,\n  vatReport: [{} as any],\n  isCalculated: false,\n  isDraft: false,\n  id: 0,\n  lines: [{} as any],\n  customer: customer,\n  currency: {} as any,\n  totalLines: 0,\n  transactionDate: new Date(),\n  organization: {} as any,\n  dueDate: new Date(),\n  bankAccount: {} as any,\n  printed: false,\n  issuedOn: new Date(),\n  grandTotalAccountingSchemeCurrency: 0,\n  grandTotal: 0,\n  totalLinesAccountingSchemeCurrency: 0,\n};\n\nconst product1: ProductModel = {\n  sku: '',\n  id: 1,\n  displayName: '',\n};\nconst product2: ProductModel = {\n  sku: '',\n  id: 2,\n  displayName: '',\n};\n\nconst QUANTITY = 10;\nconst PRODUCT_GROUP_PRICE = 123;\n\nconst mockTaxService = {};\nexport const mockTaxServiceProvider = {\n  provide: TaxServiceKey,\n  useValue: mockTaxService,\n};\nconst mockProductService = {};\nexport const mockProductServiceProvider = {\n  provide: ProductServiceKey,\n  useValue: mockProductService,\n};\nconst mockSalesInvoiceService = {};\nexport const mockSalesInvoiceServiceProvider = {\n  provide: SalesInvoiceServiceKey,\n  useValue: mockSalesInvoiceService,\n};\nconst customerPriceListModel: CustomerPriceListModel = {\n  id: 1,\n  displayName: '',\n  customerGroup: customerGroup1,\n  productPrices: [\n    {\n      product: product2,\n      sellingPrice: PRODUCT_GROUP_PRICE,\n    } as CustomerProductPriceModel,\n  ],\n};\n\nconst mockCustomerPriceListService = {\n  loadDateValidByCustomerGroupAndProduct: (\n    transactionalEntityManager,\n    customerGroup,\n    product,\n  ): CustomerPriceListModel[] | null =>\n    product === product2 && customerGroup === customerGroup1\n      ? [customerPriceListModel]\n      : null,\n};\nconst mockCustomerPriceListServiceProvider = {\n  provide: CustomerPriceListServiceKey,\n  useValue: mockCustomerPriceListService,\n};\n\nconst mockEntityManager = {\n  getRepository: () => ({\n    save: x => x,\n  }),\n} as any;\n\n(global as any).moduleRef = {\n  get: token => {\n    switch (token) {\n      case SalesInvoiceServiceKey:\n        return mockSalesInvoiceService;\n      default:\n        return new SaveArgsValidationService();\n    }\n  },\n};\n\nconst saveArgsValidationServiceProvider = {\n  provide: SaveArgsValidationServiceKey,\n  useClass: SaveArgsValidationService,\n};\n\ndescribe('SalesInvoiceLineService', () => {\n  let service: SalesInvoiceLineService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [\n        SalesInvoiceLineService,\n        mockTaxServiceProvider,\n        mockProductServiceProvider,\n        mockSalesInvoiceServiceProvider,\n        saveArgsValidationServiceProvider,\n        mockCustomerPriceListServiceProvider,\n      ],\n    }).compile();\n\n    service = app.get<SalesInvoiceLineService>(SalesInvoiceLineService);\n  });\n\n  it('line price is taken from the linePrice field (no calculation yet)', async () => {\n    const line = await service.save(\n      mockEntityManager,\n      {\n        narration: '',\n        linePrice: 2 * QUANTITY,\n        invoice,\n        lineOrder: 0,\n        quantity: QUANTITY,\n        lineTax: {} as any,\n        product: product1,\n      },\n      { id: 1 } as UserModel,\n    );\n    expect(line.linePrice).toBe(2 * QUANTITY);\n  });\n\n  it('line price is taken from the customer group price list if that exists', async () => {\n    customerPriceListModel.validTo = null;\n    customerPriceListModel.validFrom = null;\n    const line = await service.save(\n      mockEntityManager,\n      {\n        narration: '',\n        linePrice: 2 * QUANTITY,\n        invoice,\n        lineOrder: 0,\n        quantity: QUANTITY,\n        lineTax: {} as any,\n        product: product2,\n      },\n      { id: 1 } as UserModel,\n    );\n    expect(line.linePrice).toBe(PRODUCT_GROUP_PRICE * QUANTITY);\n  });\n\n  it('line price is taken from the customer group price list if that exists and is valid', async () => {\n    customerPriceListModel.validTo = null;\n    customerPriceListModel.validFrom = moment()\n      .add(1, 'days')\n      .toDate();\n    const line = await service.save(\n      mockEntityManager,\n      {\n        narration: '',\n        linePrice: 2 * QUANTITY,\n        invoice,\n        lineOrder: 0,\n        quantity: QUANTITY,\n        lineTax: {} as any,\n        product: product2,\n      },\n      { id: 1 } as UserModel,\n    );\n    expect(line.linePrice).not.toBe(PRODUCT_GROUP_PRICE * QUANTITY);\n  });\n\n  it('line price is taken from the customer group price list that is with the newest start', async () => {\n    customerPriceListModel.validTo = null;\n    customerPriceListModel.validFrom = null;\n    const customerPriceListModel2: CustomerPriceListModel = _.cloneDeep(\n      customerPriceListModel,\n    );\n    customerPriceListModel2.validFrom = moment()\n      .add(-1, 'days')\n      .toDate();\n    customerPriceListModel2.productPrices[0].sellingPrice =\n      PRODUCT_GROUP_PRICE / 2;\n    const remember =\n      mockCustomerPriceListService.loadDateValidByCustomerGroupAndProduct;\n    mockCustomerPriceListService.loadDateValidByCustomerGroupAndProduct = (\n      transactionalEntityManager,\n      customerGroup,\n      product,\n    ): CustomerPriceListModel[] | null =>\n      product === product2 && customerGroup === customerGroup1\n        ? [customerPriceListModel, customerPriceListModel2]\n        : null;\n    try {\n      const line = await service.save(\n        mockEntityManager,\n        {\n          narration: '',\n          linePrice: 2 * QUANTITY,\n          invoice,\n          lineOrder: 0,\n          quantity: QUANTITY,\n          lineTax: {} as any,\n          product: product2,\n        },\n        { id: 1 } as UserModel,\n      );\n      expect(line.linePrice).toBe((PRODUCT_GROUP_PRICE / 2) * QUANTITY);\n    } finally {\n      mockCustomerPriceListService.loadDateValidByCustomerGroupAndProduct = remember;\n    }\n  });\n});\n",
    "apps/api/src/model/lib/sales.invoice.service.spec.ts": "import { Test } from '@nestjs/testing';\n\nimport * as _ from 'lodash';\nimport { EntityManager } from 'typeorm';\nimport { TaxServiceKey } from './tax.service';\nimport { ProductServiceKey } from './product.service';\nimport {\n  SalesInvoiceLineServiceKey,\n  SalesInvoiceService,\n} from './sales.invoice.service';\nimport { BankAccountServiceKey } from './bank.account.service';\nimport { CustomerServiceKey } from './customer.service';\nimport { OrganizationServiceKey } from './organization.service';\nimport { CurrencyServiceKey } from './currency.service';\nimport { ReportsServiceKey } from './reports.service';\nimport { LanguagesServiceKey } from './languages.service';\nimport { CurrencyModel } from './currency.model';\nimport { CurrencyRateServiceKey } from './currency.rate.service';\nimport { SalesInvoiceVatServiceKey } from './sales.invoice.vat.service';\nimport { DocumentNumberingServiceKey } from './document.numbering.service';\nimport {\n  SaveArgsValidationService,\n  SaveArgsValidationServiceKey,\n} from './save.args.validation.service';\nimport { TaxModel } from './tax.model';\nimport { SalesInvoiceLineModel } from './sales.invoice.line.model';\nimport { SalesInvoice } from '../generated/entities/SalesInvoice';\nimport { FactoringContractServiceKey } from './factoring.contract.service';\nimport { FactoringProviderServiceKey } from './factoring.provider.service';\nimport { FactoringContractModel } from './factoring.contract.model';\nimport { MailServiceKey } from './mail.service';\nimport { AttachmentServiceKey } from './attachment.service';\nimport { XmlService, XmlServiceKey } from './xml.service';\n\nconst mockTaxService = {\n  getZeroTax: () => ({}),\n};\nexport const mockTaxServiceProvider = {\n  provide: TaxServiceKey,\n  useValue: mockTaxService,\n};\nconst mockProductService = {};\nexport const mockProductServiceProvider = {\n  provide: ProductServiceKey,\n  useValue: mockProductService,\n};\nconst mockSalesInvoiceLineService = {\n  save: x => x,\n};\nexport const mockSalesInvoiceLineServiceProvider = {\n  provide: SalesInvoiceLineServiceKey,\n  useValue: mockSalesInvoiceLineService,\n};\nconst mockBankAccountService = {};\nexport const mockBankAccountServiceProvider = {\n  provide: BankAccountServiceKey,\n  useValue: mockBankAccountService,\n};\nconst mockCustomerService = {\n  getCustomer: () => ({ legalAddress: { country: { isoCode: 'undefined' } } }),\n};\nexport const mockCustomerServiceProvider = {\n  provide: CustomerServiceKey,\n  useValue: mockCustomerService,\n};\nconst mockOrganizationService = {\n  loadEntities: () => [\n    { id: 1, displayName: 'NUCZ' },\n    { id: 2, displayName: 'ABCD' },\n  ],\n  getOrg: () => ({ legalAddress: { country: { isoCode: 'undefined' } } }),\n};\nexport const mockOrganizationServiceProvider = {\n  provide: OrganizationServiceKey,\n  useValue: mockOrganizationService,\n};\nconst mockCurrencyService = {\n  getCurrency: () => ({}),\n};\nexport const mockCurrencyServiceProvider = {\n  provide: CurrencyServiceKey,\n  useValue: mockCurrencyService,\n};\nconst mockReportsService = {\n  printSalesInvoice: () => {\n    /* intentionally left blank */\n  },\n};\nexport const mockReportsServiceProvider = {\n  provide: ReportsServiceKey,\n  useValue: mockReportsService,\n};\nconst mockLanguagesService = {\n  loadEntities: () => [{ isoCode: 'undefined' }],\n};\nexport const mockLanguagesServiceProvider = {\n  provide: LanguagesServiceKey,\n  useValue: mockLanguagesService,\n};\nconst mockCurrencyRateService = {\n  rate: 1,\n  getAccountingForDateAndOrg: (\n    transactionalEntityManager: EntityManager,\n    transactionDate: Date,\n    from: CurrencyModel,\n  ) => ({\n    id: 0,\n    displayName: '',\n    currencyMultiplyingRate: mockCurrencyRateService.rate,\n    from,\n    to: from,\n    start: transactionDate,\n    end: transactionDate,\n  }),\n  save: () => {\n    /* intentionally left blank */\n  },\n};\nexport const mockCurrencyRateServiceProvider = {\n  provide: CurrencyRateServiceKey,\n  useValue: mockCurrencyRateService,\n};\nconst mockSalesInvoiceVatService = {\n  save: (transactionalEntityManager, entity) => entity,\n};\nexport const mockSalesInvoiceVatServiceProvider = {\n  provide: SalesInvoiceVatServiceKey,\n  useValue: mockSalesInvoiceVatService,\n};\nconst mockDocumentNumberingService = {\n  getNextDocumentNumber: () => 1,\n};\nexport const mockDocumentNumberingServiceProvider = {\n  provide: DocumentNumberingServiceKey,\n  useValue: mockDocumentNumberingService,\n};\nconst saveArgsValidationServiceProvider = {\n  provide: SaveArgsValidationServiceKey,\n  useClass: SaveArgsValidationService,\n  useValue: new SaveArgsValidationService(),\n};\nconst mockFactoringProvider = {\n  bankAccount: {\n    id: 8798,\n  },\n};\nconst mockFactoringContract: FactoringContractModel = {\n  id: 1,\n  isActive: true,\n  factoringProvider: mockFactoringProvider as any,\n  customer: {} as any,\n  organization: {} as any,\n  invoicePrintNote: 'this should be printed',\n};\nconst mockFactoringContractService = {\n  getFactoringContract: (_e, _o, provider) => ({\n    ...mockFactoringContract,\n    isActive: provider.id === 1,\n  }),\n};\nexport const mockFactoringContractServiceProvider = {\n  provide: FactoringContractServiceKey,\n  useValue: mockFactoringContractService,\n};\nconst mockFactoringProviderService = {\n  loadEntityById: (_manager, id) => ({ ...mockFactoringProvider, id }),\n};\nexport const mockFactoringProviderServiceProvider = {\n  provide: FactoringProviderServiceKey,\n  useValue: mockFactoringProviderService,\n};\nconst mockMailService = {};\nexport const mockMailServiceProvider = {\n  provide: MailServiceKey,\n  useValue: mockMailService,\n};\nconst mockAttachmentService = {};\nexport const mockAttachmentServiceProvider = {\n  provide: AttachmentServiceKey,\n  useValue: mockAttachmentService,\n};\nexport const xmlServiceProvider = {\n  provide: XmlServiceKey,\n  useValue: new XmlService(),\n};\n\nconst mockSalesInvoice = {\n  isDraft: true,\n  lines: [],\n  customer: {\n    legalAddress: {\n      country: {\n        isoCode: 'undefined',\n      },\n    },\n  },\n  organization: {\n    legalAddress: {\n      country: {\n        isoCode: 'undefined',\n      },\n    },\n    bankAccount: {\n      id: 18,\n    },\n  },\n  currency: {},\n  factoringProviderId: 2,\n  vatReport: [\n    {\n      vatRatePercent: 10,\n      vatTotalRaw: 100,\n      vatTotalAccountingSchemeCurrencyRaw: 100,\n      vatTotal: 100,\n      vatTotalAccountingSchemeCurrency: 100,\n    },\n  ],\n} as any;\n\nconst mockEntityManager = {\n  getRepository: () => ({\n    save: x => x,\n    findOne: () => mockSalesInvoice,\n  }),\n} as any;\n\nconst providers = [\n  SalesInvoiceService,\n  mockTaxServiceProvider,\n  mockProductServiceProvider,\n  mockSalesInvoiceLineServiceProvider,\n  mockBankAccountServiceProvider,\n  mockCustomerServiceProvider,\n  mockOrganizationServiceProvider,\n  mockCurrencyServiceProvider,\n  mockReportsServiceProvider,\n  mockLanguagesServiceProvider,\n  mockCurrencyRateServiceProvider,\n  mockSalesInvoiceVatServiceProvider,\n  mockDocumentNumberingServiceProvider,\n  saveArgsValidationServiceProvider,\n  mockFactoringContractServiceProvider,\n  mockFactoringProviderServiceProvider,\n  mockMailServiceProvider,\n  mockAttachmentServiceProvider,\n  xmlServiceProvider,\n];\n\n(global as any).moduleRef = {\n  get: (typeOrToken: string) => {\n    const found = providers.find(x => (x as any).provide === typeOrToken);\n    if (found) {\n      const val = (found as any).useValue;\n      if (val) return val;\n    }\n    return mockSalesInvoiceLineService;\n  },\n};\n\ndescribe('SalesInvoiceService', () => {\n  let service: SalesInvoiceService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers,\n    }).compile();\n\n    service = app.get<SalesInvoiceService>(SalesInvoiceService);\n  });\n\n  const tax1: TaxModel = {\n    id: 0,\n    displayName: null,\n    ratePercent: 10,\n    isStandard: false,\n  };\n  const tax2 = {\n    id: 0,\n    displayName: null,\n    ratePercent: 18.5,\n    isStandard: false,\n  };\n  const tax3 = {\n    id: 0,\n    displayName: null,\n    ratePercent: 21,\n    isStandard: false,\n  };\n\n  describe('SalesInvoiceService', () => {\n    it('calculatePrices nothing returns null', async () => {\n      const result = await service.calculatePrices(null, null, null);\n      expect(result).toBeNull();\n    });\n    it('calculatePrices somelines return correct', async () => {\n      const lines: Array<SalesInvoiceLineModel> = [\n        {\n          linePrice: 1000,\n          lineTax: tax1,\n          product: null,\n          quantity: 0,\n          narration: null,\n          id: 1,\n          lineOrder: 1,\n          invoice: null,\n        },\n        {\n          linePrice: 10,\n          lineTax: tax2,\n          product: null,\n          quantity: 0,\n          narration: null,\n          id: 2,\n          lineOrder: 2,\n          invoice: null,\n        },\n      ];\n      const invoice = new SalesInvoice();\n      invoice.lines = lines;\n      invoice.organization = { vatNumber: 'ABC' } as any;\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines;\n      expect(resultLines).not.toBeNull();\n      expect(resultLines.length).toBe(lines.length);\n      expect(result.grandTotal).toBe(1111.85);\n      expect(result.totalLines).toBe(1010);\n      const vatReport = result.vatReport;\n      expect(vatReport).not.toBeUndefined();\n      expect(vatReport).not.toBeNull();\n      expect(vatReport.length).toBe(2);\n      expect(\n        _.round(\n          _.sum(vatReport.map(x => x.vatTotalAccountingSchemeCurrency)),\n          2,\n        ),\n      ).toBe(_.round(1111.85 - 1010, 2));\n    });\n    it('calculatePrices should round correctly', async () => {\n      const lines = [\n        {\n          linePrice: 0.5,\n          lineTax: tax1,\n          product: null,\n          quantity: 0,\n          narration: null,\n          lineOrder: 1,\n          id: 1,\n          invoice: null,\n        },\n        {\n          linePrice: 0.1,\n          lineTax: tax2,\n          product: null,\n          quantity: 0,\n          narration: null,\n          lineOrder: 2,\n          id: 2,\n          invoice: null,\n        },\n      ];\n      const invoice = new SalesInvoice();\n      invoice.lines = lines;\n      invoice.organization = { vatNumber: 'ABC' } as any;\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 1;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines;\n      expect(resultLines).not.toBeNull();\n      expect(resultLines.length).toBe(lines.length);\n      expect(result.grandTotal).toBe(0.67);\n      expect(result.totalLines).toBe(0.6);\n      const vatReport = result.vatReport;\n      expect(vatReport.length).toBe(2);\n      expect(\n        _.round(\n          _.sum(vatReport.map(x => x.vatTotalAccountingSchemeCurrency)),\n          2,\n        ),\n      ).toBe(_.round(0.67 - 0.6, 2));\n    });\n    it('calculatePrices should work with the currency rate correctly', async () => {\n      const lines = [\n        {\n          linePrice: 45.0,\n          lineTax: tax3,\n          product: null,\n          quantity: 0,\n          narration: null,\n          lineOrder: 1,\n          id: 1,\n          invoice: null,\n        },\n      ];\n      const invoice = new SalesInvoice();\n      invoice.lines = lines;\n      invoice.organization = { vatNumber: 'ABC' } as any;\n      invoice.lines.forEach(x => (x.invoice = invoice));\n      mockCurrencyRateService.rate = 24.29;\n      const result = await service.calculatePrices(null, invoice, null);\n      expect(result).not.toBeUndefined();\n      expect(result).not.toBeNull();\n      const resultLines = result.lines;\n      expect(resultLines).not.toBeNull();\n      expect(resultLines.length).toBe(lines.length);\n      expect(result.grandTotal).toBe(54.45);\n      expect(result.totalLines).toBe(45);\n      const vatReport = result.vatReport;\n      expect(vatReport.length).toBe(1);\n      expect(vatReport[0].vatRatePercent).toBe((await tax3).ratePercent);\n      expect(vatReport[0].vatTotalAccountingSchemeCurrency).toBe(229.54);\n    });\n\n    it('bankAccount and printNote should be taken from the valid factoring provider and should not be taken from an invalid factoring provider', async () => {\n      const result = await service.save(\n        mockEntityManager,\n        {\n          lines: [],\n          customer: {\n            legalAddress: {\n              country: {\n                isoCode: 'undefined',\n              },\n            },\n          },\n          organization: {\n            legalAddress: {\n              country: {\n                isoCode: 'undefined',\n              },\n            },\n            bankAccount: {},\n          },\n          currency: {},\n          factoringProviderId: 1,\n        } as any,\n        { id: 1 } as any,\n      );\n      expect(result.printNote).toEqual(mockFactoringContract.invoicePrintNote);\n      expect(result.bankAccount).toEqual(mockFactoringProvider.bankAccount);\n    });\n    it('bankAccount and printNote should not be taken from an invalid factoring provider', async () => {\n      const args = {\n        lines: [],\n        customer: {\n          legalAddress: {\n            country: {\n              isoCode: 'undefined',\n            },\n          },\n        },\n        organization: {\n          legalAddress: {\n            country: {\n              isoCode: 'undefined',\n            },\n          },\n          bankAccount: {\n            id: 18,\n          },\n        },\n        currency: {},\n        factoringProviderId: 2,\n      } as any;\n      const result = await service.save(mockEntityManager, args, {\n        id: 1,\n      } as any);\n      expect(result.printNote).toBeNull();\n      expect(result.bankAccount).toEqual(args.organization.bankAccount);\n    });\n\n    it('duplicate creates a draft', async () => {\n      const result = await service.duplicate(mockEntityManager, 1, {\n        id: 1,\n      } as any);\n      expect(result.isDraft).toBeTruthy();\n    });\n\n    it('export to XML should work', async () => {\n      const args = {\n        lines: [],\n        customer: {\n          legalAddress: {\n            country: {\n              isoCode: 'undefined',\n            },\n          },\n        },\n        organization: {\n          legalAddress: {\n            country: {\n              isoCode: 'undefined',\n            },\n          },\n          bankAccount: {\n            id: 18,\n          },\n        },\n        currency: {},\n        vatReport: [\n          {\n            vatRatePercent: 10,\n            vatTotalRaw: 100,\n            vatTotalAccountingSchemeCurrencyRaw: 100,\n            vatTotal: 100,\n            vatTotalAccountingSchemeCurrency: 100,\n          },\n        ],\n        factoringProviderId: 2,\n        totalLinesAccountingSchemeCurrency: 1000,\n      } as any;\n      const result = await service.save(mockEntityManager, args, {\n        id: 1,\n      } as any);\n      const xml = service.exportToXml({\n        ...result,\n        vatReport: args.vatReport,\n        totalLinesAccountingSchemeCurrency:\n          args.totalLinesAccountingSchemeCurrency,\n      });\n      expect(xml).toContain('<rsm:CrossIndustryInvoice');\n      expect(xml).toContain('rn:factur-x.eu:1p0:minimum');\n    });\n  });\n});\n",
    "apps/api/src/model/lib/sales.invoice.service.ts": "import { SalesInvoiceModel } from './sales.invoice.model';\nimport { SalesInvoiceSaveArgsModel } from './sales.invoice.save.args.model';\nimport { EntityManager, Repository } from 'typeorm';\nimport {\n  BankAccountService,\n  BankAccountServiceKey,\n} from './bank.account.service';\nimport { CustomerService, CustomerServiceKey } from './customer.service';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { CurrencyService, CurrencyServiceKey } from './currency.service';\nimport { TaxService, TaxServiceKey } from './tax.service';\nimport { ReportsService, ReportsServiceKey } from './reports.service';\nimport { LanguagesService, LanguagesServiceKey } from './languages.service';\nimport {\n  CurrencyRateService,\n  CurrencyRateServiceKey,\n} from './currency.rate.service';\nimport * as _ from 'lodash';\nimport { SalesInvoiceVatModel } from './sales.invoice.vat.model';\nimport {\n  SalesInvoiceVatService,\n  SalesInvoiceVatServiceKey,\n} from './sales.invoice.vat.service';\nimport {\n  DocumentNumberingService,\n  DocumentNumberingServiceKey,\n} from './document.numbering.service';\nimport { BaseEntityService } from './base.entity.service';\nimport {\n  OrganizationService,\n  OrganizationServiceKey,\n} from './organization.service';\nimport { getService } from './module.reference.service';\nimport { SalesInvoiceLineModel } from './sales.invoice.line.model';\nimport { SalesInvoiceLineSaveArgsModel } from './sales.invoice.line.save.args.model';\nimport { ProductService, ProductServiceKey } from './product.service';\nimport { OrganizationModel } from './organization.model';\nimport { SalesInvoiceLine } from '../generated/entities/SalesInvoiceLine';\nimport { SalesInvoice } from '../generated/entities/SalesInvoice';\nimport { UserModel } from './user.model';\nimport { SalesInvoiceMonthlySaveArgsModel } from './sales.invoice.monthly.save.args.model';\nimport {\n  CustomerPriceListService,\n  CustomerPriceListServiceKey,\n} from './customer.price.list.service';\nimport { CustomerProductPriceModel } from './customer.product.price.model';\nimport {\n  FactoringContractService,\n  FactoringContractServiceKey,\n} from './factoring.contract.service';\nimport {\n  FactoringProviderService,\n  FactoringProviderServiceKey,\n} from './factoring.provider.service';\nimport { SalesInvoicePublishArgsModel } from './sales.invoice.vat.save.args.model';\nimport { MailAttachment, MailService, MailServiceKey } from './mail.service';\nimport { AttachmentService, AttachmentServiceKey } from './attachment.service';\nimport { CrossIndustryInvoiceType } from '../../../../../libs/ZUGFeRD-Factur-X/generated';\nimport {\n  DocumentContextParameterType,\n  ExchangedDocumentContextType,\n  ExchangedDocumentType,\n  HeaderTradeAgreementType,\n  HeaderTradeDeliveryType,\n  HeaderTradeSettlementType,\n  SupplyChainTradeTransactionType,\n  TradePartyType,\n  TradeSettlementHeaderMonetarySummationType,\n} from '../../../../../libs/ZUGFeRD-Factur-X/generated/ReusableAggregateBusinessInformationEntity_100';\nimport moment = require('moment');\nimport {\n  AmountType,\n  DateTimeType,\n  IDType,\n  TextType,\n} from '../../../../../libs/ZUGFeRD-Factur-X/generated/UnqualifiedDataType_100';\nimport { XmlService, XmlServiceKey } from './xml.service';\nimport {\n  CurrencyCodeType,\n  DocumentCodeType,\n} from '../../../../../libs/ZUGFeRD-Factur-X/generated/QualifiedDataType_100';\n\nexport const SalesInvoiceServiceKey = 'SalesInvoiceService';\n\nexport const SalesInvoiceLineServiceKey = 'SalesInvoiceLineService';\n\ntype LineCalculatedTax = {\n  vatRatePercent: number;\n  vatTotal: number;\n  vatTotalAccountingSchemeCurrency: number;\n};\n\n@Injectable()\nexport class SalesInvoiceLineService extends BaseEntityService<\n  SalesInvoiceLineModel,\n  SalesInvoiceLineSaveArgsModel\n> {\n  salesInvoiceService: SalesInvoiceService;\n\n  createEntity(): SalesInvoiceLineModel {\n    return new SalesInvoiceLine();\n  }\n\n  protected getRepository(\n    transactionalEntityManager,\n  ): Repository<SalesInvoiceLineModel> {\n    return transactionalEntityManager.getRepository(SalesInvoiceLine);\n  }\n\n  constructor(\n    @Inject(TaxServiceKey) public readonly taxService: TaxService,\n    @Inject(ProductServiceKey) public readonly productService: ProductService,\n    @Inject(CustomerPriceListServiceKey)\n    public readonly customerPriceListService: CustomerPriceListService,\n  ) {\n    super();\n    this.salesInvoiceService = getService<SalesInvoiceService>(\n      SalesInvoiceServiceKey,\n    );\n  }\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: SalesInvoiceLineSaveArgsModel,\n    line: SalesInvoiceLineModel,\n  ): Promise<SalesInvoiceLineModel> {\n    line.lineTax =\n      args.lineTax ||\n      (args.lineTaxIsStandard\n        ? await this.taxService.getStandardTax(transactionalEntityManager)\n        : await this.taxService.loadEntityById(\n            transactionalEntityManager,\n            args.lineTaxId,\n          ));\n    line.product =\n      args.product ||\n      (args.productSku\n        ? await this.productService.getProduct(\n            transactionalEntityManager,\n            args.productSku,\n          )\n        : await this.productService.loadEntityById(\n            transactionalEntityManager,\n            args.productId,\n          ));\n    line.lineOrder = args.lineOrder;\n\n    const invoice =\n      args.invoice ||\n      (await this.salesInvoiceService.loadEntityById(\n        transactionalEntityManager,\n        args.invoiceId,\n      ));\n    line.invoice = invoice;\n\n    const customer = invoice.customer;\n    const customerGroup = customer.customerGroup;\n    const now = new Date();\n    const customerPriceListModels = customerGroup\n      ? (\n          await this.customerPriceListService.loadDateValidByCustomerGroupAndProduct(\n            transactionalEntityManager,\n            customerGroup,\n            line.product,\n          )\n        )?.filter(\n          x =>\n            (!x.validFrom || x.validFrom < now) &&\n            (!x.validTo || x.validTo > now),\n        )\n      : null;\n    if (customerPriceListModels) {\n      customerPriceListModels.sort((a, b) => {\n        if (!a.validFrom || a.validFrom < b.validFrom) {\n          return 1;\n        }\n        if (!b.validFrom || a.validFrom > b.validFrom) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n\n    const customerProductPriceModel: CustomerProductPriceModel =\n      customerPriceListModels && customerPriceListModels.length > 0\n        ? customerPriceListModels[0].productPrices.find(\n            x => x.product.id === line.product.id,\n          )\n        : null;\n\n    line.linePrice = customerProductPriceModel\n      ? customerProductPriceModel.sellingPrice * args.quantity\n      : args.linePrice;\n    line.quantity = args.quantity;\n    line.narration = args.narration;\n\n    return line;\n  }\n\n  typeName(): string {\n    return SalesInvoiceLineServiceKey;\n  }\n}\n\n@Injectable()\nexport class SalesInvoiceService extends BaseEntityService<\n  SalesInvoiceModel,\n  SalesInvoiceSaveArgsModel\n> {\n  salesInvoiceLineService: SalesInvoiceLineService;\n  reportsService: ReportsService;\n\n  constructor(\n    @Inject(BankAccountServiceKey)\n    protected readonly bankAccountService: BankAccountService,\n    @Inject(CustomerServiceKey)\n    protected readonly customerService: CustomerService,\n    @Inject(OrganizationServiceKey)\n    protected readonly organizationService: OrganizationService,\n    @Inject(CurrencyServiceKey)\n    protected readonly currencyService: CurrencyService,\n    @Inject(TaxServiceKey) protected readonly taxService: TaxService,\n    @Inject(LanguagesServiceKey)\n    protected readonly languagesService: LanguagesService,\n    @Inject(CurrencyRateServiceKey)\n    protected readonly currencyRateService: CurrencyRateService,\n    @Inject(SalesInvoiceVatServiceKey)\n    protected readonly salesInvoiceVatService: SalesInvoiceVatService,\n    @Inject(DocumentNumberingServiceKey)\n    protected readonly documentNumberingServiceModel: DocumentNumberingService,\n    @Inject(FactoringContractServiceKey)\n    protected readonly factoringContractService: FactoringContractService,\n    @Inject(FactoringProviderServiceKey)\n    protected readonly factoringProviderService: FactoringProviderService,\n    @Inject(MailServiceKey) public readonly mailService: MailService,\n    @Inject(AttachmentServiceKey)\n    public readonly attachmentService: AttachmentService,\n    @Inject(XmlServiceKey)\n    public readonly xmlService: XmlService,\n  ) {\n    super();\n    this.salesInvoiceLineService = getService<SalesInvoiceLineService>(\n      SalesInvoiceLineServiceKey,\n    );\n    this.reportsService = getService<ReportsService>(ReportsServiceKey);\n  }\n\n  createEntity(): SalesInvoiceModel {\n    const result = new SalesInvoice();\n    result.isDraft = true;\n    return result;\n  }\n\n  protected async getOrganization(\n    transactionalEntityManager: EntityManager,\n    args: SalesInvoiceSaveArgsModel,\n  ): Promise<OrganizationModel> {\n    return (\n      (args.organization &&\n        args.organization.legalAddress &&\n        args.organization.legalAddress.country &&\n        args.organization.bankAccount &&\n        args.organization) ||\n      (await this.organizationService.getOrg(\n        transactionalEntityManager,\n        args.organizationId,\n        args.organizationDisplayName || args.organization?.displayName,\n        [\n          'legalAddress',\n          'legalAddress.country',\n          'bankAccount',\n          'accountingScheme',\n          'accountingScheme.currency',\n        ],\n      ))\n    );\n  }\n\n  protected getRepository(\n    transactionalEntityManager,\n  ): Repository<SalesInvoiceModel> {\n    return transactionalEntityManager.getRepository(SalesInvoice);\n  }\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: SalesInvoiceSaveArgsModel,\n    invoice: SalesInvoiceModel,\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> {\n    if (!invoice.isDraft) throw new Error('Cannot modify an approved invoice');\n\n    invoice.customer =\n      (args.customer &&\n        args.customer.legalAddress &&\n        args.customer.legalAddress.country &&\n        args.customer) ||\n      (await this.customerService.getCustomer(\n        transactionalEntityManager,\n        args.customerId,\n        args.customerDisplayName || args.customer?.displayName,\n        ['legalAddress', 'legalAddress.country'],\n      ));\n    const organization = await this.getOrganization(\n      transactionalEntityManager,\n      args,\n    );\n\n    const factoringProvider = args.factoringProviderId\n      ? await this.factoringProviderService.loadEntityById(\n          transactionalEntityManager,\n          args.factoringProviderId,\n        )\n      : null;\n\n    const factoringContract = args.factoringProviderId\n      ? await this.factoringContractService.getFactoringContract(\n          transactionalEntityManager,\n          organization,\n          factoringProvider,\n          invoice.customer,\n        )\n      : null;\n    invoice.factoringProvider = factoringContract ? factoringProvider : null;\n\n    invoice.organization = organization;\n    invoice.bankAccount =\n      factoringContract && factoringContract.isActive\n        ? factoringContract.factoringProvider.bankAccount\n        : organization.bankAccount;\n    invoice.printNote =\n      factoringContract && factoringContract.isActive\n        ? factoringContract.invoicePrintNote\n        : null;\n    invoice.issuedOn = moment(args.issuedOn)\n      .startOf('day')\n      .toDate();\n    invoice.dueDate = moment(\n      new Date(+invoice.issuedOn + args.paymentTermInDays * 86400000),\n    )\n      .startOf('day')\n      .toDate();\n    invoice.grandTotal = 0;\n    invoice.grandTotalAccountingSchemeCurrency = 0;\n    invoice.totalLines = 0;\n    invoice.totalLinesAccountingSchemeCurrency = 0;\n    invoice.transactionDate = args.transactionDate;\n    invoice.paymentTermInDays = args.paymentTermInDays;\n    invoice.currency = args.currency\n      ? args.currency\n      : await this.currencyService.getCurrency(\n          transactionalEntityManager,\n          args.currencyIsoCode,\n          args.currencyId,\n        );\n    invoice.currencyMultiplyingRateToAccountingSchemeCurrency = 0;\n    invoice.isDraft = true;\n    invoice.isCalculated = false;\n    // TODO: implement also other reverse charge conditions\n    // see e.g. https://europa.eu/youreurope/business/taxation/vat/cross-border-vat/index_en.htm\n    // or https://www.uctovani.net/clanek.php?t=Preneseni-danove-povinnosti-neboli-reverse-charge&idc=217\n    const customerCountry = invoice.customer.legalAddress.country;\n    const supplierCountry = organization.legalAddress.country;\n    invoice.reverseCharge =\n      customerCountry.isEUMember &&\n      supplierCountry.isEUMember &&\n      customerCountry.isoCode !== supplierCountry.isoCode;\n\n    // TODO: get better printLanguage implementation\n    const languages = await this.languagesService.loadEntities(\n      transactionalEntityManager,\n    );\n    const language =\n      customerCountry.isoCode === supplierCountry.isoCode\n        ? languages.find(\n            x =>\n              x.isoCode.toLowerCase() === customerCountry.isoCode.toLowerCase(),\n          )\n        : languages.find(\n            x =>\n              x.isoCode.toLowerCase() ===\n              `${supplierCountry.isoCode}-${customerCountry.isoCode}`.toLowerCase(),\n          );\n    if (!language)\n      throw new Error(\n        `No language for ${supplierCountry.isoCode} -> ${customerCountry.isoCode}`,\n      );\n    invoice.printLanguage = language;\n\n    await this.persist(transactionalEntityManager, invoice, currentUser);\n\n    const vatRegistered = !!organization.vatNumber;\n\n    let lineOrder = 10;\n    const invoiceLines = [];\n    for (const line1 of args.lines) {\n      const line = await this.salesInvoiceLineService.save(\n        transactionalEntityManager,\n        {\n          ...line1,\n          product: line1.product,\n          lineTax:\n            vatRegistered && !invoice.reverseCharge\n              ? line1.lineTax\n              : await this.taxService.getZeroTax(transactionalEntityManager),\n          invoice,\n          lineOrder,\n        },\n        currentUser,\n      );\n      lineOrder += 10;\n      invoiceLines.push(line);\n    }\n    invoice.lines = invoiceLines;\n\n    const result = await this.calculatePrices(\n      transactionalEntityManager,\n      invoice,\n      currentUser,\n    );\n\n    await this.reportsService.printSalesInvoice(result, result.printLanguage);\n\n    return result;\n  }\n\n  typeName(): string {\n    return SalesInvoiceServiceKey;\n  }\n\n  async calculatePrices(\n    transactionalEntityManager: EntityManager,\n    invoiceWithLines: SalesInvoiceModel,\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> {\n    if (!invoiceWithLines) return invoiceWithLines;\n\n    const currencyRate = await this.currencyRateService.getAccountingForDateAndOrg(\n      transactionalEntityManager,\n      invoiceWithLines.transactionDate,\n      invoiceWithLines.currency,\n      invoiceWithLines.organization,\n    );\n    if (!currencyRate)\n      throw new Error(\n        `No currency rate for ${invoiceWithLines.currency.displayName} at ${invoiceWithLines.transactionDate}`,\n      );\n    const currencyMultiplyingRateToAccountingSchemeCurrency: number =\n      currencyRate.currencyMultiplyingRate;\n    const lines = invoiceWithLines.lines;\n\n    invoiceWithLines.totalLines = 0;\n    invoiceWithLines.grandTotal = 0;\n    const org = await invoiceWithLines.organization;\n    const vatRegistered = !!org.vatNumber;\n    const lineCalculatedTaxes = [];\n    if (lines) {\n      for (const line of lines) {\n        if (vatRegistered && !line.lineTax)\n          throw new Error('Vat registered and no line tax');\n\n        // make sure we work with number, so do not use +=\n        invoiceWithLines.totalLines =\n          +invoiceWithLines.totalLines + line.linePrice;\n        const lineTax = line.lineTax;\n        const vatTotal = vatRegistered\n          ? +line.linePrice * (+lineTax.ratePercent / 100)\n          : 0;\n\n        const lineCalculatedTax = {\n          vatRatePercent: vatRegistered ? lineTax.ratePercent : 0,\n          vatTotal,\n          vatTotalAccountingSchemeCurrency:\n            vatTotal * currencyMultiplyingRateToAccountingSchemeCurrency,\n        };\n        lineCalculatedTaxes.push(lineCalculatedTax);\n        // make sure we work with number, so do not use +=\n        invoiceWithLines.grandTotal =\n          +invoiceWithLines.grandTotal +\n          line.linePrice +\n          lineCalculatedTax.vatTotal;\n      }\n    }\n    const taxes = _.groupBy(lineCalculatedTaxes, x => x.vatRatePercent);\n    const vatReport: SalesInvoiceVatModel[] = [];\n\n    // remove the old invoiceWithLines.vatReport\n    const oldVatReports = invoiceWithLines.vatReport;\n    if (oldVatReports) {\n      for (const oldVatReport of oldVatReports) {\n        await this.salesInvoiceVatService.delete(\n          transactionalEntityManager,\n          oldVatReport,\n        );\n      }\n    }\n\n    for (const [vatRatePercent, _toBeSummed] of Object.entries(taxes)) {\n      const toBeSummed = _toBeSummed as LineCalculatedTax[];\n      const vatTotal = _.sum(toBeSummed.map(x => x.vatTotal));\n      const vatTotalAccountingSchemeCurrency = _.sum(\n        toBeSummed.map(x => x.vatTotalAccountingSchemeCurrency),\n      );\n      vatReport.push(\n        await this.salesInvoiceVatService.save(\n          transactionalEntityManager,\n          {\n            vatRatePercent: +vatRatePercent,\n            vatTotalRaw: vatTotal,\n            vatTotal: _.round(vatTotal, 2),\n            vatTotalAccountingSchemeCurrencyRaw: vatTotalAccountingSchemeCurrency,\n            vatTotalAccountingSchemeCurrency: _.round(\n              vatTotalAccountingSchemeCurrency,\n              2,\n            ),\n            invoice: invoiceWithLines,\n          },\n          currentUser,\n        ),\n      );\n    }\n\n    invoiceWithLines.vatReport = vatReport;\n    invoiceWithLines.totalLinesAccountingSchemeCurrency = _.round(\n      invoiceWithLines.totalLines *\n        currencyMultiplyingRateToAccountingSchemeCurrency,\n      2,\n    );\n    invoiceWithLines.totalLines = _.round(invoiceWithLines.totalLines, 2);\n    invoiceWithLines.grandTotalAccountingSchemeCurrency = _.round(\n      invoiceWithLines.grandTotal *\n        currencyMultiplyingRateToAccountingSchemeCurrency,\n      2,\n    );\n    invoiceWithLines.grandTotal = _.round(invoiceWithLines.grandTotal, 2);\n\n    invoiceWithLines.currencyMultiplyingRateToAccountingSchemeCurrency = currencyMultiplyingRateToAccountingSchemeCurrency;\n    invoiceWithLines.isCalculated = true;\n\n    return invoiceWithLines;\n  }\n\n  async confirm(\n    manager: EntityManager,\n    invoice: SalesInvoiceModel,\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> {\n    invoice.isDraft = false;\n    await this.assignDocumentNumbersToInvoices(manager, [invoice]);\n    await this.reportsService.printSalesInvoice(invoice, invoice.printLanguage);\n    await this.persist(manager, invoice, currentUser);\n    return invoice;\n  }\n\n  async fixPrint(manager: EntityManager) {\n    console.log('Fix print started');\n    const invoices = await manager\n      .createQueryBuilder()\n      .setLock('pessimistic_write')\n      .select('invoice')\n      .from(SalesInvoice, 'invoice')\n      .where(`invoice.content is NULL`, {})\n      .orderBy('id')\n      .getMany();\n\n    for (const i of invoices) {\n      const invoice = await this.loadEntityById(manager, i.id);\n      console.log('Fixing content of ', invoice);\n      const printed = await this.reportsService.printSalesInvoice(\n        invoice,\n        invoice.printLanguage,\n      );\n      await manager.save(printed);\n    }\n    console.log('Fix print done');\n  }\n\n  async assignDocumentNumbersToInvoices(\n    manager: EntityManager,\n    notDraftInvoicesWithoutDocumentNumber: Array<SalesInvoiceModel>,\n  ) {\n    for (const invoice of notDraftInvoicesWithoutDocumentNumber) {\n      if (invoice.documentNo || invoice.isDraft) {\n        throw new Error(\n          'Call with non draft invoices without document number only!',\n        );\n      }\n      invoice.documentNo = await this.documentNumberingServiceModel.getNextDocumentNumber(\n        manager,\n        invoice.constructor,\n        await invoice.organization,\n      );\n    }\n  }\n\n  loadEntityByIdRelations(): string[] {\n    return ['lines', 'vatReport', 'factoringProvider'];\n  }\n\n  async createMonthlyInvoice(\n    entityManager: EntityManager,\n    objData: SalesInvoiceMonthlySaveArgsModel,\n    currentUser: UserModel,\n  ) {\n    const organizationService: OrganizationService = getService(\n      OrganizationServiceKey,\n    );\n    const nucz = (await organizationService.loadEntities(entityManager)).find(\n      x => x.displayName === `NUCZ`,\n    );\n    const NUCZPercentage = objData.organizationDivider.find(\n      x => x.id === nucz.id,\n    ).value;\n    const hours = objData.totalHours;\n    const dailyRate = objData.dailyRate;\n    const narration = objData.narration;\n\n    const evalue = async (\n      entityManager: EntityManager,\n      technicalUser: UserModel,\n    ): Promise<SalesInvoiceModel[]> => {\n      const result: SalesInvoiceModel[] = [];\n      if (hours === 0) return result;\n\n      const issuedOn = new Date(objData.year, objData.month - 1, objData.day);\n      if (NUCZPercentage > 0) {\n        const lines: SalesInvoiceLineSaveArgsModel[] = [\n          {\n            lineTaxIsStandard: true,\n            productSku: `EX`,\n            linePrice: _.round((NUCZPercentage * hours * dailyRate) / 8, 2),\n            quantity: _.round(hours * NUCZPercentage, 2),\n            narration,\n            lineOrder: 1,\n          },\n        ];\n        const invoice = await this.save(\n          entityManager,\n          {\n            customerDisplayName: 'evalue',\n            organizationDisplayName: `NUCZ`,\n            paymentTermInDays: 14,\n            transactionDate: issuedOn,\n            issuedOn,\n            currencyIsoCode: `CZK`,\n            lines,\n          },\n          technicalUser,\n        );\n        result.push(await this.confirm(entityManager, invoice, currentUser));\n      }\n\n      const lines2: SalesInvoiceLineSaveArgsModel[] = [\n        {\n          lineTaxIsStandard: true,\n          productSku: `EX`,\n          linePrice: _.round(((1 - NUCZPercentage) * hours * dailyRate) / 8, 2),\n          quantity: _.round(hours * (1 - NUCZPercentage), 2),\n          narration,\n          lineOrder: 1,\n        },\n      ];\n      const invoice2 = await this.save(\n        entityManager,\n        {\n          customerDisplayName: 'evalue',\n          organizationDisplayName: `DP`,\n          paymentTermInDays: 14,\n          transactionDate: issuedOn,\n          issuedOn,\n          currencyIsoCode: `CZK`,\n          lines: lines2,\n        },\n        technicalUser,\n      );\n      result.push(await this.confirm(entityManager, invoice2, currentUser));\n      return result;\n    };\n\n    const realityZaPrahou = async (\n      entityManager: EntityManager,\n      technicalUser: UserModel,\n    ): Promise<SalesInvoiceModel> => {\n      const currencyRateService: CurrencyRateService = getService(\n        CurrencyRateServiceKey,\n      );\n\n      const issuedOn = new Date(objData.year, objData.month - 1, objData.day);\n      const start = moment(issuedOn)\n        .startOf('day')\n        .toDate();\n      const end = moment(issuedOn)\n        .endOf('day')\n        .toDate();\n      await currencyRateService.save(\n        entityManager,\n        {\n          start,\n          end,\n          currencyMultiplyingRate: objData.eurToCzkRate,\n          fromIsoCode: 'EUR',\n          toIsoCode: 'CZK',\n        },\n        technicalUser,\n      );\n      const lines: SalesInvoiceLineSaveArgsModel[] = [\n        {\n          lineTaxIsStandard: true,\n          productSku: 'MS.O365.BP.M',\n          linePrice: 4 * 12.7,\n          quantity: 4,\n          narration: 'Licence Office 365 Business Premium',\n          lineOrder: 1,\n        },\n      ];\n      const invoice = await this.save(\n        entityManager,\n        {\n          customerDisplayName: 'RealityzaPrahou',\n          organizationDisplayName: `NUCZ`,\n          paymentTermInDays: 23,\n          transactionDate: issuedOn,\n          issuedOn,\n          currencyIsoCode: `EUR`,\n          lines,\n        },\n        technicalUser,\n      );\n      return await this.confirm(entityManager, invoice, currentUser);\n    };\n\n    return [\n      ...(await evalue(entityManager, currentUser)),\n      await realityZaPrahou(entityManager, currentUser),\n    ];\n  }\n\n  async salesInvoicesReport(manager: EntityManager) {\n    return await manager\n      .getRepository(SalesInvoice)\n      .createQueryBuilder('salesInvoice')\n      .innerJoinAndSelect('salesInvoice.organization', 'organization')\n      .select('EXTRACT(YEAR from salesInvoice.transactionDate)', 'year')\n      .addSelect('EXTRACT(MONTH from salesInvoice.transactionDate)', 'month')\n      .addSelect('salesInvoice.organization')\n      .addSelect('SUM(salesInvoice.totalLinesAccountingSchemeCurrency)', 'sum')\n      .addSelect('organization.displayName')\n      .groupBy('EXTRACT(YEAR from salesInvoice.transactionDate)')\n      .addGroupBy('EXTRACT(MONTH from salesInvoice.transactionDate)')\n      .addGroupBy('salesInvoice.organization')\n      .addGroupBy('organization.displayName')\n      .where('salesInvoice.isActive=true AND salesInvoice.isDraft=false')\n      .getRawMany();\n  }\n\n  duplicate = async (\n    transactionalEntityManager: EntityManager,\n    id: number,\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> => {\n    const source = await this.loadEntityById(transactionalEntityManager, id);\n    source.isDraft = true;\n    return this.save(transactionalEntityManager, source, currentUser);\n  };\n\n  publish = async (\n    transactionalEntityManager: EntityManager,\n    args: SalesInvoicePublishArgsModel,\n    currentUser: UserModel,\n  ): Promise<SalesInvoiceModel> => {\n    const source = await this.loadEntityById(\n      transactionalEntityManager,\n      args.id,\n    );\n    const attachments: MailAttachment[] = [\n      {\n        filename: `Invoice${source.documentNo}.pdf`,\n        content: source.content,\n      },\n    ];\n    for (const filename of args.attachmentIds) {\n      attachments.push({\n        filename,\n        content: await this.attachmentService.getFileAsStream(filename),\n      });\n    }\n    await this.mailService.send(\n      {\n        name: 'ABC',\n        address: 'abc@xyz.com',\n      },\n      undefined,\n      'Invoice ' + source.documentNo,\n      'Hello, sending invoice ' + source.documentNo + '. Thanks, ABC Team',\n      '<p>Hello,</p><p>sending invoice ' +\n        source.documentNo +\n        '.</p><p>Thanks, ABC Team</p>',\n      undefined,\n      attachments,\n    );\n\n    return source;\n  };\n\n  exportToCrossIndustryInvoice = (\n    i: SalesInvoiceModel,\n  ): CrossIndustryInvoiceType => {\n    const ExchangedDocumentContext = new ExchangedDocumentContextType();\n    ExchangedDocumentContext.GuidelineSpecifiedDocumentContextParameter = new DocumentContextParameterType(\n      {\n        ID: new IDType('urn:factur-x.eu:1p0:minimum'),\n      },\n    );\n    const ExchangedDocument = new ExchangedDocumentType({\n      ID: new IDType(i.documentNo),\n      /*\n\n      Only the following code may be used for the BASIC WL and MINIMUM profiles:\n751: Booking aid - NO invoice\n       */\n      TypeCode: new DocumentCodeType('751'),\n      IssueDateTime: new DateTimeType(i.issuedOn),\n    });\n    const SupplyChainTradeTransaction = new SupplyChainTradeTransactionType({\n      ApplicableHeaderTradeAgreement: new HeaderTradeAgreementType({\n        SellerTradeParty: new TradePartyType({\n          Name: new TextType(i.organization.legalName),\n        }),\n        BuyerTradeParty: new TradePartyType({\n          Name: new TextType(i.customer.legalName),\n        }),\n      }),\n      ApplicableHeaderTradeDelivery: new HeaderTradeDeliveryType(),\n      ApplicableHeaderTradeSettlement: new HeaderTradeSettlementType({\n        InvoiceCurrencyCode: new CurrencyCodeType(i.currency.isoCode),\n        SpecifiedTradeSettlementHeaderMonetarySummation: new TradeSettlementHeaderMonetarySummationType(\n          {\n            TaxBasisTotalAmount: new AmountType(\n              i.totalLinesAccountingSchemeCurrency,\n            ),\n            TaxTotalAmount: new AmountType(\n              i.vatReport.reduce(\n                (a, b) =>\n                  ({\n                    vatTotalAccountingSchemeCurrency:\n                      a.vatTotalAccountingSchemeCurrency +\n                      b.vatTotalAccountingSchemeCurrency,\n                  } as any),\n              ).vatTotalAccountingSchemeCurrency,\n            ),\n            GrandTotalAmount: new AmountType(i.grandTotal),\n            DuePayableAmount: new AmountType(i.grandTotal),\n          },\n        ),\n      }),\n    });\n    return new CrossIndustryInvoiceType({\n      ExchangedDocumentContext,\n      ExchangedDocument,\n      SupplyChainTradeTransaction,\n    });\n  };\n\n  exportToXml = (i: SalesInvoiceModel): string => {\n    return this.xmlService.generateCrossIndustryDocument(\n      this.exportToCrossIndustryInvoice(i),\n    );\n  };\n}\n",
    "absorb/SMCloudStore/backblaze-b2/src/B2Upload.ts": "'use strict'\n\nimport {IsReadableStream, ReadChunkFromStream} from '@smcloudstore/core/dist/StreamUtils'\nimport {WaitPromise} from '@smcloudstore/core/dist/Utils'\nimport {Readable, Stream} from 'stream'\n\n/**\n * Manages the upload of objects to Backblaze B2.\n *\n * This supports using Buffers and strings with the \"simple APIs\". It supports streams too, using either the \"simple APIs\" if the stream is less than `chunkSize`, or the large file APIs otherwise. The selection happens automatically.\n */\nclass B2Upload {\n    /**\n     * Size of each chunk that is uploaded when using B2's large file APIs, in bytes. Minimum value is 5MB; default is 9MB.\n     *\n     * Note: there seems to be a bug in the current version of the backblaze-b2 package when the request body upload is > 10 MB, because of a downstream dependency on axios@0.17; once backblaze-b2 updates its dependency on axios, this might be fixed.\n     */\n    static chunkSize = 9 * 1024 * 1024\n\n    /** Backblaze recommends retrying all uploads at least two times (up to five) in case of errors, with an incrementing delay. We're retrying all uploads 3 times by default. */\n    static retries = 3\n\n    /** Instance of the B2 client library */\n    protected client: any\n\n    /** Id of the target bucket */\n    protected bucketId: string\n\n    /** Path where to store the object, inside the container */\n    protected path: string\n\n    /** Data to upload */\n    protected data: Stream|string|Buffer\n\n    /** Metadata for the object */\n    protected metadata: any\n\n    /** Length (in bytes) of the input data */\n    protected length: number\n\n    /**\n     * Initializes a new B2Upload class\n     *\n     * @param client - Instance of the B2 client library. It's expected authorization to be completed already, so auth data is stored in the library.\n     * @param bucketId - Id of the target bucket\n     * @param path - Path where to store the object, inside the container\n     * @param data - Data to upload\n     * @param metadata - Metadata for the object\n     * @param length - Length (in bytes) of the input data\n     */\n    constructor(client: any, bucketId: string, path: string, data: Stream|string|Buffer, metadata?: any, length?: number) {\n        // Store all arguments as properties\n        this.client = client\n        this.bucketId = bucketId\n        this.path = path\n        this.data = data\n        this.metadata = metadata || {}\n        this.length = length || 0\n    }\n\n    /**\n     * Start the upload of the object\n     *\n     * @returns Promise that resolves when the object has been uploaded\n     * @async\n     */\n    start(): Promise<void> {\n        // Check if we have a string or a Buffer, and proceed straight to the upload phase\n        if (typeof this.data == 'string' || (typeof this.data == 'object' && Buffer.isBuffer(this.data))) {\n            // Convert strings to Buffers\n            if (typeof this.data == 'string') {\n                this.data = Buffer.from(this.data as string, 'utf8')\n            }\n\n            // Ensure length (in bytes) is less than 5GB\n            if (this.data.byteLength > 5 * 1024 * 1024 * 1024) {\n                throw Error('Maximum size for strings and Buffers is 5 GB')\n            }\n\n            // Upload the file, returning the Promise\n            return this.putFile()\n        }\n\n        // At this point, we should only have streams\n        if (!IsReadableStream(this.data)) {\n            throw Error('putObject requires a Stream, a Buffer or a string')\n        }\n\n        // First, ensure that chunkSize is at least 5MB\n        if (B2Upload.chunkSize < 5 * 1024 * 1024) {\n            throw Error('chunkSize must be at least 5MB')\n        }\n\n        // Peek the first chunk from the stream (note this returns a Promise)\n        return ReadChunkFromStream(this.data as Readable, B2Upload.chunkSize + 1, true)\n            .then((firstChunk: Buffer) => {\n                // If we don't have a length argument specified, get the length of the first chunk\n                if (!this.length) {\n                    if (!firstChunk || !firstChunk.byteLength) {\n                        throw Error('First chunk read from the stream has zero length')\n                    }\n\n                    this.length = firstChunk.byteLength\n                }\n\n                // Check if the length is not longer than chunkSize: if it is, just upload the Buffer as a single file\n                // While B2 large file APIs support files that are at least 5 MB + 1 byte, we are splitting the data into chunkSize chunks, so there's no point in using the more complex API in case it's smaller\n                if (this.length <= B2Upload.chunkSize) {\n                    // Returns a Promise\n                    return this.putFile(firstChunk)\n                }\n                else {\n                    // If we're still here, then we need to upload the file using the large file APIs\n                    // Returns a Promise\n                    return this.putLargeFile()\n                }\n            })\n    }\n\n    /**\n     * Uploads a single file, when data is a Buffer or string.\n     *\n     * @param data - Data to upload, as Buffer. If not specified, will use `this.data`\n     * @returns Promise that resolves when the object has been uploaded\n     * @async\n     */\n    private putFile(data?: Buffer): Promise<any> {\n        // If we are not passed a Buffer, use this.data\n        if (!data) {\n            data = this.data as Buffer\n        }\n\n        // Ensure that data is a Buffer\n        if (!data || typeof data != 'object' || !Buffer.isBuffer(data)) {\n            throw Error('Argument data must be a Buffer')\n        }\n\n        // Counter for re-trying uploads if there's an error\n        let retryCounter = 0\n\n        const doUpload = () => {\n            // First, get the upload url and upload authorization token\n            return this.client.getUploadUrl(this.bucketId)\n            // Then upload the file\n            .then((response) => {\n                if (!response || !response.data || !response.data.authorizationToken || !response.data.uploadUrl) {\n                    throw Error('Invalid response when requesting the upload url and upload authorization token')\n                }\n\n                // Request args\n                const requestArgs = {\n                    data: data,\n                    filename: this.path,\n                    info: {} as any,\n                    mime: 'application/octet-stream',\n                    uploadAuthToken: response.data.authorizationToken,\n                    uploadUrl: response.data.uploadUrl\n                }\n\n                // Metadata\n                if (this.metadata) {\n                    // Add custom headers\n                    // Maximum 10 headers, and they can only contain [A-Za-z0-9]\n                    // If headers don't start with 'X-Bz-Info-', the prefix will be added\n                    let i = 0\n                    for (const key in this.metadata) {\n                        if (!this.metadata.hasOwnProperty(key)) {\n                            continue\n                        }\n\n                        // Content-Type header has a special treatment\n                        if (key && key.toLowerCase() == 'content-type') {\n                            requestArgs.mime = this.metadata[key]\n                        }\n                        else {\n                            // We can't have more than 10 headers\n                            if (i == 10) {\n                                throw Error('Cannot send more than 10 custom headers')\n                            }\n\n                            // Ensure the key is valid\n                            if (!key.match('^[A-Za-z0-9-]+$')) {\n                                throw Error('Invalid header format: must be A-Za-z0-9')\n                            }\n\n                            // Check if the prefix is there already\n                            if (key.substr(0, 10) != 'X-Bz-Info-') {\n                                requestArgs.info['X-Bz-Info-' + key] = this.metadata[key]\n                            }\n                            else {\n                                requestArgs.info[key] = this.metadata[key]\n                            }\n\n                            // Increment the counter\n                            i++\n                        }\n                    }\n                }\n\n                // Send the request\n                return this.client.uploadFile(requestArgs)\n            })\n            .catch((err) => {\n                if (retryCounter < B2Upload.retries) {\n                    retryCounter++\n                    // Before retrying, wait for an increasing delay\n                    return WaitPromise((retryCounter + 1) * 500)\n                        .then(() => {\n                            return doUpload()\n                        })\n                }\n                else {\n                    // Let the error bubble up\n                    throw err\n                }\n            })\n        }\n        return doUpload()\n    }\n\n    /**\n     * Uploads a Readable Stream.\n     *\n     * @param stream - Readable Stream containing the data to upload\n     * @returns Promise that resolves when the object has been uploaded\n     * @async\n     */\n    private putLargeFile(stream?: Readable): Promise<any> {\n        // If we are not passed a stream, use this.data\n        if (!stream) {\n            stream = this.data as Readable\n        }\n        // Ensure stream is a Readable Stream\n        if (!IsReadableStream(stream)) {\n            throw Error('Argument stream must be a Readable Stream')\n        }\n\n        // Add a listener to understand when the stream ends\n        let streamEnded = false\n        stream.on('end', () => {\n            streamEnded = true\n        })\n\n        // Will contain fileId\n        let fileId = null\n\n        // Returns a chunk at a time\n        const readChunk = (partNumber: number, hashes: string[]): Promise<{fileId: string, hashes: string[]}> => {\n            // If the stream has ended, return\n            if (streamEnded) {\n                return Promise.resolve({fileId: fileId, hashes: hashes})\n            }\n\n            // Returns a Promise\n            return ReadChunkFromStream(stream, B2Upload.chunkSize)\n                .then((data: Buffer) => {\n                    // If we have no data, we reached the end of the stream\n                    if (!data) {\n                        return {fileId: fileId, hashes: hashes}\n                    }\n                    else {\n                        return this.putPart(fileId, partNumber, data)\n                            .then((response) => {\n                                // Check response\n                                if (!response || !response.data) {\n                                    throw Error('Invalid response when uploading a part')\n                                }\n                                if (!response.data.fileId || response.data.fileId != fileId) {\n                                    throw Error('fileId for uploaded part does not match')\n                                }\n                                if (response.data.partNumber === undefined || response.data.partNumber != partNumber) {\n                                    throw Error('partNumber for uploaded part does not match')\n                                }\n                                if (!response.data.contentLength) {\n                                    throw Error('Invalid contentLength of uploaded part')\n                                }\n                                if (!response.data.contentSha1) {\n                                    throw Error('Invalid contentSha1 of uploaded part')\n                                }\n\n                                // Add the SHA1 hash to the list\n                                hashes.push(response.data.contentSha1)\n\n                                // Read the next chunk\n                                return readChunk(partNumber + 1, hashes)\n                            })\n                    }\n                })\n        }\n\n        // Start processing the file\n        return Promise.resolve()\n            // First step: request the fileId\n            .then(() => {\n                let contentType = 'application/octet-stream'\n\n                // Metadata\n                // When using the large file API, we can't add custom headers, so we're only looking for Content-Type (case-insensitive)\n                if (this.metadata) {\n                    for (const key in this.metadata) {\n                        if (!this.metadata.hasOwnProperty(key)) {\n                            continue\n                        }\n\n                        const keyLowerCase = key.toLowerCase()\n                        if (keyLowerCase == 'content-type') {\n                            contentType = this.metadata[key]\n                            break\n                        }\n                    }\n                }\n\n                return this.client.startLargeFile({\n                    bucketId: this.bucketId,\n                    contentType: contentType,\n                    fileName: this.path\n                })\n            })\n            // Second step: upload all parts\n            .then((response) => {\n                if (!response || !response.data || !response.data.fileId) {\n                    throw Error('Invalid response when requesting the file id')\n                }\n\n                fileId = response.data.fileId as string\n\n                // Read from stream into chunks of chunkSize\n                // partNumber starts from 1\n                // Pass an empty array where all the SHA1 hashes are collected\n                return readChunk(1, [])\n            })\n            // Last: commit the file\n            .then((result) => {\n                return this.client.finishLargeFile({\n                    fileId: result.fileId,\n                    partSha1Array: result.hashes\n                })\n            })\n            // In case of errors, if we have a fileId, remove the incomplete upload\n            .catch((err) => {\n                // In all situations, just re-throw the error as callback\n                const cb = () => {\n                    throw err\n                }\n\n                if (fileId) {\n                    return this.client.cancelLargeFile({fileId: fileId})\n                        .then(cb, cb)\n                }\n                else {\n                    cb()\n                }\n            })\n    }\n\n    /**\n     * Uploads a single part of a large file.\n     *\n     * @param fileId - ID of the large file that is being uploaded\n     * @param partNumber - Number of the part, starting from 1\n     * @param data - Data to upload, in a Buffer\n     * @returns Promise that resolves when the part has been uploaded.\n     * @async\n     */\n    private putPart(fileId: string, partNumber: number, data: Buffer): Promise<any> {\n        // Backblaze recommends retrying at least two times (up to five) in case of errors, with an incrementing delay. We're retrying all uploads 3 times\n        let retryCounter = 0\n\n        const doUpload = () => {\n            // First, get the upload part url and upload authorization token\n            return this.client.getUploadPartUrl({fileId: fileId})\n            .then((response) => {\n                if (!response || !response.data || !response.data.authorizationToken || !response.data.uploadUrl) {\n                    throw Error('Invalid response when requesting the upload part url and upload authorization token')\n                }\n\n                // Upload the part\n                return this.client.uploadPart({\n                    data: data,\n                    partNumber: partNumber,\n                    uploadAuthToken: response.data.authorizationToken,\n                    uploadUrl: response.data.uploadUrl\n                })\n            })\n            .catch((err) => {\n                if (retryCounter < B2Upload.retries) {\n                    retryCounter++\n                    // Before retrying, wait for an increasing delay\n                    return WaitPromise((retryCounter + 1) * 500)\n                        .then(() => {\n                            return doUpload()\n                        })\n                }\n                else {\n                    // Let the error bubble up\n                    throw err\n                }\n            })\n        }\n        return doUpload()\n    }\n}\n\nexport = B2Upload\n",
    "absorb/SMCloudStore/backblaze-b2/src/BackblazeB2Provider.ts": "'use strict'\n\nimport {ListItemObject, ListItemPrefix, ListResults, PutObjectOptions, StorageProvider} from '@smcloudstore/core/dist/StorageProvider'\nimport {Stream} from 'stream'\nimport B2Upload = require('./B2Upload')\n// tslint:disable-next-line:no-var-requires\nconst B2 = require('backblaze-b2') as any\n\n/**\n * Connection options for a Backblaze B2 provider.\n */\ninterface BackblazeB2ConnectionOptions {\n    /** Account Id */\n    accountId: string\n    /** Application key (secret key) */\n    applicationKey: string\n}\n\n/**\n * Options passed when creating a container\n */\ninterface BackblazeB2CreateContainerOptions {\n    /** Determine access level for all files in the container. Defaults to 'private' if not specified */\n    access?: 'public' | 'private'\n}\n\n/** Dictionary of options used when putting an object. Many providers will extend this. */\ninterface BackblazeB2PutObjectOptions extends PutObjectOptions {\n    /** When passing a stream as `data` object, being able to specify the length of the data allows for faster uploads; this argument is ignored if `data` is not a Stream object */\n    length?: number\n}\n\n/**\n * Client to interact with Backblaze B2 cloud storage.\n */\nclass BackblazeB2Provider extends StorageProvider {\n    /** Specifies for how long (in ms) to keep BucketId data in cache. Set to 0 to disable caching. Default is 15 minutes. */\n    static bucketIdCacheDuration = 900000\n\n    protected _client: any\n    private _isAuthorized: boolean\n    private _bucketIdCache: {[s: string]: {result: string, time: number}}\n\n    /**\n     * Initializes a new client to interact with Backblaze B2.\n     * \n     * @param connection - Dictionary with connection options.\n     */\n    constructor(connection: BackblazeB2ConnectionOptions) {\n        if (!connection || !Object.keys(connection).length) {\n            throw new Error('Connection argument is empty')\n        }\n\n        super(connection)\n\n        // Authorization for B2 is asynchronous, so will be executed on the first async call\n        this._isAuthorized = false\n\n        // Provider name\n        this._provider = 'backblaze-b2'\n\n        // Initialize the bucket ID cache\n        this._bucketIdCache = {}\n\n        // The B2 library will validate the connection object\n        this._client = new B2(connection)\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server.\n     * \n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container, including the access level\n     * @returns Promise that resolves once the container has been created. The promise doesn't contain any meaningful return value.\n     * @async\n     */\n    createContainer(container: string, options?: BackblazeB2CreateContainerOptions): Promise<void> {\n        const access = (options && options.access && options.access == 'public')\n            ? 'allPublic'\n            : 'allPrivate'\n\n        // Ensure we are authorized, then perform the request\n        return this._ensureAuthorized()\n            .then(() => this._client.createBucket(container, access))\n    }\n\n    /**\n     * Check if a container exists.\n     * \n     * @param container - Name of the container\n     * @returns Promises that resolves with a boolean indicating if the container exists.\n     * @async\n     */\n    isContainer(container: string): Promise<boolean> {\n        // There's no method in the B2 APIs to get a single bucket, so list all buckets and look for the one we're interested in\n        return this.listContainers()\n            .then((list) => {\n                return list.indexOf(container) >= 0\n            })\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server if it doesn't already exist.\n     * \n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container, including the access level\n     * @returns Promise that resolves once the container has been created\n     * @async\n     */\n    ensureContainer(container: string, options?: BackblazeB2CreateContainerOptions): Promise<void> {\n        return this.isContainer(container).then((exists) => {\n            if (!exists) {\n                return this.createContainer(container)\n            }\n        })\n    }\n\n    /**\n     * Lists all containers belonging to the user\n     * \n     * @returns Promise that resolves with an array of all the containers\n     * @async\n     */\n    listContainers(): Promise<string[]> {\n        // Ensure we are authorized, then perform the request\n        return this._ensureAuthorized()\n            .then(() => this._client.listBuckets())\n            .then((response) => {\n                if (!response || !response.data || !response.data.buckets || !Array.isArray(response.data.buckets)) {\n                    return []\n                }\n\n                // Return only the bucketName element from the array of objects\n                return response.data.buckets.map((el) => (el && el.bucketName) || undefined)\n            })\n    }\n\n    /**\n     * Removes a container from the server\n     * \n     * @param container - Name of the container\n     * @returns Promise that resolves once the container has been removed\n     * @async\n     */\n    deleteContainer(container: string): Promise<void> {\n        // Request the bucketId for the container, after ensuring that we're authorized\n        return Promise.resolve()\n            .then(() => this._ensureAuthorized())\n            .then(() => this._getBucketId(container))\n            .then((bucketId) => {\n                if (!bucketId) {\n                    throw Error('Container not found: ' + container)\n                }\n\n                return this._client.deleteBucket(bucketId)\n            })\n            .then(() => {\n                // Return void\n                return\n            })\n    }\n\n    /**\n     * Uploads a stream to the object storage server.\n     * \n     * The Backblaze B2 APIs have relatively poor support for streams, as it requires the size of the data to be sent at the beginning of the request. As a consequence, this method will upload the file using a different API based on the input data:\n     * \n     * 1. If the length of the data can be known before the upload starts, makes a single upload call. This applies to all situations when `data` is a Buffer or a string, and when `data` is a Stream and either the `options.length` argument is specified, or `data.byteLength` is defined (all data is loaded in memory before being sent to the server in this case).\n     * 2. In the situation when `data` is a Stream and the length can't be known beforehand, if the data is longer than `B2Upload.chunkSize` (default: 9MB; minimum: 5MB) the method will use B2's [large files APIs](https://www.backblaze.com/b2/docs/large_files.html). With those, it's possible to chunk the file into many chunks and upload them separately, thus it's not necessary to load the entire Stream in memory. However, this way of uploading files requires many more network calls, and could be significantly slower. B2 supports up to 1,000 chunks per object, so using 9MB chunks (the default value for `B2Upload.chunkSize`), maximum file size is 90GB.\n     * \n     * Notes on the metadata:\n     * \n     * - The `Content-Type` header is always supported and used as-is\n     * - When using the large file APIs, no other custom header can be added\n     * - When using the \"normal APIs\", you can add up to 10 custom headers, all starting with the `X-Bz-Info-` prefix (if your headers don't start with this prefix, it will be added automatically)\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param data - Object data or stream. Can be a Stream (Readable Stream), Buffer or string.\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary. For the Backblaze B2 provider, this object contains the `length` property too, which is useful when passing a stream as data object, as it might allow for faster uploads.\n     * @returns Promise that resolves once the object has been uploaded\n     * @async\n     */\n    putObject(container: string, path: string, data: Stream|string|Buffer, options?: BackblazeB2PutObjectOptions): Promise<void> {\n        if (!options) {\n            options = {}\n        }\n        return Promise.resolve()\n            // Step zero: ensure we're authorized\n            .then(() => this._ensureAuthorized())\n            // First step: get the bucketId for the container\n            // This also calls _ensureAuthorized\n            .then(() => this._getBucketId(container))\n            // Initialize the B2Upload class and start the upload process\n            .then((bucketId) => {\n                const uploader = new B2Upload(this._client, bucketId, path, data, options.metadata, options.length)\n                // This returns a promise\n                return uploader.start()\n            })\n    }\n\n    /**\n     * Requests an object from the server. The method returns a Promise that resolves to a Readable Stream containing the data.\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Readable Stream containing the object's data\n     * @async\n     */\n    getObject(container: string, path: string): Promise<Stream> {\n        return this._ensureAuthorized()\n            .then(() => {\n                // Request the file\n                return this._client.downloadFileByName({\n                        bucketName: container,\n                        fileName: path,\n                        responseType: 'stream'\n                    })\n                    .then((response) => {\n                        // The stream is in response.data\n                        if (!response || !response.data) {\n                            throw Error('Invalid response when requesting the object')\n                        }\n\n                        return response.data\n                    })\n            })\n    }\n\n    /**\n     * Returns a list of objects with a given prefix (folder). The list is not recursive, so prefixes (folders) are returned as such.\n     * \n     * @param container - Name of the container\n     * @param prefix - Prefix (folder) inside which to list objects\n     * @returns List of elements returned by the server\n     * @async\n     */\n    listObjects(container: string, prefix?: string): Promise<ListResults> {\n        // We might need to do multiple requests if there are many files in the bucket that match the prefix\n        const list = [] as ListResults\n        const requestList = (bucketId: string, startFileName: string): Promise<ListResults> => {\n            return this._client.listFileNames({\n                    bucketId: bucketId,\n                    delimiter: '/',\n                    maxFileCount: 1000,\n                    prefix: prefix || '',\n                    startFileName: startFileName\n                })\n                .then((response) => {\n                    if (!response || !response.data || !response.data.files) {\n                        throw Error('Invalid response when listing the container')\n                    }\n\n                    // Iterate through the response and add everything to the list\n                    for (const file of response.data.files) {\n                        // If we have a file\n                        if (file && file.action == 'upload') {\n                            list.push({\n                                contentType: file.contentType,\n                                lastModified: new Date(file.uploadTimestamp),\n                                path: file.fileName,\n                                size: file.contentLength\n                            } as ListItemObject)\n                        }\n                        else if (file && file.action == 'folder') {\n                            list.push({\n                                prefix: file.fileName\n                            } as ListItemPrefix)\n                        }\n                    }\n\n                    // Check if we have to make another request, or just return the list\n                    if (response.data.nextFileName) {\n                        return requestList(bucketId, response.data.nextFileName)\n                    }\n                    else {\n                        return list\n                    }\n                })\n        }\n\n        // Request the bucketId for the container first (after ensuring that we're authorized)\n        return Promise.resolve()\n            .then(() => this._ensureAuthorized())\n            .then(() => this._getBucketId(container))\n            .then((bucketId) => {\n                if (!bucketId) {\n                    throw Error('Container not found: ' + container)\n                }\n\n                // Request the full list (which might require multiple network calls), then return it\n                return requestList(bucketId, null)\n            })\n    }\n\n    /**\n     * Removes an object from the server\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Promise that resolves once the object has been removed\n     * @async\n     */\n    deleteObject(container: string, path: string): Promise<void> {\n        // Request the bucketId for the container first, after ensuring we're authorized\n        return Promise.resolve()\n            .then(() => this._ensureAuthorized())\n            .then(() => this._getBucketId(container))\n            .then((bucketId) => {\n                if (!bucketId) {\n                    throw Error('Container not found: ' + container)\n                }\n\n                // Get the fileId\n                return this._getFileId(bucketId, path)\n            })\n            .then((fileId) => {\n                if (!fileId) {\n                    throw Error('File not found: ' + container)\n                }\n\n                // Delete the file, returning a promise\n                return this._client.deleteFileVersion({\n                    fileId: fileId,\n                    fileName: path\n                })\n            })\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use to request an object from the server with a GET request, even if the object is private.\n     * \n     * **Backblaze B2 currently does not support this API**, and calling this method will always throw an error. Sorry!\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedGetUrl(container: string, path: string, ttl?: number): Promise<string> {\n        throw Error('Presigned URLs are not supported by the BackblazeB2 Provider')\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use for PUT operations on an object in the server, even if the object is private.\n     * \n     * **Backblaze B2 currently does not support this API**, and calling this method will always throw an error. Sorry!\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedPutUrl(container: string, path: string, options?: PutObjectOptions, ttl?: number): Promise<string> {\n        throw Error('Presigned URLs are not supported by the BackblazeB2 Provider')\n    }\n\n    /**\n     * Returns the bucketId property for a given bucket name, as most B2 methods require a bucket's ID.\n     * \n     * The result is cached in memory for a certain amount of time configured with `BackblazeB2Provider.bucketIdCacheDuration` (default: 15 minutes), and up to 100 IDs.\n     * \n     * @param bucketName - Name of the bucket\n     * @returns Promise that resolves with the bucketId\n     * @async\n     */\n    private _getBucketId(bucketName: string): Promise<string> {\n        // First, check if the data is cached, and the cache hasn't expired\n        // (If caching is enabled at all)\n        const cachingEnabled = BackblazeB2Provider.bucketIdCacheDuration && BackblazeB2Provider.bucketIdCacheDuration > 0\n        if (cachingEnabled\n            && this._bucketIdCache[bucketName]\n            && (Date.now() - this._bucketIdCache[bucketName].time <  BackblazeB2Provider.bucketIdCacheDuration)\n        ) {\n            return Promise.resolve(this._bucketIdCache[bucketName].result)\n        }\n\n        // There's no method in the B2 APIs to get a single bucket, so we need to request the full list\n        return Promise.resolve()\n            .then(() => this._client.listBuckets())\n            .then((response) => {\n                if (!response || !response.data || !response.data.buckets || !Array.isArray(response.data.buckets)) {\n                    return null\n                }\n\n                // Look for the bucket with the requested name, then return the id\n                for (const el of response.data.buckets) {\n                    if (el.bucketName == bucketName) {\n                        // If caching is enabled, store the result\n                        if (cachingEnabled) {\n                            this._bucketIdCache[bucketName] = {\n                                result: el.bucketId,\n                                time: Date.now()\n                            }\n                            // If there are more than 100 elements in the cache, remove the first ones\n                            // This should be in order with ES2015\n                            const keys = Object.keys(this._bucketIdCache)\n                            if (keys.length > 100) {\n                                delete this._bucketIdCache[keys.shift()]\n                            }\n                        }\n                        return el.bucketId as string\n                    }\n                }\n\n                // Couldn't find the bucket\n                return null\n            })\n    }\n\n    /**\n     * Returns the fileId property for a given file name, as some B2 methods require a file's ID\n     * \n     * @param bucketId - ID of the bucket\n     * @param fileName - Name of the file\n     * @returns Promise that resolves with the fileId\n     * @async\n     */\n    private _getFileId(bucketId: string, fileName: string): Promise<string> {\n        // There's no method in the B2 APIs to get a single file, so we need to request the list and use the file name as prefix\n        // No caching here, as this is expect to be more volatile data\n        return this._client.listFileNames({\n                bucketId: bucketId,\n                delimiter: '/',\n                maxFileCount: 1000,\n                prefix: fileName\n            })\n            .then((response) => {\n                if (!response || !response.data || !response.data.files || !Array.isArray(response.data.files)) {\n                    return null\n                }\n\n                // Should match a single file with the exact name\n                for (const file of response.data.files) {\n                    if (file && file.fileName == fileName) {\n                        return file.fileId\n                    }\n                }\n\n                // Couldn't find the file\n                return null\n            })\n    }\n\n    /**\n     * Performs authorization\n     * \n     * @returns Promise that resolves once the client is authorized\n     * @async\n     */\n    private _ensureAuthorized(): Promise<void> {\n        if (this._isAuthorized) {\n            return Promise.resolve()\n        }\n        else {\n            return this._client.authorize()\n        }\n    }\n}\n\nexport = BackblazeB2Provider\n",
    "absorb/SMCloudStore/aws-s3/src/AwsS3Provider.ts": "'use strict'\n\nimport S3 = require('aws-sdk/clients/s3')\nimport {Stream} from 'stream'\nimport {\n    ListResults,\n    PutObjectOptions,\n    StorageProvider,\n} from '../../core/src/StorageProvider';\nimport { SMCloudStoreFactories } from '../../smcloudstore/src/SMCloudStore';\nimport { PromiseResult } from 'aws-sdk/lib/request';\nimport { AWSError } from 'aws-sdk';\n\n// Note: when using the AWS SDK, do not use arrow functions as callbacks, as many methods need access to the \"this\" context the callbacks provide\n\n/**\n * Connection options for an AWS S3 provider.\n */\ninterface AwsS3ConnectionOptions {\n    /** Access Key ID */\n    accessKeyId: string\n    /** Secret Access Key */\n    secretAccessKey: string,\n    /** Default region to use; if not set, defaults to \"US Standard\" (Virginia) */\n    region?: string\n}\n\n/**\n * ACL for containers and objects. Refer to the [documentation](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) for more details. Default value is `private` for containers and null (inherited) for objects.\n *\n * For consistency with other providers, a few aliases are added:\n * - `none` is an alias for `private`\n * - `public` is an alias for `public-read`\n */\ntype AwsS3ACL = 'private' | 'public-read' | 'public-read-write' | 'authenticated-read' | 'none' | 'public'\n\n/**\n * Options passed when creating a container\n */\ninterface AwsS3CreateContainerOptions {\n    /** Determine access level for all objects in the container */\n    access?: AwsS3ACL\n}\n\n/**\n * Options passed when putting an object.\n */\ninterface AwsS3PutObjectOptions extends PutObjectOptions {\n    /** Determine access level for the object. Default: inherit from the container */\n    access?: AwsS3ACL,\n\n    /** Enable AES256 server-side encryption for the object at rest, with AWS-managed keys. Default: disabled */\n    serverSideEncryption?: boolean\n\n    /** Storage class to use. Refer to the [documentation](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) for more details. Default is 'STANDARD' */\n    class?: 'STANDARD' | 'REDUCED_REDUNDANCY' | 'STANDARD_IA' | 'ONEZONE_IA'\n}\n\n/**\n * Returns the value for the ACL to pass to the APIs, given an access argument\n *\n * @param access Value among the types of `AwsS3ACL`\n * @returns String value to pass to the S3 APIs\n */\nfunction ACLString(access: AwsS3ACL): string {\n    switch (access) {\n        case 'public-read':\n        case 'public':\n            return 'public-read'\n        case 'public-read-write':\n        case 'authenticated-read':\n            return access\n        case 'none':\n        case 'private':\n        default:\n            return 'private'\n    }\n}\n\n/**\n * Returns the methodOptions dictionary for the `putObject` method\n *\n * @param options - Dictionary with options\n * @returns Dictionary to add to methodOptions\n */\nfunction PutObjectMethodOptions(options: AwsS3PutObjectOptions): S3.PutObjectRequest {\n    const methodOptions = {} as S3.PutObjectRequest\n\n    // If no other options...\n    if (!options) {\n        return methodOptions\n    }\n\n    // ACL: add only if explicitly passed\n    if (options.access) {\n        methodOptions.ACL = ACLString(options.access)\n    }\n\n    // Storage class\n    if (options.class) {\n        methodOptions.StorageClass = options.class\n    }\n\n    // Enable server-side encryption\n    if (options.serverSideEncryption) {\n        methodOptions.ServerSideEncryption = 'AES256'\n    }\n\n    // Metadata\n    if (options.metadata) {\n        methodOptions.Metadata = {}\n\n        for (const key in options.metadata) {\n            if (!options.metadata.hasOwnProperty(key)) {\n                continue\n            }\n\n            const keyLowerCase = key.toLowerCase()\n            switch (keyLowerCase) {\n                case 'cache-control':\n                    methodOptions.CacheControl = options.metadata[key]\n                    break\n                case 'content-disposition':\n                    methodOptions.ContentDisposition = options.metadata[key]\n                    break\n                case 'content-encoding':\n                    methodOptions.ContentEncoding = options.metadata[key]\n                    break\n                case 'content-language':\n                    methodOptions.ContentLanguage = options.metadata[key]\n                    break\n                case 'content-md5':\n                    methodOptions.ContentMD5 = options.metadata[key]\n                    break\n                case 'content-type':\n                    methodOptions.ContentType = options.metadata[key]\n                    break\n                default:\n                    methodOptions.Metadata[key] = options.metadata[key]\n                    break\n            }\n        }\n    }\n\n    return methodOptions\n}\n\n/**\n * Client to interact with a generic S3 object storage server, using the Minio library.\n */\nexport class AwsS3Provider extends StorageProvider {\n    protected _client: S3\n    protected _region: string\n\n    /**\n     * Initializes a new client to interact with AWS S3.\n     *\n     * @param connection - Dictionary with connection options.\n     * @param factories - factory functions to use when creating new instances\n     */\n    constructor(connection: AwsS3ConnectionOptions, protected readonly factories : SMCloudStoreFactories) {\n        super(connection)\n\n        // Provider name\n        this._provider = 'aws-s3'\n\n        // Region, if passed\n        this._region = connection.region || ''\n\n        // The AWS library will validate the connection object\n        const options = Object.assign(connection, {apiVersion: '2006-03-01'}) as S3.ClientConfiguration\n        this._client = new S3(options)\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server.\n     *\n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container.\n     * @returns Promise that resolves once the container has been created. The promise doesn't contain any meaningful return value.\n     * @async\n     */\n    createContainer(container: string, options?: AwsS3CreateContainerOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!options) {\n                options = {}\n            }\n\n            const methodOptions = {\n                ACL: ACLString(options.access),\n                Bucket: container,\n                CreateBucketConfiguration: {\n                    LocationConstraint: this._region\n                }\n            } as S3.CreateBucketRequest\n            this._client.createBucket(methodOptions, function(err, data) {\n                if (err || !data || !data.Location) {\n                    return reject(err || Error('Invalid response while creating container'))\n                }\n\n                resolve()\n            })\n        })\n    }\n\n    /**\n     * Check if a container exists.\n     *\n     * @param container - Name of the container\n     * @returns Promises that resolves with a boolean indicating if the container exists.\n     * @async\n     */\n    isContainer(container: string): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            const methodOptions = {\n                Bucket: container\n            } as S3.HeadBucketRequest\n            this._client.headBucket(methodOptions, function(err, data) {\n                if (err) {\n                    // Check error code to see if bucket doesn't exist, or if someone else owns it\n                    if (err.statusCode == 404) {\n                        // Container doesn't exist\n                        resolve(false)\n                    }\n                    else if (err.statusCode === 403) {\n                        // Someone else owns this\n                        resolve(false)\n                    }\n                    else {\n                        // Another error, so throw an exception\n                        return reject(err)\n                    }\n                }\n                else {\n                    // Bucket exists and user owns it\n                    resolve(true)\n                }\n            })\n        })\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server if it doesn't already exist.\n     *\n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container.\n     * @returns Promise that resolves once the container has been created\n     * @async\n     */\n    ensureContainer(container: string, options?: AwsS3CreateContainerOptions): Promise<void> {\n        // First, check if the container exists\n        return this.isContainer(container)\n            .then((exists) => {\n                // Create the container if it doesn't exist already\n                if (!exists) {\n                    return this.createContainer(container, options)\n                }\n            })\n    }\n\n    /**\n     * Lists all containers belonging to the user\n     *\n     * @returns Promise that resolves with an array of all the containers\n     * @async\n     */\n    listContainers(): Promise<string[]> {\n        return new Promise((resolve, reject) => {\n            this._client.listBuckets(function(err, data) {\n                if (err) {\n                    return reject(err || Error('Invalid response while listing containers'))\n                }\n\n                const list = []\n                for (const bucket of data.Buckets) {\n                    if (bucket && bucket.Name) {\n                        list.push(bucket.Name)\n                    }\n                }\n                resolve(list)\n            })\n        })\n    }\n\n    /**\n     * Removes a container from the server\n     *\n     * @param container - Name of the container\n     * @returns Promise that resolves once the container has been removed\n     * @async\n     */\n    deleteContainer(container: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const methodOptions = {\n                Bucket: container\n            } as S3.DeleteBucketRequest\n            this._client.deleteBucket(methodOptions, function(err, data) {\n                if (err || !data) {\n                    return reject(err || Error('Invalid response while deleting container'))\n                }\n\n                resolve()\n            })\n        })\n    }\n\n    /**\n     * Uploads a stream to the object storage server\n     *\n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param data - Object data or stream. Can be a Stream (Readable Stream), Buffer or string.\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary and additional S3-specific options\n     * @returns Promise that resolves once the object has been uploaded\n     * @async\n     */\n    putObject(container: string, path: string, data: Stream|string|Buffer, options?: AwsS3PutObjectOptions): Promise<void> {\n        if (!options) {\n            options = {}\n        }\n\n        return new Promise((resolve, reject) => {\n            // Build all the methodOptions dictionary\n            const methodOptions = Object.assign(\n                {},\n                {\n                    Body: data,\n                    Bucket: container,\n                    Key: path\n                },\n                PutObjectMethodOptions(options)\n            ) as S3.PutObjectRequest\n\n            // Send the request\n            this._client.putObject(methodOptions, function(err, response) {\n                if (err || !response || !response.ETag) {\n                    return reject(err || Error('Invalid response while putting object'))\n                }\n\n                resolve()\n            })\n        })\n    }\n\n    /**\n     * Requests an object from the server. The method returns a Promise that resolves to a Readable Stream containing the data.\n     *\n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Readable Stream containing the object's data\n     * @async\n     */\n    getObject(container: string, path: string): Promise<Stream> {\n        const methodOptions = {\n            Bucket: container,\n            Key: path\n        } as S3.GetObjectRequest\n\n        const stream = this._client.getObject(methodOptions).createReadStream()\n        return Promise.resolve(stream)\n    }\n\n    /**\n     * Requests an object from the server. The method returns a Promise that resolves to a Readable Stream containing the data.\n     *\n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Readable Stream containing the object's data\n     * @async\n     */\n    async getObjectBase64(container: string, path: string): Promise<string> {\n        const methodOptions = {\n            Bucket: container,\n            Key: path\n        } as S3.GetObjectRequest\n\n        const data = await this._client.getObject(methodOptions).promise();\n        return data.Body.toString('base64');\n    }\n\n    /**\n     * Returns a list of objects with a given prefix (folder). The list is not recursive, so prefixes (folders) are returned as such.\n     *\n     * @param container - Name of the container\n     * @param prefix - Prefix (folder) inside which to list objects\n     * @returns List of elements returned by the server\n     * @async\n     */\n    listObjects = (container: string, prefix?: string): Promise<ListResults> => {\n        const files = [];\n        const folders = [];\n        const { createListItemPrefix, createListItemObject } = this.factories;\n        const makeRequest = (continuationToken?: string): Promise<ListResults> => {\n            return new Promise((resolve, reject) => {\n                const methodOptions = {\n                    Bucket: container,\n                    ContinuationToken: continuationToken || undefined,\n                    Delimiter: '/',\n                    MaxKeys: 500,\n                    Prefix: prefix\n                } as S3.ListObjectsV2Request\n                this._client.listObjectsV2(methodOptions, function(err, data) {\n                    if (err) {\n                        return reject(err)\n                    }\n\n                    // Add all objects\n                    for (const el of data.Contents) {\n                        const add = createListItemObject();\n                        add.lastModified = el.LastModified;\n                        add.path = el.Key;\n                        add.size = el.Size;\n\n                        // Check if the ETag is the MD5 of the file (this is the case for files that weren't uploaded in multiple parts, in which case there's a dash in the ETag)\n                        if (el.ETag.indexOf('-') >= 0) {\n                            add.contentMD5 = el.ETag\n                        }\n\n                        files.push(add)\n                    }\n\n                    // Add all prefixes\n                    for (const el of data.CommonPrefixes) {\n                        const dir = createListItemPrefix();\n                        dir.prefix = el.Prefix;\n                        folders.push(dir);\n                    }\n\n                    // Check if we have to make another request\n                    if (data.ContinuationToken) {\n                        resolve(makeRequest(data.ContinuationToken))\n                    }\n                    else {\n                        resolve({files, folders})\n                    }\n                })\n            })\n        }\n\n        return makeRequest()\n    }\n\n    /**\n     * Removes an object from the server\n     *\n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Promise that resolves once the object has been removed\n     * @async\n     */\n    deleteObject(container: string, path: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const methodOptions = {\n                Bucket: container,\n                Key: path\n            } as S3.DeleteObjectRequest\n\n            this._client.deleteObject(methodOptions, function(err, data) {\n                if (err || !data) {\n                    return reject(err || Error('Invalid response while deleting object'))\n                }\n\n                resolve()\n            })\n        })\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use to request an object from the server with a GET request, even if the object is private.\n     *\n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedGetUrl(container: string, path: string, ttl?: number): Promise<string> {\n        return this.presignedUrl('getObject', container, path, ttl)\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use for PUT operations on an object in the server, even if the object is private.\n     *\n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary and additional S3-specific options\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedPutUrl(container: string, path: string, options?: AwsS3PutObjectOptions, ttl?: number): Promise<string> {\n        const additionalMethodOptions = PutObjectMethodOptions(options)\n        return this.presignedUrl('putObject', container, path, additionalMethodOptions, ttl)\n    }\n\n    /**\n     * Returns a presigned URL for the specific S3 operation.\n     *\n     * @param operation - S3 operation: \"getObject\" or \"putObject\"\n     * @param container - Name of the container\n     * @param path - Path of the target object, inside the container\n     * @param additionalMethodOptions - Additional options to pass to the method\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for the specified operation\n     * @async\n     */\n    private presignedUrl(operation: 'getObject'|'putObject', container: string, path: string, additionalMethodOptions: any, ttl?: number): Promise<string> {\n        if (!ttl || ttl < 1) {\n            ttl = 86400\n        }\n\n        const methodOptions = Object.assign(\n            {},\n            {\n                Bucket: container,\n                Expires: ttl,\n                Key: path\n            },\n            additionalMethodOptions\n        )\n\n        return new Promise((resolve, reject) => {\n            this._client.getSignedUrl(operation, methodOptions, function(err, url) {\n                if (err || !url) {\n                    return reject(err || Error('Invalid result when generating the presigned url'))\n                }\n\n                resolve(url)\n            })\n        })\n    }\n}\n",
    "absorb/SMCloudStore/azure-storage/src/AzureStorageProvider.ts": "'use strict'\n\nimport {ListItemObject, ListItemPrefix, ListResults, PutObjectOptions, StorageProvider} from '@smcloudstore/core/dist/StorageProvider'\nimport * as Azure from 'azure-storage'\nimport {Stream, Transform} from 'stream'\n\n/**\n * Connection options for an Azure Blob Storage provider.\n */\ninterface AzureStorageConnectionObject {\n    /** Name of the storage account */\n    storageAccount: string\n    /** Access key (secret key) for the storage account */\n    storageAccessKey: string\n    /** Endpoint to use. Default is `core.windows.net` */\n    host?: string\n}\ntype AzureStorageConnectionOptions = string | AzureStorageConnectionObject\n\n/**\n * Options passed when creating a container\n */\ninterface AzureStorageCreateContainerOptions {\n    /** \n     * Determine access level for all files in the container. Defaults to 'none' if not specified.\n     * 'public' and 'private' are not standard in the Azure APIs, and are aliased to 'container' and 'none' respectively.\n     */\n    access?: 'blob' | 'container' | 'none' | 'public' | 'private'\n}\n\n/**\n * Returns the request options dictionary for the `putObject` method\n * \n * @param options - Dictionary with options\n * @returns Dictionary with options to send to Azure\n */\nfunction PutObjectRequestOptions(options: PutObjectOptions): Azure.BlobService.CreateBlockBlobRequestOptions {\n    // Azure wants some headers, like Content-Type, outside of the metadata object\n    const requestOptions = {\n        contentSettings: {},\n        metadata: {}\n    } as Azure.BlobService.CreateBlockBlobRequestOptions\n\n    // If no other options...\n    if (!options) {\n        return requestOptions\n    }\n\n    // Metadata\n    if (options.metadata) {\n        requestOptions.metadata = {}\n\n        for (const key in options.metadata) {\n            if (!options.metadata.hasOwnProperty(key)) {\n                continue\n            }\n\n            const keyLowerCase = key.toLowerCase()\n            switch (keyLowerCase) {\n                case 'cache-control':\n                    requestOptions.contentSettings.cacheControl = options.metadata[key]\n                    break\n                case 'content-disposition':\n                    requestOptions.contentSettings.contentDisposition = options.metadata[key]\n                    break\n                case 'content-encoding':\n                    requestOptions.contentSettings.contentEncoding = options.metadata[key]\n                    break\n                case 'content-language':\n                    requestOptions.contentSettings.contentLanguage = options.metadata[key]\n                    break\n                case 'content-md5':\n                    requestOptions.contentSettings.contentMD5 = options.metadata[key]\n                    break\n                case 'content-type':\n                    requestOptions.contentSettings.contentType = options.metadata[key]\n                    break\n                default:\n                    requestOptions.metadata[key] = options.metadata[key]\n                    break\n            }\n        }\n    }\n\n    return requestOptions\n}\n\n/**\n * Client to interact with Azure Blob Storage.\n */\nclass AzureStorageProvider extends StorageProvider {\n    protected _client: Azure.BlobService\n\n    /**\n     * Initializes a new client to interact with Azure Blob Storage.\n     * \n     * @param connection - Connection options, passed as an object with interface `AzureStorageConnectionObject`, or as a connection string (e.g. as returned from the Azure Portal)\n     */\n    constructor(connection: AzureStorageConnectionOptions) {\n        super(connection)\n\n        // Provider name\n        this._provider = 'azure-storage'\n\n        // The Azure library will validate the connection object\n        if (typeof connection == 'string') {\n            this._client = Azure.createBlobService(connection as string)\n        }\n        else {\n            this._client = Azure.createBlobService(connection.storageAccount, connection.storageAccessKey, connection.host || undefined)\n        }\n    }\n\n    /**\n     * Create a container on the server.\n     * \n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container, including the access level (defaults to 'none' if not specified)\n     * @returns Promise that resolves once the container has been created. The promise doesn't contain any meaningful return value.\n     * @async\n     */\n    createContainer(container: string, options?: AzureStorageCreateContainerOptions): Promise<void> {\n        return this._createContainerInternal(container, false, options).then(() => {\n            return\n        })\n    }\n\n    /**\n     * Check if a container exists.\n     * \n     * @param container - Name of the container\n     * @returns Promises that resolves with a boolean indicating if the container exists.\n     * @async\n     */\n    isContainer(container: string): Promise<boolean> {\n        return new Promise((resolve, reject) => {\n            this._client.getContainerProperties(container, (err, response) => {\n                if (err) {\n                    // If error is \"Not Found\", then just return false\n                    return err.toString().match(/NotFound/) ?\n                        resolve(false) :\n                        reject(err)\n                }\n                else if (response && response.name) {\n                    return resolve(true)\n                }\n                else {\n                    throw Error('Response does not contain storage account name')\n                }\n            })\n        })\n    }\n\n    /**\n     * Create a container on the server if it doesn't already exist.\n     * \n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container, including the access level (defaults to 'none' if not specified)\n     * @returns Promise that resolves once the container has been created\n     * @async\n     */\n    ensureContainer(container: string, options?: AzureStorageCreateContainerOptions): Promise<void> {\n        return this._createContainerInternal(container, true, options).then(() => {\n            return\n        })\n    }\n\n    /**\n     * Lists all containers belonging to the user\n     * \n     * @returns Promise that resolves with an array of all the containers\n     * @async\n     */\n    listContainers(): Promise<string[]> {\n        const resultList = [] as string[]\n\n        // The response might be split into multiple pages, so we need to be prepared to make multiple requests and use a continuation token\n        const requestPromise = (continuationToken: Azure.common.ContinuationToken): Promise<string[]> => {\n            return new Promise((resolve, reject) => {\n                this._client.listContainersSegmented(continuationToken, (err, response) => {\n                    if (err) {\n                        return reject(err)\n                    }\n\n                    // Iterate through entries\n                    if (!response.entries || !Array.isArray(response.entries)) {\n                        throw Error('Response does not contain an entries array')\n                    }\n                    for (const i in response.entries) {\n                        if (response.entries.hasOwnProperty(i)) {\n                            const e = response.entries[i]\n                            if (!e || !e.name) {\n                                throw Error('Invalid entry')\n                            }\n                            resultList.push(e.name)\n                        }\n                    }\n\n                    // Check if we have a continuation token\n                    if (response.continuationToken) {\n                        // We have a token, so need to make another request, returning a promise\n                        resolve(requestPromise(response.continuationToken))\n                    }\n                    else {\n                        // No token, so return the list of what we've collected\n                        resolve(resultList)\n                    }\n                })\n            })\n        }\n\n        return requestPromise(null)\n    }\n\n    /**\n     * Removes a container from the server\n     * \n     * @param container - Name of the container\n     * @returns Promise that resolves once the container has been removed\n     * @async\n     */\n    deleteContainer(container: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._client.deleteContainer(container, (err, response) => {\n                if (err) {\n                    return reject(err)\n                }\n                else if (!response || !response.isSuccessful) {\n                    throw Error('Response was empty or not successful')\n                }\n                else {\n                    return resolve()\n                }\n            })\n        })\n    }\n\n    /**\n     * Uploads a stream to the object storage server\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param data - Object data or stream. Can be a Stream (Readable Stream), Buffer or string.\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary\n     * @returns Promise that resolves once the object has been uploaded\n     * @async\n     */\n    putObject(container: string, path: string, data: Stream|string|Buffer, options?: PutObjectOptions): Promise<void> {\n        if (!data) {\n            throw Error('Argument data is empty')\n        }\n\n        const requestOptions = PutObjectRequestOptions(options)\n\n        return new Promise((resolve, reject) => {\n            const callback = (err, response) => {\n                if (err) {\n                    return reject(err)\n                }\n                // When uploading a string or Buffer, we have a complex object; for a stream, we just have a list of committedBlocks in the response\n                if (!response || (!response.name && !response.commmittedBlocks)) {\n                    throw Error('Response was empty or not successful')\n                }\n                else {\n                    return resolve()\n                }\n            }\n\n            // Check if we have a stream\n            if (typeof data == 'object' && typeof (data as any).pipe == 'function') {\n                (data as Stream).pipe(this._client.createWriteStreamToBlockBlob(container, path, requestOptions, callback))\n            }\n            // Strings and Buffers are supported too\n            else if (typeof data == 'string' || (typeof data == 'object' && Buffer.isBuffer(data))) {\n                this._client.createBlockBlobFromText(container, path, data, requestOptions, callback)\n            }\n            // Fail otherwise\n            else {\n                throw Error('Argument data must be a Stream, a String or a Buffer')\n            }\n        })\n    }\n\n    /**\n     * Requests an object from the server. The method returns a Promise that resolves to a Readable Stream containing the data.\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Readable Stream containing the object's data\n     * @async\n     */\n    getObject(container: string, path: string): Promise<Stream> {\n        // Create a transform stream we can return in the result, which is readable\n        const duplexStream = new Transform({\n            transform: (chunk, encoding, done) => {\n                done(null, chunk)\n            }\n        })\n        // Request the data\n        this._client.getBlobToStream(container, path, duplexStream, (err, response) => {\n            // Pass errors to the stream as events\n            if (err) {\n                duplexStream.destroy((typeof err == 'object' && err instanceof Error) ? err : Error(err))\n            }\n        })\n\n        // Wrap this in a promise because the method expects result to be async\n        return Promise.resolve(duplexStream)\n    }\n\n    /**\n     * Returns a list of objects with a given prefix (folder). The list is not recursive, so prefixes (folders) are returned as such.\n     * \n     * @param container - Name of the container\n     * @param prefix - Prefix (folder) inside which to list objects\n     * @returns List of elements returned by the server\n     * @async\n     */\n    listObjects(container: string, prefix?: string): Promise<ListResults> {\n        const resultList = []\n\n        // The response might be split into multiple pages, so we need to be prepared to make multiple requests and use a continuation token\n        const requestPromise = (type: 'blob'|'prefix', continuationToken: Azure.common.ContinuationToken): Promise<ListResults> => {\n            return new Promise((resolve, reject) => {\n                // The following properties/methods aren't defined in the typings file\n                const blobTypeConstants = (Azure.Constants.BlobConstants as any).ListBlobTypes\n                const listBlobType = (type == 'prefix') ? blobTypeConstants.Directory : blobTypeConstants.Blob\n\n                const clientAny = this._client as any\n                clientAny._listBlobsOrDircotriesSegmentedWithPrefix(container, prefix || null, continuationToken, listBlobType, {delimiter: '/'}, (err, response) => {\n                    if (err) {\n                        return reject(err)\n                    }\n\n                    // Iterate through the list of items and add objects to the result list\n                    for (const i in response.entries) {\n                        if (response.entries.hasOwnProperty(i)) {\n                            const e = response.entries[i]\n\n                            // Is this a prefix (folder) or object? If etag is present, it's an object\n                            if (e.etag) {\n                                const res = {\n                                    creationTime: e.creationTime ? new Date(e.creationTime) : undefined,\n                                    lastModified: e.lastModified ? new Date(e.lastModified) : undefined,\n                                    path: e.name,\n                                    size: parseInt(e.contentLength, 10)\n                                } as ListItemObject\n                                /* istanbul ignore else */\n                                if (e.contentSettings && e.contentSettings.contentMD5) {\n                                    // Azure returns the Content-MD5 header as base64, so convert it to HEX\n                                    res.contentMD5 = Buffer.from(e.contentSettings.contentMD5, 'base64').toString('hex')\n                                }\n                                /* istanbul ignore else */\n                                if (e.contentSettings && e.contentSettings.contentType) {\n                                    res.contentType = e.contentSettings.contentType\n                                }\n                                resultList.push(res)\n                            }\n                            else {\n                                resultList.push({\n                                    prefix: e.name\n                                } as ListItemPrefix)\n                            }\n                        }\n                    }\n\n                    // Check if we have a continuation token\n                    if (response.continuationToken) {\n                        // We have a token, so need to make another request, returning a promise\n                        resolve(requestPromise(type, response.continuationToken))\n                    }\n                    else {\n                        // No token, so return the list of what we've collected\n                        resolve(resultList)\n                    }\n                })\n            })\n        }\n\n        return Promise.all([\n            requestPromise('blob', null),\n            requestPromise('prefix', null)\n        ]).then(() => {\n            return resultList\n        })\n    }\n\n    /**\n     * Removes an object from the server\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Promise that resolves once the object has been removed\n     * @async\n     */\n    deleteObject(container: string, path: string): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this._client.deleteBlob(container, path, (err, response) => {\n                if (err) {\n                    return reject(err)\n                }\n                else if (!response || !response.isSuccessful) {\n                    throw Error('Response was empty or not successful')\n                }\n                else {\n                    return resolve()\n                }\n            })\n        })\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use to request an object from the server with a GET request, even if the object is private.\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedGetUrl(container: string, path: string, ttl?: number): Promise<string> {\n        return this.presignedUrl('getObject', container, path, ttl)\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use for PUT operations on an object in the server, even if the object is private.\n     * \n     * Notes on using presigned URLs to upload files to Azure Storage using PUT:\n     * \n     * 1. The maximum file size is 100MB; larger files will trigger an error.\n     * 2. You need to set the `X-MS-Blob-Type: BlockBlob` header for uploads to succeed\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedPutUrl(container: string, path: string, options?: PutObjectOptions, ttl?: number): Promise<string> {\n        const requestOptions = PutObjectRequestOptions(options)\n        return this.presignedUrl('putObject', container, path, requestOptions.contentSettings, ttl)\n    }\n\n    /**\n     * Returns a presigned URL for the specific operation.\n     * \n     * @param operation - Operation: \"getObject\" or \"putObject\"\n     * @param container - Name of the container\n     * @param path - Path of the target object, inside the container\n     * @param contentSettings - Additional headers that are required\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for the specified operation\n     * @async\n     */\n    private presignedUrl(operation: 'getObject'|'putObject', container: string, path: string, contentSettings?: any, ttl?: number): Promise<string> {\n        if (!ttl || ttl < 1) {\n            ttl = 86400\n        }\n\n        // Remove contentMD5 from contentSettings, as that can't be known\n        if (contentSettings && contentSettings.contentMD5) {\n            delete contentSettings.contentMD5\n        }\n\n        // Policy\n        const policy = {\n            AccessPolicy: {\n                Expiry: new Date(Date.now() + ttl * 1000), // Convert TTL to a point in time\n                Permissions: (operation == 'getObject') ? Azure.BlobUtilities.SharedAccessPermissions.READ : Azure.BlobUtilities.SharedAccessPermissions.WRITE\n            }\n        } as Azure.common.SharedAccessPolicy\n\n        const signature = this._client.generateSharedAccessSignature(container, path, policy, contentSettings)\n\n        const url = this._client.getUrl(container, path, signature)\n\n        return Promise.resolve(url)\n    }\n\n    /**\n     * Create a container on the server, choosing whether to use the \"ifNotExists\" method or not\n     * @param container - Name of the container\n     * @param ifNotExists - If true, use the \"ifNotExists\" method variant\n     * @param options - Dictionary with options for creating the container, including the access level (defaults to 'none' if not specified)\n     * @returns Promise that resolves once the container has been created. The promise doesn't contain any meaningful return value.\n     * @async\n     */\n    private _createContainerInternal(container: string, ifNotExists: boolean, options?: AzureStorageCreateContainerOptions): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const containerOpts = {\n                // All containers are private by default\n                publicAccessLevel: null\n            } as Azure.BlobService.CreateContainerOptions\n            // Check if the user wants a public container\n            if (options && options.access) {\n                if (options.access == 'blob') {\n                    containerOpts.publicAccessLevel = 'blob'\n                }\n                else if (options.access == 'container' || options.access == 'public') {\n                    containerOpts.publicAccessLevel = 'container'\n                }\n            }\n\n            const callback = (err, response) => {\n                if (err) {\n                    return reject(err)\n                }\n                else if (response && response.name) {\n                    return resolve()\n                }\n                else {\n                    throw Error('Response does not contain storage account name')\n                }\n            }\n\n            if (ifNotExists) {\n                this._client.createContainerIfNotExists(container, containerOpts, callback)\n            }\n            else {\n                this._client.createContainer(container, containerOpts, callback)\n            }\n        })\n    }\n}\n\nexport = AzureStorageProvider\n",
    "absorb/SMCloudStore/core/src/StreamUtils.ts": "'use strict'\n\nimport {Readable, Stream} from 'stream'\n\n/**\n * Returns a boolean indicating whether a value is a Stream \n * \n * @param val - Value to test\n * @returns Boolean indicating whether `val` is a Stream\n */\nexport function IsStream(val: any): boolean {\n    return (typeof val == 'object' && typeof val.pipe == 'function')\n}\n\n/**\n * Returns a boolean indicating whether a value is a Readable Stream \n * \n * @param val - Value to test\n * @returns Boolean indicating whether `val` is a Readable Stream\n */\nexport function IsReadableStream(val: any): boolean {\n    return (IsStream(val) && typeof val.read === 'function')\n}\n\n/**\n * Returns a Buffer with data read from the stream.\n * \n * @param stream - Stream to read data from\n * @returns Promise that resolves to a Buffer containing the data from the stream\n * @async\n */\nexport function StreamToBuffer(stream: Stream): Promise<Buffer> {\n    return new Promise((resolve, reject) => {\n        const buffersCache = []\n        stream.on('data', (data: Buffer) => {\n            buffersCache.push(data)\n        })\n        stream.on('end', () => {\n            resolve(Buffer.concat(buffersCache))\n        })\n        stream.on('error', (error) => {\n            reject(error)\n        })\n    })\n}\n\n/**\n * Returns a string with data read from the stream.\n * \n * @param stream - Stream to read data from\n * @param encoding - String encoding to use; defaults to utf8\n * @returns Promise that resolves to a string containing the data from the stream\n * @async\n */\nexport function StreamToString(stream: Stream, encoding?: string): Promise<string> {\n    return StreamToBuffer(stream)\n        .then((buffer) => {\n            return buffer.toString(encoding || 'utf8')\n        })\n}\n\n/**\n * Reads a certain amount of bytes from the beginning of a Stream, returning a Buffer.\n * The amount of data read might be smaller if the stream ends before it could return the amount of data requested.\n * \n * If the `peek` argument is true, the data is put back into the beginning of the stream, so it can be consumed by another function\n * \n * Note that this function will pause the stream, so you might need to call the `resume` method on it to make it flow again.\n * \n * If passing a stream that has already ended, the function could enter into an infinite loop and return a Promise that never resolves. It's your responsibility to ensure that streams passed to this function still have data to return.\n * \n * @param stream - Readable Stream to read data from\n * @param size - Amount of data to read\n * @param peek - If true, after reading the data it is added back to the beginning of the stream\n * @returns Promise that resolves to a Buffer with a length of at most `size`\n * @async\n */\nexport function ReadChunkFromStream(stream: Readable, size: number, peek?: boolean): Promise<Buffer> {\n    // Return an error if stream is not a Readable Stream\n    if (!stream || !IsReadableStream(stream)) {\n        throw Error('Argument stream must be a Readable Stream')\n    }\n\n    // Ensure the stream isn't flowing\n    stream.pause()\n\n    // Returns a promise that resolves when we have read enough data from the stream.\n    return new Promise((resolve, reject) => {\n        // Callbacks on events\n        const errorEvent = (err) => {\n            reject(err)\n        }\n        const readableEvent = () => {\n            // If we don't have enough data, and the stream hasn't ended, this will return null\n            const data = stream.read(size)\n            if (data) {\n                if (peek) {\n                    // Put the data we read back into the stream\n                    stream.unshift(data)\n                }\n\n                // Stop listening on callbacks\n                stream.removeListener('error', errorEvent)\n\n                // Return the data\n                resolve(data)\n            }\n            else {\n                // We need to wait longer for more data\n                stream.once('readable', readableEvent)\n            }\n        }\n\n        // Listen to the readable event and in case of error\n        stream.once('readable', readableEvent)\n        stream.on('error', errorEvent)\n    })\n}\n",
    "absorb/SMCloudStore/core/src/Utils.ts": "'use strict'\n\n/**\n * Returns a Promise that resolves after a certain amlount of time (in ms)\n * \n * @param delay - ms to wait\n * @returns Promise that resolves after the delay\n * @async\n */\nexport function WaitPromise(delay: number): Promise<void> {\n    return new Promise((resolve) => {\n        setTimeout(resolve, delay)\n    })\n}\n",
    "absorb/SMCloudStore/generic-s3/src/GenericS3Provider.ts": "'use strict'\n\nimport {ListItemObject, ListItemPrefix, ListResults, PutObjectOptions, StorageProvider} from '@smcloudstore/core/dist/StorageProvider'\nimport {Client as MinioClient, ClientOptions as MinioClientOptions} from 'minio'\nimport {Stream} from 'stream'\n\n/**\n * Client to interact with a generic S3 object storage server, using the Minio library.\n */\nclass GenericS3Provider extends StorageProvider {\n    protected _client: MinioClient\n\n    /**\n     * Initializes a new client to interact with Minio.\n     * \n     * @param connection - Dictionary with connection options.\n     */\n    constructor(connection: MinioClientOptions) {\n        if (!connection || !Object.keys(connection).length) {\n            throw new Error('Connection argument is empty')\n        }\n\n        super(connection)\n\n        // Provider name\n        this._provider = 'generic-s3'\n\n        // The Minio library will validate the connection object\n        this._client = new MinioClient(connection)\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server.\n     * \n     * @param container - Name of the container\n     * @param options - The option argument is ignored by this provider.\n     * @returns Promise that resolves once the container has been created. The promise doesn't contain any meaningful return value.\n     * @async\n     */\n    createContainer(container: string, options?: any): Promise<void> {\n        const region = ((this._client as any).region) || ''\n\n        // This returns a promise\n        return this._client.makeBucket(container, region)\n    }\n\n    /**\n     * Check if a container exists.\n     * \n     * @param container - Name of the container\n     * @returns Promises that resolves with a boolean indicating if the container exists.\n     * @async\n     */\n    isContainer(container: string): Promise<boolean> {\n        return this._client.bucketExists(container)\n            .then((result) => {\n                return !!result\n            })\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server if it doesn't already exist.\n     * \n     * @param container - Name of the container\n     * @param options - The option argument is ignored by this provider.\n     * @returns Promise that resolves once the container has been created\n     * @async\n     */\n    ensureContainer(container: string, options?: any): Promise<void> {\n        return this.isContainer(container).then((exists) => {\n            if (!exists) {\n                return this.createContainer(container, options)\n            }\n        })\n    }\n\n    /**\n     * Lists all containers belonging to the user\n     * \n     * @returns Promise that resolves with an array of all the containers\n     * @async\n     */\n    listContainers(): Promise<string[]> {\n        return this._client.listBuckets()\n            .then((list) => list.map((el) => (el && el.name) || undefined))\n    }\n\n    /**\n     * Removes a container from the server\n     * \n     * @param container - Name of the container\n     * @returns Promise that resolves once the container has been removed\n     * @async\n     */\n    deleteContainer(container: string): Promise<void> {\n        return this._client.removeBucket(container)\n    }\n\n    /**\n     * Uploads a stream to the object storage server\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param data - Object data or stream. Can be a Stream (Readable Stream), Buffer or string.\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary\n     * @returns Promise that resolves once the object has been uploaded\n     * @async\n     */\n    putObject(container: string, path: string, data: Stream|string|Buffer, options?: PutObjectOptions): Promise<void> {\n        return Promise.resolve(this._client.putObject(container, path, data, null, (options && options.metadata)))\n    }\n\n    /**\n     * Requests an object from the server. The method returns a Promise that resolves to a Readable Stream containing the data.\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Readable Stream containing the object's data\n     * @async\n     */\n    getObject(container: string, path: string): Promise<Stream> {\n        return this._client.getObject(container, path)\n    }\n\n    /**\n     * Returns a list of objects with a given prefix (folder). The list is not recursive, so prefixes (folders) are returned as such.\n     * \n     * @param container - Name of the container\n     * @param prefix - Prefix (folder) inside which to list objects\n     * @returns List of elements returned by the server\n     * @async\n     */\n    listObjects(container: string, prefix?: string): Promise<ListResults> {\n        return new Promise((resolve, reject) => {\n            const stream = this._client.listObjectsV2(container, prefix, false) as Stream\n            const list = [] as ListResults\n            stream.on('data', (obj) => {\n                let res\n\n                // If we have a file, add path, lastModified and size\n                if (obj.name && obj.lastModified) {\n                    res = {\n                        lastModified: obj.lastModified,\n                        path: obj.name,\n                        size: obj.size\n                    } as ListItemObject\n                }\n                // If we have a prefix (folder) instead\n                else if (obj.prefix) {\n                    res = {\n                        prefix: obj.prefix\n                    } as ListItemPrefix\n                }\n                else {\n                    throw Error('Invalid object returned from the server')\n                }\n\n                list.push(res)\n            })\n            stream.on('error', (err) => {\n                reject(err)\n            })\n            stream.on('end', () => {\n                resolve(list)\n            })\n        })\n    }\n\n    /**\n     * Removes an object from the server\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Promise that resolves once the object has been removed\n     * @async\n     */\n    deleteObject(container: string, path: string): Promise<void> {\n        return this._client.removeObject(container, path)\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use to request an object from the server with a GET request, even if the object is private.\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedGetUrl(container: string, path: string, ttl?: number): Promise<string> {\n        if (!ttl || ttl < 1) {\n            ttl = 86400\n        }\n\n        return this._client.presignedGetObject(container, path, ttl)\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use for PUT operations on an object in the server, even if the object is private.\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param options - This argument is ignored by the GenericS3 provider\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedPutUrl(container: string, path: string, options?: any, ttl?: number): Promise<string> {\n        if (!ttl || ttl < 1) {\n            ttl = 86400\n        }\n\n        return this._client.presignedPutObject(container, path, ttl)\n    }\n}\n\nexport = GenericS3Provider\n",
    "absorb/SMCloudStore/google-cloud-storage/src/GoogleCloudStorageProvider.ts": "'use strict'\n\nimport {CreateBucketRequest, CreateWriteStreamOptions, GetFilesOptions, Storage} from '@google-cloud/storage'\nimport {ListItemObject, ListItemPrefix, ListResults, PutObjectOptions, StorageProvider} from '@smcloudstore/core/dist/StorageProvider'\nimport {IsStream} from '@smcloudstore/core/dist/StreamUtils'\nimport {Duplex, Stream} from 'stream'\n\n/**\n * Connection options for a Google Cloud Storage provider.\n */\ninterface GoogleCloudConnectionOptions {\n    /** ID of the Google Cloud project */\n    projectId: string\n    /** Path of the JSON file containing the keys */\n    keyFilename: string\n}\n\n/**\n * Options passed when creating a container\n */\ninterface GoogleCloudCreateContainerOptions {\n    /** Storage class to use. Defaults to 'multi_regional' */\n    class?: 'multi_regional' | 'regional' | 'nearline' | 'coldline'\n\n    /** Region in which to create the container (or multi-regional location if using multi_regional storage). Defaults to 'us' is class is 'multi_regional'; 'us-central1' otherwise. */\n    region?: string\n}\n\n/**\n * Client to interact with Google Cloud Storage.\n */\nclass GoogleCloudStorageProvider extends StorageProvider {\n    protected _client: Storage\n\n    /**\n     * Initializes a new client to interact with Minio.\n     * \n     * @param connection - Dictionary with connection options.\n     */\n    constructor(connection: GoogleCloudConnectionOptions) {\n        super(connection)\n\n        // Provider name\n        this._provider = 'google-cloud-storage'\n\n        // Check if we have a connection\n        if (!connection || !Object.keys(connection).length) {\n            // We might have auth data passed via environmental variables, which will be picked up by the library\n            if (!process.env.GCLOUD_PROJECT || !process.env.GOOGLE_APPLICATION_CREDENTIALS) {\n                throw new Error('Connection argument is empty')\n            }\n        }\n\n        // The Google Cloud library will validate the connection object\n        this._client = new Storage(connection)\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server.\n     * \n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container, including the region\n     * @returns Promise that resolves once the container has been created. The promise doesn't contain any meaningful return value.\n     * @async\n     */\n    createContainer(container: string, options?: GoogleCloudCreateContainerOptions): Promise<void> {\n        // Get storage options\n        if (!options) {\n            options = {}\n        }\n        const metadata = {} as CreateBucketRequest\n\n        // Set storage class and default location\n        switch (options.class) {\n            case 'multi_regional':\n                metadata.multiRegional = true\n                metadata.location = 'us'\n                break\n            case 'regional':\n                metadata.regional = true\n                metadata.location = 'us-central1'\n                break\n            case 'coldline':\n                metadata.coldline = true\n                metadata.location = 'us-central1'\n                break\n            case 'nearline':\n                metadata.nearline = true\n                metadata.location = 'us-central1'\n                break\n        }\n\n        // Check if we have a location/region\n        if (options.region) {\n            metadata.location = options.region\n        }\n\n        // Create the bucket, returning a promise\n        const bucket = this._client.bucket(container)\n        return bucket.create(metadata).then(() => {\n            return\n        })\n    }\n\n    /**\n     * Check if a container exists.\n     * \n     * @param container - Name of the container\n     * @returns Promises that resolves with a boolean indicating if the container exists.\n     * @async\n     */\n    isContainer(container: string): Promise<boolean> {\n        const bucket = this._client.bucket(container)\n\n        return bucket.exists().then((response) => {\n            return !!response[0]\n        })\n    }\n\n    /**\n     * Create a container (\"bucket\") on the server if it doesn't already exist.\n     * \n     * @param container - Name of the container\n     * @param options - Dictionary with options for creating the container, including the region\n     * @returns Promise that resolves once the container has been created\n     * @async\n     */\n    ensureContainer(container: string, options?: GoogleCloudCreateContainerOptions): Promise<void> {\n        return this.isContainer(container).then((exists) => {\n            if (!exists) {\n                return this.createContainer(container, options)\n            }\n        })\n    }\n\n    /**\n     * Lists all containers belonging to the user\n     * \n     * @returns Promise that resolves with an array of all the containers\n     * @async\n     */\n    listContainers(): Promise<string[]> {\n        return this._client.getBuckets().then((list) => {\n            if (!list || !list[0] || !list[0].length) {\n                return []\n            }\n            else {\n                return list[0].map((el) => (el && el.name))\n            }\n        })\n    }\n\n    /**\n     * Removes a container from the server\n     * \n     * @param container - Name of the container\n     * @returns Promise that resolves once the container has been removed\n     * @async\n     */\n    deleteContainer(container: string): Promise<void> {\n        const bucket = this._client.bucket(container)\n        return bucket.delete().then(() => {\n            return\n        })\n    }\n\n    /**\n     * Uploads a stream to the object storage server\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param data - Object data or stream. Can be a Stream (Readable Stream), Buffer or string.\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary\n     * @returns Promise that resolves once the object has been uploaded\n     * @async\n     */\n    putObject(container: string, path: string, data: Stream|string|Buffer, options?: PutObjectOptions): Promise<void> {\n        if (!options) {\n            options = {}\n        }\n\n        const bucket = this._client.bucket(container)\n        const file = bucket.file(path)\n\n        // Convert strings and buffers to streams\n        let dataStream: Stream\n        if (IsStream(data)) {\n            dataStream = data as Stream\n        }\n        else {\n            dataStream = new Duplex()\n            // Buffers\n            if (typeof data == 'object' && Buffer.isBuffer(data)) {\n                (dataStream as Duplex).push(data)\n            }\n            else if (typeof data == 'string') {\n                (dataStream as Duplex).push(data, 'utf8')\n            }\n            else {\n                throw Error('Invalid data argument: must be a stream, a Buffer or a string')\n            }\n            (dataStream as Duplex).push(null)\n        }\n\n        return new Promise((resolve, reject) => {\n            // Clone the metadata object before modifying it\n            const metadataClone = Object.assign({}, options.metadata) as {[k: string]: string}\n\n            const streamOptions = {\n                metadata: metadataClone,\n                resumable: false,\n                validation: 'md5'\n            } as CreateWriteStreamOptions\n\n            // Check if we have a Content-Type (case-insensitive)\n            for (const key in metadataClone) {\n                if (!metadataClone.hasOwnProperty(key)) {\n                    continue\n                }\n\n                if (key.toLowerCase() == 'content-type') {\n                    streamOptions.contentType = metadataClone[key]\n                    delete metadataClone[key]\n                    break\n                }\n            }\n\n            dataStream.pipe(file.createWriteStream(streamOptions))\n                .on('error', (err) => {\n                    reject(err)\n                })\n                .on('finish', () => {\n                    resolve()\n                })\n        })\n    }\n\n    /**\n     * Requests an object from the server. The method returns a Promise that resolves to a Readable Stream containing the data.\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Readable Stream containing the object's data\n     * @async\n     */\n    getObject(container: string, path: string): Promise<Stream> {\n        const bucket = this._client.bucket(container)\n        const file = bucket.file(path)\n\n        // For Google Cloud Storage, this method doesn't actually need to be asynchronous\n        return Promise.resolve(file.createReadStream({validation: 'md5'}))\n    }\n\n    /**\n     * Returns a list of objects with a given prefix (folder). The list is not recursive, so prefixes (folders) are returned as such.\n     * \n     * @param container - Name of the container\n     * @param  prefix - Prefix (folder) inside which to list objects\n     * @returns List of elements returned by the server\n     * @async\n     */\n    listObjects(container: string, prefix?: string): Promise<ListResults> {\n        let list = [] as ListResults\n        const requestPromise = (opts: GetFilesOptions): Promise<ListResults> => {\n            return new Promise((resolve, reject) => {\n                if (!opts) {\n                    opts = {\n                        autoPaginate: false,\n                        delimiter: '/',\n                        // maxResults: 2, // For debug only\n                        prefix: prefix\n                    }\n                }\n\n                // Using the callback API so we can get the full list\n                // Error in typings below\n                this._client.bucket(container).getFiles(opts, (err, files, nextQuery, apiResponse) => {\n                    if (err) {\n                        return reject(err)\n                    }\n\n                    if (files && files.length) {\n                        list = list.concat(files.map((el) => {\n                            const obj = {\n                                path: el.name\n                            } as ListItemObject\n                            if (el.metadata) {\n                                if (el.metadata.size) {\n                                    obj.size = parseInt(el.metadata.size, 10)\n                                }\n                                if (el.metadata.updated) {\n                                    obj.lastModified = new Date(el.metadata.updated)\n                                }\n                                if (el.metadata.timeCreated) {\n                                    obj.creationTime = new Date(el.metadata.timeCreated)\n                                }\n                                if (el.metadata.md5Hash) {\n                                    // Google Cloud Storage returns the MD5 as base64, so convert it to HEX\n                                    obj.contentMD5 = Buffer.from(el.metadata.md5Hash, 'base64').toString('hex')\n                                }\n                                if (el.metadata.contentType) {\n                                    obj.contentType = el.metadata.contentType\n                                }\n                            }\n                            return obj\n                        }))\n                    }\n\n                    // Need to use any because of error with types\n                    if (apiResponse && (apiResponse as any).prefixes) {\n                        list = list.concat((apiResponse as any).prefixes.map((el) => {\n                            return {prefix: el} as ListItemPrefix\n                        }))\n                    }\n\n                    if (nextQuery) {\n                        return resolve(requestPromise(nextQuery))\n                    }\n                    else {\n                        return resolve(list)\n                    }\n                })\n            })\n        }\n\n        return requestPromise(null)\n    }\n\n    /**\n     * Removes an object from the server\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @returns Promise that resolves once the object has been removed\n     * @async\n     */\n    deleteObject(container: string, path: string): Promise<void> {\n        const bucket = this._client.bucket(container)\n        const file = bucket.file(path)\n\n        // Returns a promise\n        return file.delete().then(() => {\n            return\n        })\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use to request an object from the server with a GET request, even if the object is private.\n     * \n     * @param container - Name of the container\n     * @param path - Path of the object, inside the container\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedGetUrl(container: string, path: string, ttl?: number): Promise<string> {\n        return this.presignedUrl('read', container, path, ttl)\n    }\n\n    /**\n     * Returns a URL that clients (e.g. browsers) can use for PUT operations on an object in the server, even if the object is private.\n     * \n     * @param container - Name of the container\n     * @param path - Path where to store the object, inside the container\n     * @param options - Key-value pair of options used by providers, including the `metadata` dictionary\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for GET requests\n     * @async\n     */\n    presignedPutUrl(container: string, path: string, options?: PutObjectOptions, ttl?: number): Promise<string> {\n        const contentSettings = {} as any\n        if (options && options.metadata) {\n            // Check if we have a Content-Type (case-insensitive)\n            for (const key in options.metadata) {\n                if (!options.metadata.hasOwnProperty(key)) {\n                    continue\n                }\n\n                if (key.toLowerCase() == 'content-type') {\n                    contentSettings.contentType = options.metadata[key]\n                    break\n                }\n            }\n        }\n        return this.presignedUrl('write', container, path, contentSettings, ttl)\n    }\n\n    /**\n     * Returns a presigned URL for the specific operation.\n     * \n     * @param operation - Action: \"read\" or \"write\"\n     * @param container - Name of the container\n     * @param path - Path of the target object, inside the container\n     * @param contentSettings - Additional headers that are required\n     * @param ttl - Expiry time of the URL, in seconds (default: 1 day)\n     * @returns Promise that resolves with the pre-signed URL for the specified operation\n     * @async\n     */\n    private presignedUrl(action: 'read'|'write', container: string, path: string, contentSettings?: any, ttl?: number): Promise<string> {\n        if (!ttl || ttl < 1) {\n            ttl = 86400\n        }\n\n        const bucket = this._client.bucket(container)\n        const file = bucket.file(path)\n\n        // Returns a promise\n        const config = Object.assign(\n            {},\n            {\n                action: action,\n                expires: new Date(Date.now() + ttl * 1000) // Convert TTL to a point in time\n            },\n            contentSettings || {}\n        )\n\n        return file.getSignedUrl(config).then((data: string[]) => {\n            if (data && data[0]) {\n                return data[0]\n            }\n            else {\n                throw Error('No pre-signed URL was returned')\n            }\n        })\n    }\n}\n\nexport = GoogleCloudStorageProvider\n",
    "apps/api/src/model/lib/reports.service.ts": "import { Inject, Injectable } from '@nestjs/common';\nimport * as moment from 'moment';\nimport {\n  TranslationService,\n  TranslationServiceKey,\n} from './translation.service';\nimport {\n  PrintSalesInvoice,\n  PrintSalesInvoiceParty,\n} from './print.sales.invoice';\nimport { SalesInvoiceModel } from './sales.invoice.model';\nimport { LanguageModel } from './language.model';\nimport * as _ from 'lodash';\nimport { getService } from './module.reference.service';\nimport {\n  SalesInvoiceService,\n  SalesInvoiceServiceKey,\n} from './sales.invoice.service';\n\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst fs = require('fs');\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst PDFDocument = require('pdfkit');\n\nexport const ReportsServiceKey = 'ReportsServiceKey';\n\nasync function createInvoice(path: string, invoice: PrintSalesInvoice) {\n  const doc = new PDFDocument({ pdfVersion: '1.7', margin: 50 });\n  const messages = invoice.messages;\n\n  const fontPath = fs.existsSync('./assets/Cardo-Regular.ttf')\n    ? './assets/'\n    : fs.existsSync('./apps/api/assets/Cardo-Regular.ttf')\n    ? './apps/api/assets/'\n    : './apps/api/src/assets/';\n\n  // Metadata defines document type.\n  if (invoice.metadata) {\n    const metadata = invoice.metadata.trim();\n    doc.file(Buffer.from(metadata), { name: 'factur-x.xml' });\n  }\n\n  doc.registerFont('Cardo', `${fontPath}Cardo-Regular.ttf`);\n  doc.registerFont('Cardo-Bold', `${fontPath}Cardo-Bold.ttf`);\n\n  function generateHeader() {\n    doc\n      .font('Cardo-Bold')\n      .fillColor('#444444')\n      .fontSize(18)\n      .text(\n        `${messages.invoice(invoice.vatRegistered)} ${invoice.invoiceNumber}`,\n        20,\n        57,\n        { align: 'right' },\n      )\n      .font('Cardo')\n      .fontSize(10);\n\n    doc\n      .font('Cardo')\n      .text(`${messages.issuedOn}: ${invoice.issuedOnPrintable}`, 200, 87, {\n        align: 'right',\n      })\n      .text(`${messages.dueDate}: ${invoice.dueDatePrintable}`, 200, 87 + 15, {\n        align: 'right',\n      })\n      .text(\n        `${messages.invoiceNumber}: ${invoice.invoiceNumber}`,\n        200,\n        87 + 2 * 15,\n        { align: 'right' },\n      );\n\n    let line = 87 + 60;\n    if (invoice.vatRegistered) {\n      doc\n        .font('Cardo')\n        .text(\n          `${messages.transactionDate}: ${invoice.transactionDatePrintable}`,\n          200,\n          87 + 3 * 15,\n          { align: 'right' },\n        );\n      line += 15;\n    }\n\n    const seller = invoice.seller;\n    const buyer = invoice.buyer;\n\n    doc\n      .font('Cardo-Bold')\n      .text(`${messages.seller}:`, 20, line)\n      .font('Cardo')\n      .text(seller.name, 20, line + 15)\n      .text(seller.road, 20, line + 2 * 15)\n      .text(seller.zipCode + ' ' + invoice.seller.city, 20, line + 3 * 15)\n      .text(seller.country, 20, line + 4 * 15)\n      .text(invoice.sellerContact, 20, line + 5 * 15)\n      .text(seller.registration, 20, line + 6 * 15)\n      .text(`IČ: ${seller.idNumber}`, 20, line + 7 * 15)\n      .text(\n        seller.vatNumber && invoice.vatRegistered\n          ? `DIČ: ${seller.vatNumber}`\n          : '',\n        20,\n        line + 8 * 15,\n      )\n      .text(`ČR Účet: ${invoice.payTo}`, 20, line + 9 * 15)\n      .text(`IBAN: ${invoice.iban}`, 20, line + 10 * 15)\n      .text(`SWIFT: ${invoice.swift}`, 20, line + 11 * 15)\n\n      .font('Cardo-Bold')\n      .text(`${messages.buyer}:`, 200, line, { align: 'right' })\n      .font('Cardo')\n      .text(buyer.name, 200, line + 15, { align: 'right' })\n      .text(buyer.road, 200, line + 2 * 15, { align: 'right' })\n      .text(buyer.zipCode + ' ' + buyer.city, 200, line + 3 * 15, {\n        align: 'right',\n      })\n      .text(buyer.country, 200, line + 4 * 15, { align: 'right' })\n      .text(invoice.buyerEmail, 200, line + 5 * 15, { align: 'right' })\n      .text(`${messages.idNumber}: ${buyer.idNumber}`, 200, line + 6 * 15, {\n        align: 'right',\n      })\n      .text(\n        buyer.vatNumber && invoice.vatRegistered\n          ? `${messages.vatNumber}: ${buyer.vatNumber}`\n          : '',\n        200,\n        line + 7 * 15,\n        { align: 'right' },\n      )\n\n      .moveDown();\n  }\n\n  function generateFooter() {\n    doc\n      .font('Cardo')\n      .fontSize(5)\n      .text(invoice.footer || messages.invoiceFooter(invoice), 50, 700, {\n        align: 'center',\n        width: 500,\n      });\n  }\n\n  function generateTableRow(y, c1, c2, c3, c4, c5, c6, r2) {\n    doc\n      .font('Cardo')\n      .fontSize(10)\n      .text(c1, 50, y)\n      .text(c2, 150, y)\n      .text(c3, 180, y, { width: 90, align: 'right' });\n\n    if (invoice.vatRegistered && !invoice.reverseCharge) {\n      doc\n        .text(c4, 270, y, { width: 90, align: 'right' })\n        .text(c5, 360, y, { width: 90, align: 'right' });\n    }\n\n    doc.text(c6, 430, y, { align: 'right' });\n\n    if (r2) doc.text(r2, 50, y + 15);\n  }\n\n  function generateInvoiceTable() {\n    let i;\n    let invoiceTableTop = 360;\n\n    generateTableRow(\n      invoiceTableTop,\n      `${messages.item}`,\n      `${invoice.currency}/1`,\n      `${messages.units}`,\n      `Základ ${invoice.currency}`,\n      'Sazba',\n      `${messages.total} ${invoice.currency}`,\n      null,\n    );\n\n    let pageNumber = 0;\n\n    for (i = 0; i < invoice.items.length; i++) {\n      const item = invoice.items[i];\n      if (i >= 11 * (pageNumber + 1)) {\n        doc.addPage();\n        pageNumber++;\n        invoiceTableTop = 100;\n      }\n      const position = invoiceTableTop + (i + 1) * 30 - 11 * pageNumber * 30;\n\n      generateTableRow(\n        position,\n        `${i + 1}. ${item.name}`,\n        item.itemPrice,\n        item.items,\n        item.totalLine,\n        item.vatRatePercent,\n        item.totalLineToBePaid,\n        item.description,\n      );\n    }\n  }\n\n  function generateVatTable() {\n    let i = 0;\n    let invoiceTableTop =\n      (invoice.items.length <= 11 ? 450 : 200) +\n      (invoice.items.length % 11) * 30;\n\n    if (invoice.printRate) {\n      generateTableRow(\n        invoiceTableTop,\n        '',\n        '',\n        '',\n        '',\n        '',\n        `Kurz: 1 ${invoice.currency} = ${invoice.currencyMultiplyingRateToAccountingSchemeCurrency} ${invoice.accountingSchemeCurrency}`,\n        null,\n      );\n      invoiceTableTop += 15;\n    }\n    if (invoice.vatRegistered && !invoice.reverseCharge) {\n      generateTableRow(\n        invoiceTableTop,\n        '',\n        '',\n        '',\n        '',\n        '',\n        `Základ daně: ${invoice.totalLinesAccountingSchemeCurrency} ${invoice.accountingSchemeCurrency}`,\n        null,\n      );\n      invoiceTableTop += 15;\n      for (i = 0; i < invoice.vatReport.length; i++) {\n        const item = invoice.vatReport[i];\n        const position = invoiceTableTop + i * 15;\n        generateTableRow(\n          position,\n          '',\n          ' ',\n          '',\n          '',\n          '',\n          `${item.vatRatePercent}% DPH: ${item.vatTotalAccountingSchemeCurrency} ${invoice.accountingSchemeCurrency}`,\n          null,\n        );\n      }\n      invoiceTableTop += 15 * invoice.vatReport.length;\n    }\n    if (invoice.reverseCharge) {\n      generateTableRow(\n        invoiceTableTop,\n        `${messages.reverseCharge}`,\n        '',\n        '',\n        '',\n        '',\n        '',\n        null,\n      );\n    }\n    doc\n      .font('Cardo-Bold')\n      .fontSize(18)\n      .text(\n        `${messages.totalToBePaid}: ${invoice.grandTotal} ${invoice.currency}`,\n        50,\n        invoiceTableTop + 30,\n      )\n      .font('Cardo');\n  }\n\n  generateHeader();\n  generateInvoiceTable();\n  generateFooter();\n  generateVatTable();\n\n  return savePdfToFile(doc, path);\n}\n\nfunction savePdfToFile(pdf, fileName: string): Promise<void> {\n  return new Promise<void>(resolve => {\n    // To determine when the PDF has finished being written successfully\n    // we need to confirm the following 2 conditions:\n    //\n    //   1. The write stream has been closed\n    //   2. PDFDocument.end() was called synchronously without an error being thrown\n\n    let pendingStepCount = 2;\n\n    const stepFinished = () => {\n      if (--pendingStepCount === 0) {\n        resolve();\n      }\n    };\n\n    const writeStream = fs.createWriteStream(fileName);\n    writeStream.on('close', stepFinished);\n    pdf.pipe(writeStream);\n\n    pdf.end();\n\n    stepFinished();\n  });\n}\n\n@Injectable()\nexport class ReportsService {\n  constructor(\n    @Inject(TranslationServiceKey)\n    private readonly translationService: TranslationService,\n  ) {}\n\n  async printSalesInvoice(data: SalesInvoiceModel, language: LanguageModel) {\n    const organization = data.organization;\n    const accountingScheme = organization.accountingScheme;\n    const organizationLegalAddress = organization.legalAddress;\n    const vatNumber = organization.vatNumber;\n    const vatRegistered = !!vatNumber;\n    const seller = {\n      name: organization.legalName,\n      road: organizationLegalAddress.line1,\n      city: organizationLegalAddress.city,\n      country: organizationLegalAddress.country.displayName,\n      vatNumber,\n      zipCode: organizationLegalAddress.zipCode,\n      registration: organization.registration,\n      idNumber: organization.idNumber,\n    };\n    const customer = await data.customer;\n    const customerLegalAddress = await customer.legalAddress;\n    const buyer: PrintSalesInvoiceParty = {\n      name: customer.legalName,\n      road: customerLegalAddress.line1,\n      city: customerLegalAddress.city,\n      country: customerLegalAddress.country.displayName,\n      vatNumber: customer.vatNumber,\n      zipCode: customerLegalAddress.zipCode,\n      registration: customer.idNumber,\n      idNumber: customer.idNumber,\n    };\n\n    function dateToString(d: Date): string {\n      return moment(d).format('DD.MM.YYYY');\n    }\n\n    const items = [];\n\n    for (const line of data.lines) {\n      const lineTaxPercent = (await line.lineTax).ratePercent;\n      items.push({\n        name: line.product.displayName,\n        itemPrice: _.round(line.linePrice / line.quantity, 2),\n        items: line.quantity,\n        totalLine: line.linePrice,\n        vatRatePercent: lineTaxPercent,\n        totalLineToBePaid: _.round(\n          line.linePrice * (1 + lineTaxPercent / 100),\n          2,\n        ),\n        description: line.narration,\n      });\n    }\n    const bankAccount = await data.bankAccount;\n\n    const salesInvoiceService = getService<SalesInvoiceService>(\n      SalesInvoiceServiceKey,\n    );\n\n    const converted = {\n      messages: this.translationService.getMessages(language),\n      transactionDatePrintable: dateToString(data.transactionDate),\n      issuedOnPrintable: dateToString(data.issuedOn),\n      dueDatePrintable: dateToString(data.dueDate),\n      invoiceNumber: data.documentNo,\n      payTo: bankAccount.bankAccountCustomerPrintableNumber,\n      iban: bankAccount.iban,\n      swift: bankAccount.swift,\n      seller,\n      buyer,\n      items,\n      totalLines: (+data.totalLines).toFixed(2),\n      grandTotal: (+data.grandTotal).toFixed(2),\n      currency: data.currency.displayName,\n      currencyMultiplyingRateToAccountingSchemeCurrency: (+data.currencyMultiplyingRateToAccountingSchemeCurrency).toFixed(\n        3,\n      ),\n      accountingSchemeCurrency: accountingScheme\n        ? accountingScheme.currency.displayName\n        : '###',\n      totalLinesAccountingSchemeCurrency: (+data.totalLinesAccountingSchemeCurrency).toFixed(\n        2,\n      ),\n      grandTotalAccountingSchemeCurrency: (+data.grandTotalAccountingSchemeCurrency).toFixed(\n        2,\n      ),\n      vatReport: data.vatReport.map(x => ({\n        vatRatePercent: (+x.vatRatePercent).toFixed(0),\n        vatTotal: (+x.vatTotal).toFixed(2),\n        vatTotalAccountingSchemeCurrency: (+x.vatTotalAccountingSchemeCurrencyRaw).toFixed(\n          2,\n        ),\n      })),\n      printRate:\n        data.currency.displayName !==\n        (accountingScheme ? accountingScheme.currency.displayName : '###'),\n      vatRegistered,\n      buyerEmail: customer.invoicingEmail,\n      sellerContact: organization.contact,\n      reverseCharge: data.reverseCharge,\n      footer: data.printNote,\n      metadata: salesInvoiceService.exportToXml(data),\n    };\n\n    data.content = await this.printInvoice(converted);\n    data.printed = true;\n    data.printDate = new Date();\n    return data;\n  }\n\n  async printInvoice(data: PrintSalesInvoice): Promise<string> {\n    const resultFile = `/tmp/invoice-${data.invoiceNumber}-${Date.now()}`;\n    await createInvoice(`${resultFile}.pdf`, data);\n\n    const content = fs.readFileSync(`${resultFile}.pdf`);\n    return '\\\\x' + content.toString('hex');\n  }\n}\n",
    "apps/api/src/app/app.service.spec.ts": "import { Test } from '@nestjs/testing';\n\nimport { AppService } from './app.service';\n\ndescribe('AppService', () => {\n  let service: AppService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [AppService],\n    }).compile();\n\n    service = app.get<AppService>(AppService);\n  });\n\n  describe('getData', () => {\n    it('should return \"Welcome to api!\"', () => {\n      expect(service.getData()).toEqual({ message: 'Welcome to api!' });\n    });\n  });\n});\n",
    "apps/api/src/app/custom/custom.sales.invoice.service.ts": "import { Injectable } from '@nestjs/common';\nimport { EntityManager } from 'typeorm';\nimport * as _ from 'lodash';\nimport { SalesInvoiceSaveArgsModel, SalesInvoiceService } from '../../model';\n\n@Injectable()\nexport class CustomSalesInvoiceService extends SalesInvoiceService {\n  async checkSaveArgs(\n    transactionalEntityManager: EntityManager,\n    args: SalesInvoiceSaveArgsModel,\n  ) {\n    const organization = await this.getOrganization(\n      transactionalEntityManager,\n      args,\n    );\n    if (organization.displayName === 'DP') {\n      const invoices = await this.getRepository(transactionalEntityManager)\n        .createQueryBuilder('invoice')\n        .where(\n          `invoice.organization = :organizationId AND invoice.\"transactionDate\">='2021-01-01' AND invoice.\"transactionDate\"<='2021-12-31' `,\n          {\n            organizationId: organization.id,\n          },\n        )\n        .getMany();\n      const total = _.sum(\n        invoices.map(x => x.totalLinesAccountingSchemeCurrency),\n      );\n\n      if (total > 1000000) throw new Error('Cannot invoice more than 1M CZK');\n    }\n  }\n}\n",
    "apps/api/src/app/custom/custom.save.args.validation.service.ts": "import { EntityManager } from 'typeorm/index';\nimport { Injectable } from '@nestjs/common';\nimport { BaseSaveArgsModel, getService } from '../../model';\n\n/**\n * Custom save args validation service.\n * Checks if the saving service has `checkSaveArgs` method implemented and calls it if it exists\n */\n@Injectable()\nexport class CustomSaveArgsValidationService {\n  async checkIsSaveArgValid<T extends BaseSaveArgsModel>(\n    transactionalEntityManager: EntityManager,\n    typeName: string,\n    args: T,\n  ): Promise<void> {\n    const service = getService(typeName);\n    if ((service as any).checkSaveArgs) {\n      await (service as any).checkSaveArgs(transactionalEntityManager, args);\n    }\n  }\n}\n",
    "apps/api/src/app/migration.service.ts": "import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { Connection } from 'typeorm';\nimport { InjectConnection } from '@nestjs/typeorm';\n\n@Injectable()\nexport class MigrationService implements OnModuleInit {\n  constructor(@InjectConnection() readonly connection: Connection) {}\n\n  async onModuleInit(): Promise<void> {\n    console.log('Running migrations...');\n    await this.connection.runMigrations({\n      transaction: 'all',\n    });\n  }\n}\n",
    "apps/api/src/app/migrations/1595508635320-CreateDB.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CreateDB1595508635320 implements MigrationInterface {\n  name = 'CreateDB1595508635320';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"currency_rate\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"currencyMultiplyingRate\" double precision NOT NULL, \"end\" date NOT NULL, \"start\" date NOT NULL, \"fromId\" integer, \"toId\" integer, CONSTRAINT \"PK_3a2814e7c859ab225ff61369f06\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"bank\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"bankIdentifierCode\" character varying NOT NULL, CONSTRAINT \"PK_80fb8d595e2cd27c4131c68f5d9\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_1930777e62854add6a64f50d42\" ON \"public\".\"bank\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"document_number_sequence\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"forType\" character varying NOT NULL, \"current\" integer NOT NULL, \"organizationId\" integer, CONSTRAINT \"PK_4cefcadc7d07e1b79c1ddb07873\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"country\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"isoCode\" character varying NOT NULL, CONSTRAINT \"UQ_0460c7a81bca1f3f2fc6fbf99d6\" UNIQUE (\"isoCode\"), CONSTRAINT \"PK_f1e41a6df5739da5ceefdbd5a1b\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"UQ_6eba1a52ee121d100c8a0a6510c\" ON \"public\".\"country\" (\"isoCode\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_06db3c87e9e1b9eba96918b308\" ON \"public\".\"country\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"customer\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"legalName\" character varying NOT NULL, \"vatNumber\" character varying, \"invoicingEmail\" character varying NOT NULL, \"idNumber\" character varying NOT NULL, \"legalAddressId\" integer, \"note\" character varying, \"addressId\" integer, CONSTRAINT \"PK_493862f6fb77845712126f204eb\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_a843215c5e375894bcd5bdf24a\" ON \"public\".\"customer\" (\"vatNumber\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_71b54ec7502c83c7f503f57c64\" ON \"public\".\"customer\" (\"legalName\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_df529c45726940beb548906481\" ON \"public\".\"customer\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"address\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"line1\" character varying NOT NULL, \"city\" character varying NOT NULL, \"zipCode\" character varying NOT NULL, \"countryId\" integer, CONSTRAINT \"PK_3d1e15b90ff2a5f2bfc431c6bdd\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"user_identity\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"externalUser\" character varying NOT NULL, \"provider\" character varying NOT NULL, \"userId\" integer, CONSTRAINT \"PK_9d675c36942ef9b6b83b7e28c2c\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_1c243d6d65f07e169d53a69ea0\" ON \"public\".\"user_identity\" (\"provider\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_c555c4388d24da3c6fa22d85bd\" ON \"public\".\"user_identity\" (\"externalUser\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"user\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"email\" character varying, \"username\" character varying, \"name\" character varying, CONSTRAINT \"PK_03b91d2b8321aa7ba32257dc321\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_78a916df40e02a9deb1c4b75ed\" ON \"public\".\"user\" (\"username\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_065d4d8f3b5adb4a08841eae3c\" ON \"public\".\"user\" (\"name\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_e12875dfb3b1d92d7d7c5377e2\" ON \"public\".\"user\" (\"email\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"user_to_organization\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"organizationId\" integer, \"userId\" integer, CONSTRAINT \"PK_5837964dbf6c88bec81754234bf\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"organization\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"contact\" character varying NOT NULL, \"legalName\" character varying NOT NULL, \"registration\" character varying NOT NULL, \"idNumber\" character varying NOT NULL, \"vatNumber\" character varying, \"accountingSchemeId\" integer, \"bankAccountId\" integer, \"legalAddressId\" integer, CONSTRAINT \"PK_ff95b434170f261599540276497\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_99ecb4de1fda7ee51fb91b3055\" ON \"public\".\"organization\" (\"vatNumber\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_4177d3499a2c7edb42ead3d916\" ON \"public\".\"organization\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"bank_account\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"iban\" character varying NOT NULL, \"swift\" character varying NOT NULL, \"bankAccountCustomerPrintableNumber\" character varying NOT NULL, \"bankId\" integer, CONSTRAINT \"PK_7fb97b7c8d90387687697cebd5f\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_d13847b5db0cf66c1ea23615eb\" ON \"public\".\"bank_account\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"tax\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"ratePercent\" integer NOT NULL, \"isStandard\" boolean NOT NULL, CONSTRAINT \"PK_5437f933e5996c78821d7b777a5\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"product\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"sku\" character varying NOT NULL, \"uomId\" integer, CONSTRAINT \"PK_da169ec9c2ae25fb86633d10f9f\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_34f6ca1cd897cc926bdcca1ca3\" ON \"public\".\"product\" (\"sku\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_826d69dcc65d9650be67af6d48\" ON \"public\".\"product\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"sales_invoice_line\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"lineOrder\" integer NOT NULL, \"linePrice\" double precision NOT NULL, \"quantity\" double precision NOT NULL, \"narration\" character varying NOT NULL, \"invoiceId\" integer, \"lineTaxId\" integer, \"productId\" integer, CONSTRAINT \"PK_ae0c4e44242436d0191b61f435c\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"sales_invoice_vat\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"vatRatePercent\" numeric(12,2) NOT NULL, \"vatTotalAccountingSchemeCurrencyRaw\" double precision NOT NULL, \"vatTotalRaw\" double precision NOT NULL, \"vatTotalAccountingSchemeCurrency\" numeric(12,2) NOT NULL, \"vatTotal\" numeric(12,2) NOT NULL, \"invoiceId\" integer, CONSTRAINT \"PK_471ba7a8a07f52d011c765d239a\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"sales_invoice\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"dueDate\" date NOT NULL, \"issuedOn\" date NOT NULL, \"documentNo\" character varying, \"isDraft\" boolean NOT NULL, \"isCalculated\" boolean NOT NULL, \"grandTotal\" numeric(12,2) NOT NULL, \"totalLines\" double precision NOT NULL, \"totalLinesAccountingSchemeCurrency\" double precision NOT NULL, \"grandTotalAccountingSchemeCurrency\" numeric(12,2) NOT NULL, \"currencyMultiplyingRateToAccountingSchemeCurrency\" double precision NOT NULL, \"transactionDate\" date NOT NULL, \"printDate\" TIMESTAMP, \"printed\" boolean NOT NULL DEFAULT false, \"printError\" character varying, \"content\" bytea, \"paymentTermInDays\" integer NOT NULL, \"printLanguageIsoCode\" character varying NOT NULL, \"reverseCharge\" boolean NOT NULL, \"updtOpId\" integer NOT NULL, \"bankAccountId\" integer, \"currencyId\" integer, \"customerId\" integer, \"organizationId\" integer, CONSTRAINT \"PK_79dd7040b09cdfb78bf34b1a1ba\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"currency\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"isoCode\" character varying NOT NULL, CONSTRAINT \"PK_65d3b524ea256c4212b59c326ae\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_215b85e32bfbe1cf9f1c47e14d\" ON \"public\".\"currency\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"accounting_scheme\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, \"currencyId\" integer, CONSTRAINT \"PK_737f0a6e3f640fb693fcd0211d5\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_7f415d9c097ba5ef53afe8c39f\" ON \"public\".\"accounting_scheme\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"language\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"updtOpId\" integer NOT NULL DEFAULT 0, \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"isoCode\" character varying NOT NULL, CONSTRAINT \"PK_b1678c612b1e8b66f3b45aacc66\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_language_isoCode\" ON \"public\".\"language\" (\"isoCode\") `,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_language_displayName\" ON \"public\".\"language\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" ADD CONSTRAINT \"FK_d3fbaf99fba4368c95511d5ac5e\" FOREIGN KEY (\"fromId\") REFERENCES \"public\".\"currency\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" ADD CONSTRAINT \"FK_bf6acee0aed6631bffbea3a9b6d\" FOREIGN KEY (\"toId\") REFERENCES \"public\".\"currency\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"document_number_sequence\" ADD CONSTRAINT \"FK_f482d3de1ec19e51500a34def53\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"organization\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD CONSTRAINT \"FK_b27f376ebf341d1c03042b81f5e\" FOREIGN KEY (\"legalAddressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ADD CONSTRAINT \"FK_119e6dc00cb0db3abe3ef377c36\" FOREIGN KEY (\"countryId\") REFERENCES \"public\".\"country\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_identity\" ADD CONSTRAINT \"FK_08b4f3034c5f421078fe2ee7f71\" FOREIGN KEY (\"userId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" ADD CONSTRAINT \"FK_801f03e910ec33b71d5ce3821ec\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"organization\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" ADD CONSTRAINT \"FK_de139b9d33d4412afdb78e15618\" FOREIGN KEY (\"userId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_b946d2f195d40cb30083b9517f9\" FOREIGN KEY (\"accountingSchemeId\") REFERENCES \"public\".\"accounting_scheme\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_9a7bc74400d2578ff8756e7ffe6\" FOREIGN KEY (\"bankAccountId\") REFERENCES \"public\".\"bank_account\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_cf4bbe282c254f5dcda235d6cfc\" FOREIGN KEY (\"legalAddressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank_account\" ADD CONSTRAINT \"FK_b2e0013409c8c1f888cfa671cff\" FOREIGN KEY (\"bankId\") REFERENCES \"public\".\"bank\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_9368130af39c5fa0b0a7aeb9635\" FOREIGN KEY (\"invoiceId\") REFERENCES \"public\".\"sales_invoice\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_46e2135df8a294a44f6da9cfb24\" FOREIGN KEY (\"lineTaxId\") REFERENCES \"public\".\"tax\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_aa6a84182838c767209e1c4b5f2\" FOREIGN KEY (\"productId\") REFERENCES \"public\".\"product\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_vat\" ADD CONSTRAINT \"FK_024f69ee6accf1a6c7aa6efa688\" FOREIGN KEY (\"invoiceId\") REFERENCES \"public\".\"sales_invoice\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_69b6ba86e29c318798bab324869\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_61c1b2dd43ab2831c70d94d6fc6\" FOREIGN KEY (\"bankAccountId\") REFERENCES \"public\".\"bank_account\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_7844e9c13be9fa7778663eb0d3d\" FOREIGN KEY (\"currencyId\") REFERENCES \"public\".\"currency\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_7391d1afd7eb40616c692823442\" FOREIGN KEY (\"customerId\") REFERENCES \"public\".\"customer\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_e2a141391f5b4fb5722bb8cb913\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"organization\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"accounting_scheme\" ADD CONSTRAINT \"FK_fe9538948c1f6d3cb94dce7b74d\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"accounting_scheme\" ADD CONSTRAINT \"FK_8c86374aef6ec7ad93a098cf59f\" FOREIGN KEY (\"currencyId\") REFERENCES \"public\".\"currency\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD CONSTRAINT \"FK_2c1aeb39925d1e1ace946ca2f21\" FOREIGN KEY (\"addressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE IF NOT EXISTS \"public\".\"unit_of_measurement_conversion\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"currencyMultiplyingRate\" double precision NOT NULL, \"updtOpId\" integer NOT NULL, \"fromId\" integer, \"toId\" integer, CONSTRAINT \"PK_f8796ed806b216628b252bb3b4c\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE IF NOT EXISTS \"public\".\"unit_of_measurement\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, CONSTRAINT \"PK_f64cb86b321fc095bde6961d6da\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"accounting_scheme\" DROP CONSTRAINT \"FK_8c86374aef6ec7ad93a098cf59f\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"accounting_scheme\" DROP CONSTRAINT \"FK_fe9538948c1f6d3cb94dce7b74d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_e2a141391f5b4fb5722bb8cb913\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_7391d1afd7eb40616c692823442\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_7844e9c13be9fa7778663eb0d3d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_61c1b2dd43ab2831c70d94d6fc6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_69b6ba86e29c318798bab324869\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_vat\" DROP CONSTRAINT \"FK_024f69ee6accf1a6c7aa6efa688\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_aa6a84182838c767209e1c4b5f2\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_46e2135df8a294a44f6da9cfb24\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_9368130af39c5fa0b0a7aeb9635\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank_account\" DROP CONSTRAINT \"FK_b2e0013409c8c1f888cfa671cff\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_cf4bbe282c254f5dcda235d6cfc\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_9a7bc74400d2578ff8756e7ffe6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_b946d2f195d40cb30083b9517f9\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" DROP CONSTRAINT \"FK_de139b9d33d4412afdb78e15618\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" DROP CONSTRAINT \"FK_801f03e910ec33b71d5ce3821ec\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_identity\" DROP CONSTRAINT \"FK_08b4f3034c5f421078fe2ee7f71\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" DROP CONSTRAINT \"FK_119e6dc00cb0db3abe3ef377c36\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP CONSTRAINT \"FK_b27f376ebf341d1c03042b81f5e\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"document_number_sequence\" DROP CONSTRAINT \"FK_f482d3de1ec19e51500a34def53\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" DROP CONSTRAINT \"FK_bf6acee0aed6631bffbea3a9b6d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" DROP CONSTRAINT \"FK_d3fbaf99fba4368c95511d5ac5e\"`,\n    );\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_language_displayName\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_language_isoCode\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"language\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_7f415d9c097ba5ef53afe8c39f\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"accounting_scheme\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_215b85e32bfbe1cf9f1c47e14d\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"currency\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"sales_invoice\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"sales_invoice_vat\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"sales_invoice_line\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_826d69dcc65d9650be67af6d48\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_34f6ca1cd897cc926bdcca1ca3\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"product\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"tax\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_d13847b5db0cf66c1ea23615eb\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"bank_account\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_4177d3499a2c7edb42ead3d916\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_99ecb4de1fda7ee51fb91b3055\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"organization\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"user_to_organization\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_e12875dfb3b1d92d7d7c5377e2\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_065d4d8f3b5adb4a08841eae3c\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_78a916df40e02a9deb1c4b75ed\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"user\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_c555c4388d24da3c6fa22d85bd\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_1c243d6d65f07e169d53a69ea0\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"user_identity\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"address\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_df529c45726940beb548906481\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_71b54ec7502c83c7f503f57c64\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_a843215c5e375894bcd5bdf24a\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"customer\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_06db3c87e9e1b9eba96918b308\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"UQ_6eba1a52ee121d100c8a0a6510c\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"country\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"document_number_sequence\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_1930777e62854add6a64f50d42\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"bank\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"currency_rate\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1595508635326-Language.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\nimport {\n  getService,\n  getTechnicalUser,\n  LanguagesService,\n  LanguagesServiceKey,\n} from '../../model';\n\nexport class Language1595508635326 implements MigrationInterface {\n  name = 'Language1595508635326';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    const entityManager = queryRunner.manager;\n    const technicalUser = await getTechnicalUser(entityManager);\n    const languageService: LanguagesService = getService(LanguagesServiceKey);\n    const CZ_ISO_CODE = 'cz';\n    const EN_ISO_CODE = 'en';\n    const CZ_DE_ISO_CODE = 'cz-de';\n    const languages = [\n      { displayName: 'Czech', isoCode: CZ_ISO_CODE },\n      { displayName: 'English', isoCode: EN_ISO_CODE },\n      { displayName: 'Czech-German', isoCode: CZ_DE_ISO_CODE },\n    ];\n    for (const language of languages) {\n      await languageService.save(entityManager, language, technicalUser);\n    }\n  }\n\n  public async down(): Promise<void> {\n    // left empty\n  }\n}\n",
    "apps/api/src/app/migrations/1595508635328-CreateAnAddress.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\nimport {\n  AddressService,\n  AddressServiceKey,\n  CountryService,\n  CountryServiceKey,\n  getTechnicalUser,\n} from '../../model';\nimport { getService } from '../../model';\n\nexport class CreateAnAddress1595508635328 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    const entityManager = queryRunner.manager;\n    const technicalUser = await getTechnicalUser(entityManager);\n    const countryService: CountryService = getService(CountryServiceKey);\n    await countryService.save(\n      entityManager,\n      {\n        isoCode: 'ABC',\n        displayName: 'A Country',\n      },\n      technicalUser,\n    );\n\n    const addressService: AddressService = getService(AddressServiceKey);\n    const address = addressService.createEntity();\n    address.city = 'City';\n    address.zipCode = 'ABC 123';\n    address.line1 = 'Street 1';\n    await addressService.save(\n      entityManager,\n      {\n        city: address.city,\n        line1: address.line1,\n        zipCode: address.zipCode,\n        countryIsoCode: 'ABC',\n      },\n      technicalUser,\n    );\n  }\n\n  public async down(): Promise<void> {\n    /* intentionally empty */\n  }\n}\n",
    "apps/api/src/app/migrations/1609846660789-InvoicesContent.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\nimport {\n  getService,\n  getTechnicalUser,\n  SalesInvoiceService,\n  SalesInvoiceServiceKey,\n} from '../../model';\n\nexport class InvoicesContent9999999999999 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    const entityManager = queryRunner.manager;\n    await getTechnicalUser(entityManager);\n    const salesInvoiceService: SalesInvoiceService = getService(\n      SalesInvoiceServiceKey,\n    );\n    await salesInvoiceService.fixPrint(entityManager);\n  }\n\n  public async down(): Promise<void> {\n    /* intentionally left blank */\n  }\n}\n",
    "apps/api/src/app/migrations/1612978737166-Menu.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Menu1612978737166 implements MigrationInterface {\n  name = 'Menu1612978737166';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"menu_item\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"to\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, \"menuId\" integer NOT NULL, CONSTRAINT \"PK_c48762823cdf1c634f295d57b44\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_displayName_menuItem\" ON \"public\".\"menu_item\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"menu\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, CONSTRAINT \"PK_e81673826c4a73969969211789e\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_displayName_menu\" ON \"public\".\"menu\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_identity\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"document_number_sequence\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"country\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" DROP CONSTRAINT \"FK_119e6dc00cb0db3abe3ef377c36\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ALTER COLUMN \"countryId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP CONSTRAINT \"FK_b27f376ebf341d1c03042b81f5e\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ALTER COLUMN \"legalAddressId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"tax\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_46e2135df8a294a44f6da9cfb24\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_aa6a84182838c767209e1c4b5f2\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ALTER COLUMN \"lineTaxId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ALTER COLUMN \"productId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_vat\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_61c1b2dd43ab2831c70d94d6fc6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_7844e9c13be9fa7778663eb0d3d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_7391d1afd7eb40616c692823442\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_e2a141391f5b4fb5722bb8cb913\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"bankAccountId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"currencyId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"customerId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"organizationId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank_account\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_b946d2f195d40cb30083b9517f9\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_9a7bc74400d2578ff8756e7ffe6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_cf4bbe282c254f5dcda235d6cfc\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"accountingSchemeId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"bankAccountId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"legalAddressId\" SET NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"language\" ALTER COLUMN \"updtOpId\" DROP DEFAULT`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_identity\" ADD CONSTRAINT \"FK_e5970daf7641570b80b3fe9689f\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"document_number_sequence\" ADD CONSTRAINT \"FK_0ef6b9526e2954e4d17ecb39aba\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank\" ADD CONSTRAINT \"FK_b9853ae5b61d73d2f863bf31d48\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"country\" ADD CONSTRAINT \"FK_a6101aa2f56b1bf9c88557b812f\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ADD CONSTRAINT \"FK_502db82dc7ad211cafc115c6351\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ADD CONSTRAINT \"FK_119e6dc00cb0db3abe3ef377c36\" FOREIGN KEY (\"countryId\") REFERENCES \"public\".\"country\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD CONSTRAINT \"FK_d5969b09d176287a016268ee034\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD CONSTRAINT \"FK_b27f376ebf341d1c03042b81f5e\" FOREIGN KEY (\"legalAddressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"tax\" ADD CONSTRAINT \"FK_c42beaa389fabca57aa41f0376d\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" ADD CONSTRAINT \"FK_1fc1f0597e11e7825f4161527a3\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_5b01332baf0d17bd34186acd3d3\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_46e2135df8a294a44f6da9cfb24\" FOREIGN KEY (\"lineTaxId\") REFERENCES \"public\".\"tax\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_aa6a84182838c767209e1c4b5f2\" FOREIGN KEY (\"productId\") REFERENCES \"public\".\"product\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_vat\" ADD CONSTRAINT \"FK_7644fc71ac845df8fd817fdd704\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_61c1b2dd43ab2831c70d94d6fc6\" FOREIGN KEY (\"bankAccountId\") REFERENCES \"public\".\"bank_account\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_7844e9c13be9fa7778663eb0d3d\" FOREIGN KEY (\"currencyId\") REFERENCES \"public\".\"currency\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_7391d1afd7eb40616c692823442\" FOREIGN KEY (\"customerId\") REFERENCES \"public\".\"customer\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_e2a141391f5b4fb5722bb8cb913\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"organization\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank_account\" ADD CONSTRAINT \"FK_5f05f3d209e4657e92e4cbe7c61\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_7677b90e4b19af4d1078afa6b6f\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_b946d2f195d40cb30083b9517f9\" FOREIGN KEY (\"accountingSchemeId\") REFERENCES \"public\".\"accounting_scheme\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_9a7bc74400d2578ff8756e7ffe6\" FOREIGN KEY (\"bankAccountId\") REFERENCES \"public\".\"bank_account\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_cf4bbe282c254f5dcda235d6cfc\" FOREIGN KEY (\"legalAddressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" ADD CONSTRAINT \"FK_c945c66ec5631bafa1a01cd0a45\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" ADD CONSTRAINT \"FK_5957131a30f05f2b202bc9191c0\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency\" ADD CONSTRAINT \"FK_949ebbd51b89cf4830be3e9b53a\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"language\" ADD CONSTRAINT \"FK_41ef69941825cbeb66517533b37\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"menu_item\" ADD CONSTRAINT \"FK_6aa67e8642a83d87bdda69966e6\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"menu_item\" ADD CONSTRAINT \"FK_956a0060ab9c15477458e3925f2\" FOREIGN KEY (\"menuId\") REFERENCES \"public\".\"menu\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"menu\" ADD CONSTRAINT \"FK_93f7bfe23acd89729f08a37d57d\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"menu\" DROP CONSTRAINT \"FK_93f7bfe23acd89729f08a37d57d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"menu_item\" DROP CONSTRAINT \"FK_956a0060ab9c15477458e3925f2\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"menu_item\" DROP CONSTRAINT \"FK_6aa67e8642a83d87bdda69966e6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"language\" DROP CONSTRAINT \"FK_41ef69941825cbeb66517533b37\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency\" DROP CONSTRAINT \"FK_949ebbd51b89cf4830be3e9b53a\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" DROP CONSTRAINT \"FK_5957131a30f05f2b202bc9191c0\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" DROP CONSTRAINT \"FK_c945c66ec5631bafa1a01cd0a45\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_cf4bbe282c254f5dcda235d6cfc\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_9a7bc74400d2578ff8756e7ffe6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_b946d2f195d40cb30083b9517f9\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" DROP CONSTRAINT \"FK_7677b90e4b19af4d1078afa6b6f\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank_account\" DROP CONSTRAINT \"FK_5f05f3d209e4657e92e4cbe7c61\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_e2a141391f5b4fb5722bb8cb913\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_7391d1afd7eb40616c692823442\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_7844e9c13be9fa7778663eb0d3d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_61c1b2dd43ab2831c70d94d6fc6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_vat\" DROP CONSTRAINT \"FK_7644fc71ac845df8fd817fdd704\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_aa6a84182838c767209e1c4b5f2\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_46e2135df8a294a44f6da9cfb24\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" DROP CONSTRAINT \"FK_5b01332baf0d17bd34186acd3d3\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" DROP CONSTRAINT \"FK_1fc1f0597e11e7825f4161527a3\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"tax\" DROP CONSTRAINT \"FK_c42beaa389fabca57aa41f0376d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP CONSTRAINT \"FK_b27f376ebf341d1c03042b81f5e\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP CONSTRAINT \"FK_d5969b09d176287a016268ee034\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" DROP CONSTRAINT \"FK_119e6dc00cb0db3abe3ef377c36\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" DROP CONSTRAINT \"FK_502db82dc7ad211cafc115c6351\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"country\" DROP CONSTRAINT \"FK_a6101aa2f56b1bf9c88557b812f\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank\" DROP CONSTRAINT \"FK_b9853ae5b61d73d2f863bf31d48\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"document_number_sequence\" DROP CONSTRAINT \"FK_0ef6b9526e2954e4d17ecb39aba\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_identity\" DROP CONSTRAINT \"FK_e5970daf7641570b80b3fe9689f\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"language\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"currency_rate\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_to_organization\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"legalAddressId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"bankAccountId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"accountingSchemeId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_cf4bbe282c254f5dcda235d6cfc\" FOREIGN KEY (\"legalAddressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_9a7bc74400d2578ff8756e7ffe6\" FOREIGN KEY (\"bankAccountId\") REFERENCES \"public\".\"bank_account\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"organization\" ADD CONSTRAINT \"FK_b946d2f195d40cb30083b9517f9\" FOREIGN KEY (\"accountingSchemeId\") REFERENCES \"public\".\"accounting_scheme\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank_account\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"organizationId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"customerId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"currencyId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ALTER COLUMN \"bankAccountId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_e2a141391f5b4fb5722bb8cb913\" FOREIGN KEY (\"organizationId\") REFERENCES \"public\".\"organization\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_7391d1afd7eb40616c692823442\" FOREIGN KEY (\"customerId\") REFERENCES \"public\".\"customer\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_7844e9c13be9fa7778663eb0d3d\" FOREIGN KEY (\"currencyId\") REFERENCES \"public\".\"currency\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_61c1b2dd43ab2831c70d94d6fc6\" FOREIGN KEY (\"bankAccountId\") REFERENCES \"public\".\"bank_account\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_vat\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ALTER COLUMN \"productId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ALTER COLUMN \"lineTaxId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_aa6a84182838c767209e1c4b5f2\" FOREIGN KEY (\"productId\") REFERENCES \"public\".\"product\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice_line\" ADD CONSTRAINT \"FK_46e2135df8a294a44f6da9cfb24\" FOREIGN KEY (\"lineTaxId\") REFERENCES \"public\".\"tax\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"tax\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ALTER COLUMN \"legalAddressId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD CONSTRAINT \"FK_b27f376ebf341d1c03042b81f5e\" FOREIGN KEY (\"legalAddressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ALTER COLUMN \"countryId\" DROP NOT NULL`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"address\" ADD CONSTRAINT \"FK_119e6dc00cb0db3abe3ef377c36\" FOREIGN KEY (\"countryId\") REFERENCES \"public\".\"country\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"country\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"bank\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"document_number_sequence\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user_identity\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_displayName_menu\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"menu\"`);\n    await queryRunner.query(`DROP INDEX \"public\".\"IDX_displayName_menuItem\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"menu_item\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1612983991735-MenuContent.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\nimport { getTechnicalUser, UserModel } from '../../model';\nimport { Menu } from '../../model/generated/entities/Menu';\nimport { MenuItem } from '../../model/generated/entities/MenuItem';\nimport { EntityManager } from 'typeorm';\n\nexport const createMenuItems = async (\n  menu: Menu,\n  entityManager: EntityManager,\n  items: any,\n  technicalUser: UserModel,\n) => {\n  for (const item of items) {\n    const menuItem = new MenuItem();\n    menuItem.menu = menu;\n    menuItem.to = item.to;\n    menuItem.displayName = item.displayName;\n    menuItem.updtOp = technicalUser;\n    await entityManager.save(menuItem);\n  }\n};\n\nexport class MenuContent1612983991735 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    const entityManager = queryRunner.manager;\n    const technicalUser = await getTechnicalUser(entityManager);\n    const menu = new Menu();\n    menu.displayName = 'menu.ERPStandard';\n    menu.updtOp = technicalUser;\n\n    await entityManager.save(menu);\n\n    const items = [\n      { to: '', displayName: 'menu.items.Dashboard' },\n      { to: 'customers', displayName: 'menu.items.Customers' },\n      { to: 'sales-invoices', displayName: 'menu.items.SalesInvoices' },\n    ];\n\n    await createMenuItems(menu, entityManager, items, technicalUser);\n  }\n\n  public async down(): Promise<void> {\n    // left empty\n  }\n}\n",
    "apps/api/src/app/migrations/1615749063579-EnhanceCustomer.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class EnhanceCustomer1615749063579 implements MigrationInterface {\n  name = 'EnhanceCustomer1615749063579';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD COLUMN IF NOT EXISTS \"note\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD COLUMN IF NOT EXISTS \"addressId\" integer`,\n    );\n\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP CONSTRAINT IF EXISTS \"FK_2c1aeb39925d1e1ace946ca2f21\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD CONSTRAINT \"FK_2c1aeb39925d1e1ace946ca2f21\" FOREIGN KEY (\"addressId\") REFERENCES \"public\".\"address\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP CONSTRAINT \"FK_2c1aeb39925d1e1ace946ca2f21\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP COLUMN \"addressId\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP COLUMN \"note\"`,\n    );\n  }\n}\n",
    "apps/api/src/app/migrations/1615961288134-MenuSettings.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\nimport { getTechnicalUser } from '../../model';\nimport { Menu } from '../../model/generated/entities/Menu';\nimport { createMenuItems } from './1612983991735-MenuContent';\n\nexport class MenuSettings1615961288134 implements MigrationInterface {\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    const entityManager = queryRunner.manager;\n    const technicalUser = await getTechnicalUser(entityManager);\n\n    const menu = (await entityManager.getRepository(Menu).find())[0];\n\n    const items = [{ to: 'settings', displayName: 'menu.items.Settings' }];\n\n    await createMenuItems(menu, entityManager, items, technicalUser);\n  }\n\n  public async down(): Promise<void> {\n    // left empty\n  }\n}\n",
    "apps/api/src/app/migrations/1616228731111-UoM.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class UoM1616228731111 implements MigrationInterface {\n  name = 'UoM1616228731111';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE IF NOT EXISTS \"public\".\"unit_of_measurement_conversion\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"currencyMultiplyingRate\" double precision NOT NULL, \"end\" date NOT NULL, \"start\" date NOT NULL, \"updtOpId\" integer NOT NULL, \"fromId\" integer, \"toId\" integer, CONSTRAINT \"PK_f8796ed806b216628b252bb3b4c\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE IF NOT EXISTS \"public\".\"unit_of_measurement\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, CONSTRAINT \"PK_f64cb86b321fc095bde6961d6da\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" ADD COLUMN IF NOT EXISTS \"uomId\" integer`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" ADD CONSTRAINT \"FK_53f53a57b0fff0f3c38030480c6\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" ADD CONSTRAINT \"FK_db4c477e0fb35dfae056eafa13d\" FOREIGN KEY (\"fromId\") REFERENCES \"public\".\"unit_of_measurement\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" ADD CONSTRAINT \"FK_7e0d7a2652d946896736a520b2b\" FOREIGN KEY (\"toId\") REFERENCES \"public\".\"unit_of_measurement\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement\" ADD CONSTRAINT \"FK_99cd4cf812d980868a774fd004b\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" ADD CONSTRAINT \"FK_b05df001c34be0b2afa54b36a1b\" FOREIGN KEY (\"uomId\") REFERENCES \"public\".\"unit_of_measurement\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" DROP CONSTRAINT \"FK_b05df001c34be0b2afa54b36a1b\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement\" DROP CONSTRAINT \"FK_99cd4cf812d980868a774fd004b\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" DROP CONSTRAINT \"FK_7e0d7a2652d946896736a520b2b\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" DROP CONSTRAINT \"FK_db4c477e0fb35dfae056eafa13d\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" DROP CONSTRAINT \"FK_53f53a57b0fff0f3c38030480c6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"product\" DROP COLUMN \"uomId\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"unit_of_measurement\"`);\n    await queryRunner.query(\n      `DROP TABLE \"public\".\"unit_of_measurement_conversion\"`,\n    );\n  }\n}\n",
    "apps/api/src/app/migrations/1618661208366-CustomerPriceList.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class CustomerPriceList1618661208366 implements MigrationInterface {\n  name = 'CustomerPriceList1618661208366';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"customerProductPrice\" (\"id\" SERIAL NOT NULL, \"sellingPrice\" numeric(12,2) NOT NULL, \"productId\" integer NOT NULL, \"customerPriceListId\" integer NOT NULL, CONSTRAINT \"PK_41712b48577a11adfdbb81efdf9\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"customerPriceList\" (\"id\" SERIAL NOT NULL, \"displayName\" character varying NOT NULL, \"validFrom\" TIMESTAMP, \"validTo\" TIMESTAMP, \"customerGroupId\" integer NOT NULL, CONSTRAINT \"PK_3a410c80620c92c128634387f20\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_customerPriceList_displayName\" ON \"public\".\"customerPriceList\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"customerGroup\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, CONSTRAINT \"PK_2f921748bb8e683b3d7007182ca\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_customerGroup_displayName\" ON \"public\".\"customerGroup\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" DROP COLUMN IF EXISTS \"end\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"unit_of_measurement_conversion\" DROP COLUMN IF EXISTS \"start\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD \"customerGroupId\" integer`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" ADD CONSTRAINT \"FK_51fd886ac463154b1fb68ad944a\" FOREIGN KEY (\"productId\") REFERENCES \"public\".\"product\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" ADD CONSTRAINT \"FK_5fad018dfcf766b9fab575e5ea1\" FOREIGN KEY (\"customerPriceListId\") REFERENCES \"public\".\"customerPriceList\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerPriceList\" ADD CONSTRAINT \"FK_635c71f6ed02473cca6603a3079\" FOREIGN KEY (\"customerGroupId\") REFERENCES \"public\".\"customerGroup\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerGroup\" ADD CONSTRAINT \"FK_6622e70e814cce558a98043c611\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD CONSTRAINT \"FK_07b06500ab5d46137b7f87cc53c\" FOREIGN KEY (\"customerGroupId\") REFERENCES \"public\".\"customerGroup\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP CONSTRAINT \"FK_07b06500ab5d46137b7f87cc53c\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerGroup\" DROP CONSTRAINT \"FK_6622e70e814cce558a98043c611\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerPriceList\" DROP CONSTRAINT \"FK_635c71f6ed02473cca6603a3079\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" DROP CONSTRAINT \"FK_5fad018dfcf766b9fab575e5ea1\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" DROP CONSTRAINT \"FK_51fd886ac463154b1fb68ad944a\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user\" ALTER COLUMN \"updtOpId\" SET DEFAULT '0'`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP COLUMN \"customerGroupId\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_customerGroup_displayName\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"customerGroup\"`);\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_customerPriceList_displayName\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"customerPriceList\"`);\n    await queryRunner.query(`DROP TABLE \"public\".\"customerProductPrice\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1619015192340-ContactPersons.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ContactPersons1619015192340 implements MigrationInterface {\n  name = 'ContactPersons1619015192340';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"contactPerson\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"firstName\" character varying NOT NULL, \"lastName\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, CONSTRAINT \"PK_746d8d620b9adb89ccb008773a9\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_7491b9b65ea315845dd61b1856\" ON \"public\".\"contactPerson\" (\"firstName\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_ab57dcc04929b28b4d8479188d\" ON \"public\".\"contactPerson\" (\"lastName\") `,\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"contactPersonCompanyRelation\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"role\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, \"contactPersonId\" integer NOT NULL, \"customerId\" integer NOT NULL, CONSTRAINT \"PK_226ddfd36a0811c0768c3be1b12\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD \"www\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD \"publicNote\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" ADD \"photo\" bytea`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_b21b8a7c8801bb8602ec940fec\" ON \"public\".\"customerPriceList\" (\"validFrom\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_ed822f2a7e9f63b68877e9fce5\" ON \"public\".\"customerPriceList\" (\"validTo\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPerson\" ADD CONSTRAINT \"FK_7a7ffd15ebe52dd8fc1d33cb50f\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPersonCompanyRelation\" ADD CONSTRAINT \"FK_1cd288d466509367bff77d9d1d6\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPersonCompanyRelation\" ADD CONSTRAINT \"FK_bfd00884d3dc28191b0d5645de9\" FOREIGN KEY (\"contactPersonId\") REFERENCES \"public\".\"contactPerson\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPersonCompanyRelation\" ADD CONSTRAINT \"FK_19a8fde957b82c65cf17413ab5e\" FOREIGN KEY (\"customerId\") REFERENCES \"public\".\"customer\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPersonCompanyRelation\" DROP CONSTRAINT \"FK_19a8fde957b82c65cf17413ab5e\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPersonCompanyRelation\" DROP CONSTRAINT \"FK_bfd00884d3dc28191b0d5645de9\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPersonCompanyRelation\" DROP CONSTRAINT \"FK_1cd288d466509367bff77d9d1d6\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"contactPerson\" DROP CONSTRAINT \"FK_7a7ffd15ebe52dd8fc1d33cb50f\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_ed822f2a7e9f63b68877e9fce5\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_b21b8a7c8801bb8602ec940fec\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP COLUMN \"photo\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP COLUMN \"publicNote\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customer\" DROP COLUMN \"www\"`,\n    );\n    await queryRunner.query(\n      `DROP TABLE \"public\".\"contactPersonCompanyRelation\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_ab57dcc04929b28b4d8479188d\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_7491b9b65ea315845dd61b1856\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"contactPerson\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1619448004419-ProductPriceCurrency.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class ProductPriceCurrency1619448004419 implements MigrationInterface {\n  name = 'ProductPriceCurrency1619448004419';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" ADD \"currencyId\" integer`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" ADD CONSTRAINT \"FK_0feeda1e15d57b1b8c69ba679c8\" FOREIGN KEY (\"currencyId\") REFERENCES \"public\".\"currency\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" DROP CONSTRAINT \"FK_0feeda1e15d57b1b8c69ba679c8\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"customerProductPrice\" DROP COLUMN \"currencyId\"`,\n    );\n  }\n}\n",
    "apps/api/src/app/migrations/1619502927022-FactoringProvider.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class FactoringProvider1619502927022 implements MigrationInterface {\n  name = 'FactoringProvider1619502927022';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"factoringProvider\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"displayName\" character varying NOT NULL, \"contact\" character varying NOT NULL, \"legalName\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, \"bankAccountId\" integer NOT NULL, CONSTRAINT \"PK_ca17af38def58bfa19b841c7b81\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE UNIQUE INDEX \"IDX_factoringProvider_displayName\" ON \"public\".\"factoringProvider\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD \"factoringProviderId\" integer`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringProvider\" ADD CONSTRAINT \"FK_4b1f9a1d9f45356e49a27fac7c7\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringProvider\" ADD CONSTRAINT \"FK_e616221fe300ca7ceb6e2bd4ead\" FOREIGN KEY (\"bankAccountId\") REFERENCES \"public\".\"bank_account\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD CONSTRAINT \"FK_42e3f89cee2b09200cc0df70877\" FOREIGN KEY (\"factoringProviderId\") REFERENCES \"public\".\"factoringProvider\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP CONSTRAINT \"FK_42e3f89cee2b09200cc0df70877\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringProvider\" DROP CONSTRAINT \"FK_e616221fe300ca7ceb6e2bd4ead\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringProvider\" DROP CONSTRAINT \"FK_4b1f9a1d9f45356e49a27fac7c7\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP COLUMN \"factoringProviderId\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_factoringProvider_displayName\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"factoringProvider\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1619613873925-FactoringInvoicePrinting.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class FactoringInvoicePrinting1619613873925\n  implements MigrationInterface {\n  name = 'FactoringInvoicePrinting1619613873925';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"factoringContract\" (\"id\" SERIAL NOT NULL, \"updtTs\" TIMESTAMP NOT NULL DEFAULT now(), \"isActive\" boolean NOT NULL DEFAULT true, \"isCurrent\" boolean NOT NULL DEFAULT true, \"invoicePrintNote\" character varying NOT NULL, \"updtOpId\" integer NOT NULL, \"factoringProviderId\" integer NOT NULL, \"customerId\" integer NOT NULL, \"currencyId\" integer NOT NULL, CONSTRAINT \"PK_033bc754511e1929542eb1cc9b5\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" ADD \"printNote\" character varying`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" ADD CONSTRAINT \"FK_6f40d42ccc7ea435721230ba807\" FOREIGN KEY (\"updtOpId\") REFERENCES \"public\".\"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" ADD CONSTRAINT \"FK_41fe90ab93d40cd55e282ce7b2b\" FOREIGN KEY (\"factoringProviderId\") REFERENCES \"public\".\"factoringProvider\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" ADD CONSTRAINT \"FK_145c1881c0aa4bf2158d1bee85b\" FOREIGN KEY (\"customerId\") REFERENCES \"public\".\"customer\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" ADD CONSTRAINT \"FK_7d7e1db5908c7bc4ae9425f02a8\" FOREIGN KEY (\"currencyId\") REFERENCES \"public\".\"organization\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" DROP CONSTRAINT \"FK_7d7e1db5908c7bc4ae9425f02a8\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" DROP CONSTRAINT \"FK_145c1881c0aa4bf2158d1bee85b\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" DROP CONSTRAINT \"FK_41fe90ab93d40cd55e282ce7b2b\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"factoringContract\" DROP CONSTRAINT \"FK_6f40d42ccc7ea435721230ba807\"`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user\" ALTER COLUMN \"updtOpId\" SET DEFAULT '0'`,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"sales_invoice\" DROP COLUMN \"printNote\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"factoringContract\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1620224070916-EventLog.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class EventLog1620224070916 implements MigrationInterface {\n  name = 'EventLog1620224070916';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"eventLog\" (\"id\" SERIAL NOT NULL, \"content\" jsonb NOT NULL, \"displayName\" character varying NOT NULL, CONSTRAINT \"PK_6a6f72eac8c1a2099e1df9786bb\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_2b1a40ada41ba1d1eff5143185\" ON \"public\".\"eventLog\" (\"displayName\") `,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_2b1a40ada41ba1d1eff5143185\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"eventLog\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1620291421007-Config.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Config1620291421007 implements MigrationInterface {\n  name = 'Config1620291421007';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"config\" (\"id\" SERIAL NOT NULL, \"content\" jsonb NOT NULL, \"displayName\" character varying NOT NULL, CONSTRAINT \"PK_7839f7dd8f45e37933fb3e35cbb\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_a6e5cc808398e62bdcebad076f\" ON \"public\".\"config\" (\"displayName\") `,\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user\" ALTER COLUMN \"updtOpId\" SET DEFAULT 0`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `ALTER TABLE \"public\".\"user\" ALTER COLUMN \"updtOpId\" SET DEFAULT '0'`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_a6e5cc808398e62bdcebad076f\"`,\n    );\n    await queryRunner.query(`DROP TABLE \"public\".\"config\"`);\n  }\n}\n",
    "apps/api/src/app/migrations/1620312048836-Attachment.ts": "import { MigrationInterface, QueryRunner } from 'typeorm';\nimport { getTechnicalUser } from '../../model';\nimport { Menu } from '../../model/generated/entities/Menu';\nimport { createMenuItems } from './1612983991735-MenuContent';\n\nexport class Attachment1620312048836 implements MigrationInterface {\n  name = 'Attachment1620312048836';\n\n  public async up(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `CREATE TABLE \"public\".\"attachment\" (\"id\" SERIAL NOT NULL, \"contentUrl\" character varying NOT NULL, \"displayName\" character varying NOT NULL, CONSTRAINT \"PK_9f047896764a10a0ade3514ccf0\" PRIMARY KEY (\"id\"))`,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_8c1dfd4ae09dd3235f2503f2cf\" ON \"public\".\"attachment\" (\"contentUrl\") `,\n    );\n    await queryRunner.query(\n      `CREATE INDEX \"IDX_10f262acf59123ffde85b5065e\" ON \"public\".\"attachment\" (\"displayName\") `,\n    );\n\n    const entityManager = queryRunner.manager;\n    const technicalUser = await getTechnicalUser(entityManager);\n\n    const menu = (await entityManager.getRepository(Menu).find())[0];\n\n    const items = [\n      { to: 'attachments', displayName: 'menu.items.Attachments' },\n    ];\n\n    await createMenuItems(menu, entityManager, items, technicalUser);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise<void> {\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_10f262acf59123ffde85b5065e\"`,\n    );\n    await queryRunner.query(\n      `DROP INDEX \"public\".\"IDX_8c1dfd4ae09dd3235f2503f2cf\"`,\n    );\n  }\n}\n",
    "apps/api/src/app/resolvers/accounting.scheme.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { AccountingScheme } from '../../model/generated/entities/AccountingScheme';\nimport {\n  AccountingSchemeModel,\n  AccountingSchemeService,\n  AccountingSchemeServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { AccountingSchemeSaveArgs } from '../saveArgs/accounting.scheme.save.args';\n\n@Resolver(() => AccountingScheme)\n@UseGuards(GqlAuthGuard)\nexport class AccountingSchemeResolver {\n  constructor(\n    @Inject(AccountingSchemeServiceKey)\n    protected readonly accountingSchemeService: AccountingSchemeService,\n  ) {}\n\n  @Query(() => [AccountingScheme])\n  async accountingSchemes() {\n    return await this.accountingSchemeService.loadEntities(getManager());\n  }\n\n  @Query(() => AccountingScheme)\n  async accountingScheme(@Args('id', { type: () => Int }) id: number) {\n    const result = await this.accountingSchemeService.loadEntityById(\n      getManager(),\n      id,\n    );\n    return result;\n  }\n\n  @Mutation(() => AccountingScheme)\n  async saveAccountingScheme(\n    @Args('args') objData: AccountingSchemeSaveArgs,\n    @CurrentUser() user,\n  ): Promise<AccountingSchemeModel> {\n    return await this.accountingSchemeService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/attachment.resolver.ts": "import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { Attachment } from '../../model/generated/entities/Attachment';\nimport { getManager } from 'typeorm';\nimport {\n  AttachmentService,\n  AttachmentServiceKey,\n} from '../../model/lib/attachment.service';\nimport { AttachmentSaveArgs } from '../saveArgs/attachment.save.args';\nimport { AttachmentModel } from '../../model/lib/attachment.model';\n\n@Resolver(() => Attachment)\n@UseGuards(GqlAuthGuard)\nexport class AttachmentResolver {\n  constructor(\n    @Inject(AttachmentServiceKey)\n    protected readonly attachmentService: AttachmentService,\n  ) {}\n\n  @Query(() => [Attachment])\n  async attachments() {\n    const { files, folders } = await this.attachmentService.listCloudContent();\n    // const links = await this.attachmentService.loadEntities(getManager());\n    return [\n      ...files.map(x => ({ id: x.path, isFolder: false, displayName: x.path })),\n      ...folders.map(x => ({\n        id: x.prefix,\n        isFolder: true,\n        displayName: x.prefix,\n      })),\n    ];\n  }\n\n  @Query(() => Attachment)\n  async attachment(@Args('id', { type: () => String }) id: string) {\n    /*const { files, folders } = await this.attachmentService.listCloudContent();\n    // const links = await this.attachmentService.loadEntities(getManager());\n    return [\n      ...files.map(x => ({ id: x.path, isFolder: false, displayName: x.path })),\n      ...folders.map(x => ({ id: x.prefix, isFolder: true, displayName: x.prefix })),\n    ];\n    */\n    return { id } as any;\n  }\n\n  @Mutation(() => Attachment)\n  async saveAttachment(\n    @Args('args') objData: AttachmentSaveArgs,\n    @CurrentUser() user,\n  ): Promise<AttachmentModel> {\n    return await this.attachmentService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/bank.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { Bank } from '../../model/generated/entities/Bank';\nimport { BankModel, BankService, BankServiceKey } from '../../model';\nimport { getManager } from 'typeorm';\nimport { BankSaveArgs } from '../saveArgs/bank.save.args';\n\n@Resolver(() => Bank)\n@UseGuards(GqlAuthGuard)\nexport class BankResolver {\n  constructor(\n    @Inject(BankServiceKey)\n    protected readonly bankService: BankService,\n  ) {}\n\n  @Query(() => [Bank])\n  async banks() {\n    return await this.bankService.loadEntities(getManager());\n  }\n\n  @Query(() => Bank)\n  async bank(@Args('id', { type: () => Int }) id: number) {\n    return await this.bankService.loadEntityById(getManager(), id);\n  }\n\n  @Mutation(() => Bank)\n  async saveBank(\n    @Args('args') objData: BankSaveArgs,\n    @CurrentUser() user,\n  ): Promise<BankModel> {\n    return await this.bankService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/contact.person.company.relation.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { ContactPersonCompanyRelation } from '../../model/generated/entities/ContactPersonCompanyRelation';\nimport {\n  ContactPersonCompanyRelationModel,\n  ContactPersonCompanyRelationService,\n  ContactPersonCompanyRelationServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { ContactPersonCompanyRelationSaveArgs } from '../saveArgs/contact.person.company.relation.save.args';\n\n@Resolver(() => ContactPersonCompanyRelation)\n@UseGuards(GqlAuthGuard)\nexport class ContactPersonCompanyRelationResolver {\n  constructor(\n    @Inject(ContactPersonCompanyRelationServiceKey)\n    protected readonly contactPersonCompanyRelationService: ContactPersonCompanyRelationService,\n  ) {}\n\n  @Query(() => [ContactPersonCompanyRelation])\n  async contactPersonCompanyRelations() {\n    return await this.contactPersonCompanyRelationService.loadEntities(\n      getManager(),\n    );\n  }\n\n  @Query(() => ContactPersonCompanyRelation)\n  async contactPersonCompanyRelation(\n    @Args('id', { type: () => Int }) id: number,\n  ) {\n    return await this.contactPersonCompanyRelationService.loadEntityById(\n      getManager(),\n      id,\n    );\n  }\n\n  @Mutation(() => ContactPersonCompanyRelation)\n  async saveContactPersonCompanyRelation(\n    @Args('args') objData: ContactPersonCompanyRelationSaveArgs,\n    @CurrentUser() user,\n  ): Promise<ContactPersonCompanyRelationModel> {\n    return await this.contactPersonCompanyRelationService.save(\n      getManager(),\n      objData,\n      user,\n    );\n  }\n}\n",
    "apps/api/src/app/resolvers/contact.person.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { ContactPerson } from '../../model/generated/entities/ContactPerson';\nimport {\n  ContactPersonModel,\n  ContactPersonService,\n  ContactPersonServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { ContactPersonSaveArgs } from '../saveArgs/contact.person.save.args';\n\n@Resolver(() => ContactPerson)\n@UseGuards(GqlAuthGuard)\nexport class ContactPersonResolver {\n  constructor(\n    @Inject(ContactPersonServiceKey)\n    protected readonly contactPersonService: ContactPersonService,\n  ) {}\n\n  @Query(() => [ContactPerson])\n  async contactPersons() {\n    return await this.contactPersonService.loadEntities(getManager());\n  }\n\n  @Query(() => ContactPerson)\n  async contactPerson(@Args('id', { type: () => Int }) id: number) {\n    return await this.contactPersonService.loadEntityById(getManager(), id);\n  }\n\n  @Mutation(() => ContactPerson)\n  async saveContactPerson(\n    @Args('args') objData: ContactPersonSaveArgs,\n    @CurrentUser() user,\n  ): Promise<ContactPersonModel> {\n    return await this.contactPersonService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/country.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { Country } from '../../model/generated/entities/Country';\nimport { CountryModel, CountryService, CountryServiceKey } from '../../model';\nimport { getManager } from 'typeorm';\nimport { CountrySaveArgs } from '../saveArgs/country.save.args';\n\n@Resolver(() => Country)\n@UseGuards(GqlAuthGuard)\nexport class CountryResolver {\n  constructor(\n    @Inject(CountryServiceKey)\n    protected readonly countryService: CountryService,\n  ) {}\n\n  @Query(() => [Country])\n  async countries() {\n    return await this.countryService.loadEntities(getManager());\n  }\n\n  @Query(() => Country)\n  async country(@Args('id', { type: () => Int }) id: number) {\n    const result = await this.countryService.loadEntityById(getManager(), id);\n    return result;\n  }\n\n  @Mutation(() => Country)\n  async saveCountry(\n    @Args('args') objData: CountrySaveArgs,\n    @CurrentUser() user,\n  ): Promise<CountryModel> {\n    return await this.countryService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/currency.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { Currency } from '../../model/generated/entities/Currency';\nimport {\n  CurrencyModel,\n  CurrencyService,\n  CurrencyServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { CurrencySaveArgs } from '../saveArgs/currency.save.args';\n\n@Resolver(() => Currency)\n@UseGuards(GqlAuthGuard)\nexport class CurrencyResolver {\n  constructor(\n    @Inject(CurrencyServiceKey)\n    protected readonly currencyService: CurrencyService,\n  ) {}\n\n  @Query(() => [Currency])\n  async currencies() {\n    return await this.currencyService.loadEntities(getManager());\n  }\n\n  @Mutation(() => Currency)\n  async saveCurrency(\n    @Args('args') objData: CurrencySaveArgs,\n    @CurrentUser() user,\n  ): Promise<CurrencyModel> {\n    return await this.currencyService.save(getManager(), objData, user);\n  }\n\n  @Query(() => Currency)\n  async currency(@Args('id', { type: () => Int }) id: number) {\n    const result = await this.currencyService.loadEntityById(getManager(), id);\n    return result;\n  }\n}\n",
    "apps/api/src/app/resolvers/customer.group.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { CustomerGroup } from '../../model/generated/entities/CustomerGroup';\nimport {\n  CustomerGroupModel,\n  CustomerGroupService,\n  CustomerGroupServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { CustomerGroupSaveArgs } from '../saveArgs/customerGroup.save.args';\n\n@Resolver(() => CustomerGroup)\n@UseGuards(GqlAuthGuard)\nexport class CustomerGroupResolver {\n  constructor(\n    @Inject(CustomerGroupServiceKey)\n    protected readonly customerGroupService: CustomerGroupService,\n  ) {}\n\n  @Query(() => [CustomerGroup])\n  async customerGroups() {\n    return await this.customerGroupService.loadEntities(getManager());\n  }\n\n  @Query(() => CustomerGroup)\n  async customerGroup(@Args('id', { type: () => Int }) id: number) {\n    return await this.customerGroupService.loadEntityById(getManager(), id);\n  }\n\n  @Mutation(() => CustomerGroup)\n  async saveCustomerGroup(\n    @Args('args') objData: CustomerGroupSaveArgs,\n    @CurrentUser() user,\n  ): Promise<CustomerGroupModel> {\n    return await this.customerGroupService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/customer.price.list.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { CustomerPriceList } from '../../model/generated/entities/CustomerPriceList';\nimport {\n  CustomerPriceListModel,\n  CustomerPriceListService,\n  CustomerPriceListServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { CustomerPriceListSaveArgs } from '../saveArgs/customerPriceList.save.args';\n\n@Resolver(() => CustomerPriceList)\n@UseGuards(GqlAuthGuard)\nexport class CustomerPriceListResolver {\n  constructor(\n    @Inject(CustomerPriceListServiceKey)\n    protected readonly customerPriceListService: CustomerPriceListService,\n  ) {}\n\n  @Query(() => [CustomerPriceList])\n  async customerPriceLists() {\n    return await this.customerPriceListService.loadEntities(getManager());\n  }\n\n  @Query(() => CustomerPriceList)\n  async customerPriceList(@Args('id', { type: () => Int }) id: number) {\n    return await this.customerPriceListService.loadEntityById(getManager(), id);\n  }\n\n  @Mutation(() => CustomerPriceList)\n  async saveCustomerPriceList(\n    @Args('args') objData: CustomerPriceListSaveArgs,\n    @CurrentUser() user,\n  ): Promise<CustomerPriceListModel> {\n    return await this.customerPriceListService.save(\n      getManager(),\n      objData,\n      user,\n    );\n  }\n}\n",
    "apps/api/src/app/resolvers/customer.product.price.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { CustomerProductPrice } from '../../model/generated/entities/CustomerProductPrice';\nimport {\n  CustomerProductPriceModel,\n  CustomerProductPriceService,\n  CustomerProductPriceServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { CustomerProductPriceSaveArgs } from '../saveArgs/customer.product.price.save.args';\n\n@Resolver(() => CustomerProductPrice)\n@UseGuards(GqlAuthGuard)\nexport class CustomerProductPriceResolver {\n  constructor(\n    @Inject(CustomerProductPriceServiceKey)\n    protected readonly customerProductPriceService: CustomerProductPriceService,\n  ) {}\n\n  @Query(() => [CustomerProductPrice])\n  async customerProductPrices() {\n    return await this.customerProductPriceService.loadEntities(getManager());\n  }\n\n  @Query(() => CustomerProductPrice)\n  async customerProductPrice(@Args('id', { type: () => Int }) id: number) {\n    return await this.customerProductPriceService.loadEntityById(\n      getManager(),\n      id,\n    );\n  }\n\n  @Mutation(() => CustomerProductPrice)\n  async saveCustomerProductPrice(\n    @Args('args') objData: CustomerProductPriceSaveArgs,\n    @CurrentUser() user,\n  ): Promise<CustomerProductPriceModel> {\n    return await this.customerProductPriceService.save(\n      getManager(),\n      objData,\n      user,\n    );\n  }\n}\n",
    "apps/api/src/app/resolvers/customer.resolver.ts": "import {\n  Args,\n  Int,\n  Mutation,\n  Parent,\n  Query,\n  ResolveField,\n  Resolver,\n} from '@nestjs/graphql';\nimport {\n  AddressService,\n  AddressServiceKey,\n  CustomerModel,\n  CustomerService,\n  CustomerServiceKey,\n} from '../../model';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { getManager } from 'typeorm';\nimport { CustomerSaveArgs } from '../saveArgs/customer.save.args';\nimport { Customer } from '../../model/generated/entities/Customer';\n\n@Resolver(() => Customer)\n@UseGuards(GqlAuthGuard)\nexport class CustomerResolver {\n  constructor(\n    @Inject(CustomerServiceKey)\n    protected readonly customerService: CustomerService,\n    @Inject(AddressServiceKey)\n    protected readonly addressService: AddressService,\n  ) {}\n\n  @Query(() => [Customer])\n  async customers() {\n    return await this.customerService.loadEntities(getManager());\n  }\n\n  @Query(() => Customer)\n  async customer(@Args('id', { type: () => Int }) id: number) {\n    return await this.customerService.loadEntityById(getManager(), id);\n  }\n\n  @Query(() => [Customer])\n  async customersByArgs(\n    @Args('displayName', { type: () => String, nullable: true })\n    displayName: string,\n    @Args('legalName', { type: () => String, nullable: true })\n    legalName: string,\n  ) {\n    const where: any = {};\n    if (displayName) {\n      where.displayName = displayName;\n    }\n    if (legalName) {\n      where.legalName = legalName;\n    }\n\n    return await this.customerService.loadEntities(getManager(), { where });\n  }\n\n  @ResolveField()\n  async legalAddress(@Parent() customer: Customer) {\n    const entityManager = getManager();\n    const { id } = customer;\n    const { customer_legalAddressId } = await this.customerService\n      .createQueryBuilder(entityManager, `customer`)\n      .where(`customer.id=:id`, { id })\n      .getRawOne();\n    return this.addressService.loadEntityById(\n      entityManager,\n      customer_legalAddressId,\n    );\n  }\n\n  @Mutation(() => Customer)\n  async saveCustomer(\n    @Args('args') objData: CustomerSaveArgs,\n    @CurrentUser() user,\n  ): Promise<CustomerModel> {\n    return await this.customerService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/factoring.contract.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { FactoringContract } from '../../model/generated/entities/FactoringContract';\nimport {\n  FactoringContractModel,\n  FactoringContractService,\n  FactoringContractServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { FactoringContractSaveArgs } from '../saveArgs/factoring.contract.save.args';\n\n@Resolver(() => FactoringContract)\n@UseGuards(GqlAuthGuard)\nexport class FactoringContractResolver {\n  constructor(\n    @Inject(FactoringContractServiceKey)\n    protected readonly factoringContractService: FactoringContractService,\n  ) {}\n\n  @Query(() => [FactoringContract])\n  async factoringContracts() {\n    return await this.factoringContractService.loadEntities(getManager(), {\n      relations: ['factoringProvider', 'customer', 'organization'],\n    });\n  }\n\n  @Query(() => FactoringContract)\n  async factoringContract(@Args('id', { type: () => Int }) id: number) {\n    return await this.factoringContractService.loadEntityById(getManager(), id);\n  }\n\n  @Mutation(() => FactoringContract)\n  async saveFactoringContract(\n    @Args('args') objData: FactoringContractSaveArgs,\n    @CurrentUser() user,\n  ): Promise<FactoringContractModel> {\n    return await this.factoringContractService.save(\n      getManager(),\n      objData,\n      user,\n    );\n  }\n}\n",
    "apps/api/src/app/resolvers/factoring.provider.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { FactoringProvider } from '../../model/generated/entities/FactoringProvider';\nimport {\n  FactoringProviderModel,\n  FactoringProviderService,\n  FactoringProviderServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { FactoringProviderSaveArgs } from '../saveArgs/factoring.provider.save.args';\nimport { FactoringContractSaveArgs } from '../saveArgs/factoring.contract.save.args';\n\n@Resolver(() => FactoringProvider)\n@UseGuards(GqlAuthGuard)\nexport class FactoringProviderResolver {\n  constructor(\n    @Inject(FactoringProviderServiceKey)\n    protected readonly factoringProviderService: FactoringProviderService,\n  ) {}\n\n  @Query(() => [FactoringProvider])\n  async factoringProviders() {\n    return await this.factoringProviderService.loadEntities(getManager());\n  }\n\n  @Query(() => [FactoringProvider])\n  async factoringProvidersForInvoice(\n    @Args('args') objData: FactoringContractSaveArgs,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    @CurrentUser() user,\n  ) {\n    const manager = getManager();\n    return await this.factoringProviderService.getPossibleFactoringProviders(\n      manager,\n      objData.organizationId,\n      objData.customerId,\n    );\n  }\n\n  @Query(() => FactoringProvider)\n  async factoringProvider(@Args('id', { type: () => Int }) id: number) {\n    return await this.factoringProviderService.loadEntityById(getManager(), id);\n  }\n\n  @Mutation(() => FactoringProvider)\n  async saveFactoringProvider(\n    @Args('args') objData: FactoringProviderSaveArgs,\n    @CurrentUser() user,\n  ): Promise<FactoringProviderModel> {\n    return await this.factoringProviderService.save(\n      getManager(),\n      objData,\n      user,\n    );\n  }\n}\n",
    "apps/api/src/app/resolvers/menu.resolver.ts": "import { Query, Resolver } from '@nestjs/graphql';\nimport { Menu } from '../../model/generated/entities/Menu';\nimport { UseGuards } from '@nestjs/common';\nimport { GqlAuthGuard } from '../../auth';\nimport { getManager } from 'typeorm';\n\n@Resolver(() => Menu)\n@UseGuards(GqlAuthGuard)\nexport class MenuResolver {\n  @Query(() => [Menu])\n  async menu() {\n    const manager = getManager();\n\n    return await manager.find(Menu);\n  }\n}\n",
    "apps/api/src/app/resolvers/organization.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { Organization } from '../../model/generated/entities/Organization';\nimport {\n  OrganizationModel,\n  OrganizationService,\n  OrganizationServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport { OrganizationSaveArgs } from '../saveArgs/organization.save.args';\n\n@Resolver(() => Organization)\n@UseGuards(GqlAuthGuard)\nexport class OrganizationResolver {\n  constructor(\n    @Inject(OrganizationServiceKey)\n    protected readonly organizationService: OrganizationService,\n  ) {}\n\n  @Query(() => [Organization])\n  async organizations() {\n    return await this.organizationService.loadEntities(getManager());\n  }\n\n  @Query(() => Organization)\n  async organization(@Args('id', { type: () => Int }) id: number) {\n    const result = await this.organizationService.loadEntityById(\n      getManager(),\n      id,\n    );\n    return result;\n  }\n\n  @Mutation(() => Organization)\n  async saveOrganization(\n    @Args('args') objData: OrganizationSaveArgs,\n    @CurrentUser() user,\n  ): Promise<OrganizationModel> {\n    return await this.organizationService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/product.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { Product } from '../../model/generated/entities/Product';\nimport { ProductModel, ProductService, ProductServiceKey } from '../../model';\nimport { getManager } from 'typeorm';\nimport { ProductSaveArgs } from '../saveArgs/product.save.args';\n\n@Resolver(() => Product)\n@UseGuards(GqlAuthGuard)\nexport class ProductResolver {\n  constructor(\n    @Inject(ProductServiceKey)\n    protected readonly productService: ProductService,\n  ) {}\n\n  @Query(() => [Product])\n  async products() {\n    return await this.productService.loadEntities(getManager());\n  }\n\n  @Query(() => Product)\n  async product(@Args('id', { type: () => Int }) id: number) {\n    const result = await this.productService.loadEntityById(getManager(), id);\n    return result;\n  }\n\n  @Mutation(() => Product)\n  async saveProduct(\n    @Args('args') objData: ProductSaveArgs,\n    @CurrentUser() user,\n  ): Promise<ProductModel> {\n    return await this.productService.save(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/sales.invoice.resolver.ts": "import { Args, Int, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { CurrentUser, GqlAuthGuard } from '../../auth';\nimport { SalesInvoice } from '../../model/generated/entities/SalesInvoice';\nimport {\n  SalesInvoiceModel,\n  SalesInvoicePublishArgsModel,\n  SalesInvoiceService,\n  SalesInvoiceServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\nimport {\n  SalesInvoiceMonthlySaveArgs,\n  SalesInvoicePublishArgs,\n} from '../saveArgs/sales.invoice.monthly.save.args';\nimport { SalesInvoiceSaveArgs } from '../saveArgs/sales.invoice.save.args';\nimport { SalesInvoicesInTime } from '../dto/SalesInvoicesInTime';\nimport * as moment from 'moment';\nimport { BaseSaveArgs } from '../saveArgs/base.save.args';\n\n@Resolver(() => SalesInvoice)\n@UseGuards(GqlAuthGuard)\nexport class SalesInvoiceResolver {\n  constructor(\n    @Inject(SalesInvoiceServiceKey)\n    protected readonly salesInvoiceService: SalesInvoiceService,\n  ) {}\n\n  @Query(() => [SalesInvoice])\n  async salesInvoices() {\n    return await this.salesInvoiceService.loadEntities(getManager(), {\n      order: { id: 'DESC' },\n    });\n  }\n\n  @Query(() => SalesInvoice)\n  async salesInvoice(@Args('id', { type: () => Int }) id: number) {\n    return await this.salesInvoiceService.loadEntityById(getManager(), id);\n  }\n\n  @Mutation(() => SalesInvoice)\n  async duplicateSalesInvoice(\n    @Args('id', { type: () => Int }) id: number,\n    @CurrentUser() user,\n  ) {\n    return await this.salesInvoiceService.duplicate(getManager(), id, user);\n  }\n\n  @Query(() => [SalesInvoicesInTime])\n  async salesInvoicesReport() {\n    const result = await this.salesInvoiceService.salesInvoicesReport(\n      getManager(),\n    );\n\n    return result.map(({ year, month, organization_displayName, sum }) => ({\n      group: organization_displayName,\n      date: moment()\n        .year(year)\n        .month(month)\n        .date(1)\n        .format('YYYY-MM-DD'),\n      value: sum,\n    }));\n  }\n\n  @Mutation(() => [SalesInvoice])\n  async createMonthlyInvoice(\n    @Args('args') objData: SalesInvoiceMonthlySaveArgs,\n    @CurrentUser() user,\n  ): Promise<SalesInvoiceModel[]> {\n    return await this.salesInvoiceService.createMonthlyInvoice(\n      getManager(),\n      objData,\n      user,\n    );\n  }\n\n  @Mutation(() => SalesInvoice)\n  async saveSalesInvoice(\n    @Args('args') objData: SalesInvoiceSaveArgs,\n    @CurrentUser() user,\n  ): Promise<SalesInvoiceModel> {\n    return await this.salesInvoiceService.save(getManager(), objData, user);\n  }\n\n  @Mutation(() => SalesInvoice)\n  async confirmSalesInvoice(\n    @Args('args') objData: BaseSaveArgs,\n    @CurrentUser() user,\n  ): Promise<SalesInvoiceModel> {\n    const id = objData.id;\n    const invoice = await this.salesInvoiceService.loadEntityById(\n      getManager(),\n      id,\n    );\n    return await this.salesInvoiceService.confirm(getManager(), invoice, user);\n  }\n\n  @Mutation(() => SalesInvoice)\n  async publishSalesInvoice(\n    @Args('args') objData: SalesInvoicePublishArgs,\n    @CurrentUser() user,\n  ): Promise<SalesInvoiceModel> {\n    return await this.salesInvoiceService.publish(getManager(), objData, user);\n  }\n}\n",
    "apps/api/src/app/resolvers/unit.of.measurement.resolver.ts": "import { Query, Resolver } from '@nestjs/graphql';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { GqlAuthGuard } from '../../auth';\nimport { UnitOfMeasurement } from '../../model/generated/entities/UnitOfMeasurement';\nimport {\n  UnitOfMeasurementService,\n  UnitOfMeasurementServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\n// import { UnitOfMeasurementSaveArgs } from '../saveArgs/unitOfMeasurement.save.args';\n\n@Resolver(() => UnitOfMeasurement)\n@UseGuards(GqlAuthGuard)\nexport class UnitOfMeasurementResolver {\n  constructor(\n    @Inject(UnitOfMeasurementServiceKey)\n    protected readonly unitOfMeasurementService: UnitOfMeasurementService,\n  ) {}\n\n  @Query(() => [UnitOfMeasurement])\n  async currencies() {\n    return await this.unitOfMeasurementService.loadEntities(getManager());\n  }\n\n  /*@Mutation(() => UnitOfMeasurement)\n  async saveUnitOfMeasurement(\n    @Args('args') objData: UnitOfMeasurementSaveArgs,\n    @CurrentUser() user,\n  ): Promise<UnitOfMeasurementModel> {\n    return await this.unitOfMeasurementService.save(\n      getManager(),\n      objData,\n      user,\n    );\n  }*/\n}\n",
    "apps/api/src/app/support/everything.subscriber.ts": "import { User } from '../../model/generated/entities/User';\nimport { EntityManager } from 'typeorm';\n\nexport class EverythingSubscriber {\n  static createTechnicalUser = async (manager: EntityManager) => {\n    const user = new User();\n    user.email = process.env.TECHNICAL_USER_EMAIL;\n    await manager.save(user);\n  };\n}\n",
    "apps/api/src/auth/lib/authentication.service.ts": "import { HttpService, Injectable } from '@nestjs/common';\nimport {\n  getService,\n  getTechnicalUser,\n  UserModel,\n  UserService,\n  UserServiceKey,\n} from '../../model';\nimport { getManager } from 'typeorm';\n\ninterface KeycloakUserInfoResponse {\n  sub: string;\n  email_verified: boolean;\n  name: string;\n  preferred_username: string;\n  given_name: string;\n  family_name: string;\n  email: string;\n}\n\nexport class AuthenticationError extends Error {}\n\n@Injectable()\nexport class AuthenticationService {\n  private readonly baseURL: string;\n  private readonly realm: string;\n\n  constructor(private httpService: HttpService) {\n    this.baseURL = process.env.KEYCLOAK_BASE_URL;\n    this.realm = process.env.KEYCLOAK_REALM;\n  }\n\n  /**\n   * Call the OpenId Connect UserInfo endpoint on Keycloak: https://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n   *\n   * If it succeeds, the token is valid and we get the user infos in the response\n   * If it fails, the token is invalid or expired\n   */\n  async authenticate(accessToken: string): Promise<UserModel> {\n    const manager = getManager();\n    const technicalUser = await getTechnicalUser(manager);\n    if (accessToken === process.env.FAKE_TOKEN) {\n      return technicalUser;\n    }\n\n    const url = `${this.baseURL}/realms/${this.realm}/protocol/openid-connect/userinfo`;\n\n    try {\n      const response = await this.httpService\n        .get<KeycloakUserInfoResponse>(url, {\n          headers: {\n            authorization: `Bearer ${accessToken}`,\n          },\n        })\n        .toPromise();\n\n      const userService = getService<UserService>(UserServiceKey);\n      const profile = {\n        user_id: response.data.email,\n        name: response.data.preferred_username,\n        identities: [\n          {\n            user_id: response.data.email,\n            provider: 'keycloak',\n          },\n        ],\n      };\n\n      return await userService.handleLogin(manager, profile);\n    } catch (e) {\n      console.log('*** auth failed', accessToken, e);\n      throw new AuthenticationError(e.message);\n    }\n  }\n}\n",
    "apps/api/src/main.ts": "/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\n\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  app.enableCors();\n  const port = process.env.PORT || 3333;\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port + '/');\n  });\n}\n\nbootstrap();\n",
    "apps/api/src/model/lib/address.service.ts": "import { BaseEntityService } from './base.entity.service';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { AddressModel } from './address.model';\nimport { AddressSaveArgsModel } from './address.save.args.model';\nimport { EntityManager, Repository } from 'typeorm';\nimport * as deepEqual from 'deep-equal';\nimport { CountryService, CountryServiceKey } from './country.service';\nimport { Address } from '../generated/entities/Address';\n\nexport const AddressServiceKey = 'AddressService';\n\n@Injectable()\nexport class AddressService extends BaseEntityService<\n  AddressModel,\n  AddressSaveArgsModel\n> {\n  constructor(\n    @Inject(CountryServiceKey) public readonly countryService: CountryService,\n  ) {\n    super();\n  }\n\n  createEntity(): AddressModel {\n    return new Address();\n  }\n\n  loadEntityByIdRelations(): string[] {\n    return ['country'];\n  }\n\n  protected async doSave(\n    transactionalEntityManager,\n    newAddress: AddressSaveArgsModel,\n  ): Promise<AddressModel> {\n    const oldAddress = newAddress.id\n      ? await this.loadEntityById(transactionalEntityManager, newAddress.id)\n      : null;\n\n    const oldAddressSimple: AddressSaveArgsModel = {\n      city: oldAddress ? oldAddress.city : '',\n      line1: oldAddress ? oldAddress.line1 : '',\n      zipCode: oldAddress ? oldAddress.zipCode : '',\n      countryIsoCode: oldAddress ? oldAddress.country.isoCode : '',\n    };\n\n    if (!deepEqual(oldAddressSimple, newAddress)) {\n      const address = await this.createEntity();\n      address.line1 = newAddress.line1;\n      address.zipCode = newAddress.zipCode;\n      address.city = newAddress.city;\n\n      if (newAddress.country) {\n        address.country = newAddress.country;\n      } else {\n        address.country = await this.countryService.getCountry(\n          transactionalEntityManager,\n          newAddress.countryIsoCode,\n          newAddress.countryId,\n        );\n      }\n\n      // address.country = Promise.resolve(newAddress.country ? newAddress.country : await base.loadCountry(newAddress.countryId));\n      return address;\n    }\n\n    return oldAddress;\n  }\n\n  protected getRepository(\n    transactionalEntityManager: EntityManager,\n  ): Repository<AddressModel> {\n    return transactionalEntityManager.getRepository(Address);\n  }\n\n  typeName(): string {\n    return AddressServiceKey;\n  }\n}\n",
    "apps/api/src/model/lib/attachment.service.ts": "import { EntityManager, Repository } from 'typeorm';\nimport { AttachmentModel } from './attachment.model';\nimport { AttachmentSaveArgsModel } from './attachment.save.args.model';\nimport { BaseEntityService } from './base.entity.service';\nimport {\n  Attachment,\n  CloudFile,\n  CloudFolder,\n} from '../generated/entities/Attachment';\nimport { SMCloudStore } from '../../../../../absorb/SMCloudStore/smcloudstore/src/SMCloudStore';\n\nexport const AttachmentServiceKey = 'AttachmentService';\n\nexport class AttachmentService extends BaseEntityService<\n  AttachmentModel,\n  AttachmentSaveArgsModel\n> {\n  createEntity(): AttachmentModel {\n    return new Attachment();\n  }\n\n  connection = {\n    accessKeyId: process.env.AWS_ACCESS_KEY,\n    secretAccessKey: process.env.AWS_SECRET,\n    region: process.env.AWS_REGION,\n  };\n\n  storage = SMCloudStore.create('aws-s3', this.connection, {\n    createListItemObject: () => new CloudFile(),\n    createListItemPrefix: () => new CloudFolder(),\n  });\n\n  ensureContainer = () =>\n    this.storage.ensureContainer(process.env.ATT_CONTAINER);\n\n  protected getRepository(\n    transactionalEntityManager,\n  ): Repository<AttachmentModel> {\n    return transactionalEntityManager.getRepository(Attachment);\n  }\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: AttachmentSaveArgsModel,\n    attachment: AttachmentModel,\n  ): Promise<AttachmentModel> {\n    attachment.displayName = args.displayName;\n\n    // await ensureContainer();\n\n    attachment.content = args.content;\n    return attachment;\n  }\n\n  async listCloudContent() {\n    await this.ensureContainer();\n    return await this.storage.listObjects(process.env.ATT_CONTAINER);\n  }\n\n  async getFileAsBase64(id: string) {\n    await this.ensureContainer();\n    return await this.storage.getObjectBase64(process.env.ATT_CONTAINER, id);\n  }\n  async getFileAsStream(id: string) {\n    await this.ensureContainer();\n    return await this.storage.getObject(process.env.ATT_CONTAINER, id);\n  }\n\n  typeName(): string {\n    return AttachmentServiceKey;\n  }\n}\n",
    "apps/api/src/model/lib/currency.rate.service.ts": "import { CurrencyRateModel } from './currency.rate.model';\nimport { CurrencyRateSaveArgsModel } from './currency.rate.save.args.model';\nimport { CurrencyModel } from './currency.model';\nimport { EntityManager, Repository } from 'typeorm';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { CurrencyService, CurrencyServiceKey } from './currency.service';\nimport { BaseEntityService } from './base.entity.service';\nimport { OrganizationModel } from './organization.model';\nimport {\n  OrganizationService,\n  OrganizationServiceKey,\n} from './organization.service';\nimport { CurrencyRate } from '../generated/entities/CurrencyRate';\n\nexport const CurrencyRateServiceKey = 'CurrencyRateService';\n\n@Injectable()\nexport class CurrencyRateService extends BaseEntityService<\n  CurrencyRateModel,\n  CurrencyRateSaveArgsModel\n> {\n  constructor(\n    @Inject(CurrencyServiceKey)\n    protected readonly currencyService: CurrencyService,\n    @Inject(OrganizationServiceKey)\n    protected readonly organizationService: OrganizationService,\n  ) {\n    super();\n  }\n\n  getAccountingForDateAndOrg = async (\n    transactionalEntityManager: EntityManager,\n    transactionDate: Date,\n    from: CurrencyModel,\n    org: OrganizationModel,\n  ) => {\n    const toCurrency: CurrencyModel =\n      org?.accountingScheme?.currency ||\n      (\n        await this.organizationService.reloadEntity(\n          transactionalEntityManager,\n          org,\n          ['accountingScheme', 'accountingScheme.currency'],\n        )\n      ).accountingScheme.currency;\n\n    if (from.id === toCurrency.id)\n      return {\n        id: 0,\n        displayName: '',\n        currencyMultiplyingRate: 1,\n        from,\n        to: from,\n        start: transactionDate,\n        end: transactionDate,\n      };\n\n    return await this.getRepository(transactionalEntityManager)\n      .createQueryBuilder('currencyRate')\n      .where(\n        'currencyRate.from = :from AND currencyRate.to = :to ' +\n          ' AND currencyRate.start <= :transactionDate AND currencyRate.end >= :transactionDate',\n        {\n          from: from.id,\n          to: toCurrency.id,\n          transactionDate,\n        },\n      )\n      .getOne();\n  };\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: CurrencyRateSaveArgsModel,\n    entity: CurrencyRateModel,\n  ): Promise<CurrencyRateModel> {\n    const currencyService = this.currencyService;\n    entity.currencyMultiplyingRate = args.currencyMultiplyingRate;\n    entity.end = args.end;\n    entity.start = args.start;\n    entity.from =\n      args.from ||\n      (await currencyService.getCurrency(\n        transactionalEntityManager,\n        args.fromIsoCode,\n      ));\n    entity.to =\n      args.to ||\n      (await currencyService.getCurrency(\n        transactionalEntityManager,\n        args.toIsoCode,\n      ));\n    return entity;\n  }\n\n  typeName(): string {\n    return CurrencyRateServiceKey;\n  }\n\n  createEntity(): CurrencyRateModel {\n    return new CurrencyRate();\n  }\n\n  protected getRepository(\n    transactionalEntityManager,\n  ): Repository<CurrencyRateModel> {\n    return transactionalEntityManager.getRepository(CurrencyRate);\n  }\n}\n",
    "apps/api/src/model/lib/customer.price.list.service.ts": "import { BaseEntityService } from './base.entity.service';\nimport { CustomerPriceListModel } from './customer.price.list.model';\nimport { CustomerPriceListSaveArgsModel } from './customer.price.list.save.args.model';\nimport { CustomerPriceList } from '../generated/entities/CustomerPriceList';\nimport { EntityManager, Repository } from 'typeorm';\nimport { UserModel } from './user.model';\nimport { Injectable } from '@nestjs/common';\nimport { getService } from './module.reference.service';\nimport {\n  CustomerGroupService,\n  CustomerGroupServiceKey,\n} from './customer.group.service';\nimport {\n  CustomerProductPriceService,\n  CustomerProductPriceServiceKey,\n} from './customer.product.price.service';\nimport { ProductModel } from './product.model';\nimport { CustomerGroupModel } from './customer.group.model';\n\nexport const CustomerPriceListServiceKey = 'CustomerPriceListService';\n\n@Injectable()\nexport class CustomerPriceListService extends BaseEntityService<\n  CustomerPriceListModel,\n  CustomerPriceListSaveArgsModel\n> {\n  createEntity(): CustomerPriceListModel {\n    return new CustomerPriceList();\n  }\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: CustomerPriceListSaveArgsModel,\n    entity: CustomerPriceListModel,\n    currentUser: UserModel,\n  ): Promise<CustomerPriceListModel> {\n    const customerGroupService: CustomerGroupService = getService(\n      CustomerGroupServiceKey,\n    );\n    const customerProductPriceService: CustomerProductPriceService = getService(\n      CustomerProductPriceServiceKey,\n    );\n\n    entity.customerGroup = args.customerGroup\n      ? args.customerGroup\n      : await customerGroupService.loadEntity(transactionalEntityManager, {\n          where: { displayName: args.customerGroupDisplayName },\n        });\n    entity.validFrom = args.validFrom;\n    entity.validTo = args.validTo;\n    entity.displayName = args.displayName;\n\n    await this.persist(transactionalEntityManager, entity, currentUser);\n\n    entity.productPrices = [];\n    for (const productPrice of args.productPrices) {\n      entity.productPrices.push(\n        await customerProductPriceService.save(\n          transactionalEntityManager,\n          {\n            sellingPrice: productPrice.sellingPrice,\n            productId: productPrice.productId,\n            customerPriceList: entity,\n            currencyId: productPrice.currencyId,\n          },\n          currentUser,\n        ),\n      );\n    }\n\n    return entity;\n  }\n\n  protected getRepository(\n    transactionalEntityManager: EntityManager,\n  ): Repository<CustomerPriceListModel> {\n    return transactionalEntityManager.getRepository(CustomerPriceList);\n  }\n\n  typeName(): string {\n    return CustomerPriceListServiceKey;\n  }\n\n  async loadDateValidByCustomerGroupAndProduct(\n    transactionalEntityManager: EntityManager,\n    customerGroup: CustomerGroupModel,\n    product: ProductModel,\n  ): Promise<CustomerPriceListModel[]> {\n    const productId = product.id;\n    const customerGroupId = customerGroup.id;\n    return await this.getRepository(transactionalEntityManager)\n      .createQueryBuilder('customerPriceList')\n      .leftJoinAndSelect('customerPriceList.customerGroup', 'customerGroup')\n      .leftJoinAndSelect(\n        'customerPriceList.productPrices',\n        'customerProductPriceModel',\n      )\n      .leftJoinAndSelect('customerProductPriceModel.product', 'product')\n      .where(\n        'product.id=:productId AND customerGroup.id=:customerGroupId AND ' +\n          ' ( now() > customerPriceList.validFrom OR customerPriceList.validFrom IS NULL )' +\n          ' ( now() < customerPriceList.validTo customerPriceList.validTo IS NULL )',\n        {\n          productId,\n          customerGroupId,\n        },\n      )\n      .orderBy('customerPriceList.validFrom', 'DESC')\n      .getMany();\n  }\n}\n",
    "apps/api/src/model/lib/customer.product.price.service.ts": "import { BaseEntityService } from './base.entity.service';\nimport { CustomerProductPriceModel } from './customer.product.price.model';\nimport { CustomerProductPriceSaveArgsModel } from './customer.product.price.save.args.model';\nimport { CustomerProductPrice } from '../generated/entities/CustomerProductPrice';\nimport { EntityManager } from 'typeorm';\nimport { Repository } from 'typeorm';\nimport { getService } from './module.reference.service';\nimport {\n  CustomerPriceListService,\n  CustomerPriceListServiceKey,\n} from './customer.price.list.service';\nimport { ProductService, ProductServiceKey } from './product.service';\nimport { Inject } from '@nestjs/common';\nimport { CurrencyService, CurrencyServiceKey } from './currency.service';\n\nexport const CustomerProductPriceServiceKey = 'CustomerProductPriceServiceKey';\n\nexport class CustomerProductPriceService extends BaseEntityService<\n  CustomerProductPriceModel,\n  CustomerProductPriceSaveArgsModel\n> {\n  constructor(\n    @Inject(ProductServiceKey)\n    protected readonly productService: ProductService,\n    @Inject(CurrencyServiceKey)\n    protected readonly currencyService: CurrencyService,\n  ) {\n    super();\n  }\n\n  createEntity(): CustomerProductPriceModel {\n    return new CustomerProductPrice();\n  }\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: CustomerProductPriceSaveArgsModel,\n    entity: CustomerProductPriceModel,\n  ): Promise<CustomerProductPriceModel> {\n    const customerPriceListService: CustomerPriceListService = getService(\n      CustomerPriceListServiceKey,\n    );\n    entity.product = await this.productService.loadEntityById(\n      transactionalEntityManager,\n      args.productId,\n    );\n    entity.sellingPrice = args.sellingPrice;\n    entity.customerPriceList = await customerPriceListService.loadEntityById(\n      transactionalEntityManager,\n      args.customerPriceListId,\n    );\n    return entity;\n  }\n\n  protected getRepository(\n    transactionalEntityManager: EntityManager,\n  ): Repository<CustomerProductPriceModel> {\n    return transactionalEntityManager.getRepository(CustomerProductPrice);\n  }\n\n  typeName(): string {\n    return CustomerProductPriceServiceKey;\n  }\n}\n",
    "apps/api/src/model/lib/document.numbering.service.ts": "import { EntityManager } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { BaseModel } from './base.model';\nimport { OrganizationModel } from './organization.model';\nimport { DocumentNumberSequence } from '../generated/entities/DocumentNumberSequence';\nimport { SalesInvoice } from '../generated/entities/SalesInvoice';\nimport { UserModel } from './user.model';\n\nexport const DocumentNumberingServiceKey = 'DocumentNumberingService';\n\n@Injectable()\nexport class DocumentNumberingService {\n  async getNextDocumentNumber<M extends BaseModel>(\n    manager: EntityManager,\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    modelCtor: (new () => M) | Function,\n    organization: OrganizationModel,\n  ): Promise<string> {\n    const model = await manager.getRepository(DocumentNumberSequence).findOne({\n      where: { forType: modelCtor.name, organization },\n      order: { id: 'DESC' },\n    });\n    const result = model.current;\n    model.current = +model.current + 1;\n    await manager.save(model);\n    return result.toString();\n  }\n\n  async save(\n    entityManager: EntityManager,\n    current: number,\n    currentUser: UserModel,\n    organization: OrganizationModel,\n  ) {\n    const documentNumberSequence = new DocumentNumberSequence();\n    documentNumberSequence.current = current;\n    documentNumberSequence.forType = SalesInvoice.name;\n    documentNumberSequence.organization = organization;\n    documentNumberSequence.updtOp = currentUser;\n    await entityManager.save(documentNumberSequence);\n  }\n}\n",
    "apps/api/src/model/lib/mail.service.ts": "import { Inject, Injectable } from '@nestjs/common';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { EventLogService, EventLogServiceKey } from './eventLog.service';\nimport { getManager } from 'typeorm';\nimport { getTechnicalUser } from './user.service';\nimport { Address } from '@nestjs-modules/mailer/dist/interfaces/send-mail-options.interface';\nimport { ConfigService, ConfigServiceKey } from './config.service';\nimport { ConfigData } from './config.model';\n\nexport const MailServiceKey = 'MailServiceKey';\n\nexport interface MailConfiguration extends ConfigData {\n  __typeName: 'MailConfiguration';\n  from: string;\n}\n\nexport interface MailAttachment {\n  filename: string;\n  /**\n   * This can be Buffer or Stream directly. If it is a base64 string returned from S3,\n   * you must also include `encoding: 'base64'`\n   */\n  content?: any;\n  encoding?: string;\n}\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private readonly mailerService: MailerService,\n    @Inject(EventLogServiceKey)\n    private readonly eventLogService: EventLogService,\n    @Inject(ConfigServiceKey)\n    private readonly configService: ConfigService<MailConfiguration>,\n  ) {}\n\n  async senderEmail() {\n    const manager = getManager();\n    return (\n      (\n        await this.configService.loadEntity(manager, {\n          where: { displayName: 'MailConfiguration' },\n        })\n      )?.content?.from || process.env.MAIL_USER\n    );\n  }\n\n  async send(\n    to: Address,\n    bcc: Address,\n    subject: string,\n    text: string,\n    html: string,\n    replyTo: string,\n    attachments: MailAttachment[] | undefined,\n  ) {\n    const manager = getManager();\n    try {\n      await this.mailerService.sendMail({\n        // list of receivers\n        to,\n        bcc,\n        // sender address\n        from: await this.senderEmail(),\n        subject, // Subject line\n        text,\n        html,\n        replyTo,\n        attachments,\n      });\n    } catch (exception) {\n      await this.eventLogService.save(\n        manager,\n        {\n          displayName: 'email sending failed',\n          content: { exception },\n        },\n        await getTechnicalUser(manager),\n      );\n    }\n  }\n}\n",
    "apps/api/src/model/lib/tax.service.ts": "import { TaxModel } from './tax.model';\nimport { TaxSaveArgsModel } from './tax.save.args.model';\nimport { EntityManager, Repository } from 'typeorm';\nimport { Injectable } from '@nestjs/common';\nimport { BaseEntityService } from './base.entity.service';\nimport { Tax } from '../generated/entities/Tax';\n\nexport const TaxServiceKey = 'TaxService';\n\n@Injectable()\nexport class TaxService extends BaseEntityService<TaxModel, TaxSaveArgsModel> {\n  createEntity(): TaxModel {\n    return new Tax();\n  }\n\n  protected getRepository(transactionalEntityManager): Repository<TaxModel> {\n    return transactionalEntityManager.getRepository(Tax);\n  }\n\n  protected async doSave(\n    transactionalEntityManager: EntityManager,\n    args: TaxSaveArgsModel,\n    tax: TaxModel,\n  ): Promise<TaxModel> {\n    tax.ratePercent = args.ratePercent;\n    tax.displayName = args.displayName;\n    // TODO: if setting isStandard === true, remove old standard first\n    tax.isStandard = args.isStandard;\n    return tax;\n  }\n\n  typeName(): string {\n    return TaxServiceKey;\n  }\n\n  getZeroTax = async (transactionalEntityManager: EntityManager) =>\n    await this.getRepository(transactionalEntityManager).findOne({\n      where: { ratePercent: 0 },\n    });\n  getStandardTax = async (transactionalEntityManager: EntityManager) =>\n    await this.getRepository(transactionalEntityManager).findOne({\n      where: { isStandard: true },\n    });\n}\n",
    "apps/api/src/model/lib/user.service.spec.ts": "import { Test } from '@nestjs/testing';\nimport { UserService } from './user.service';\n\ndescribe('UserService', () => {\n  let service: UserService;\n\n  beforeAll(async () => {\n    const app = await Test.createTestingModule({\n      providers: [UserService],\n    }).compile();\n\n    service = app.get<UserService>(UserService);\n  });\n\n  describe('UserService', () => {\n    it('works for null', async () => {\n      await service.handleLogin(null, null);\n    });\n  });\n});\n",
    "apps/api/src/model/lib/user.service.ts": "import { UserModel } from './user.model';\nimport { UserProfileModel } from './user.profile.model';\nimport { UserSaveArgsModel } from './user.save.args.model';\nimport { BaseEntityService } from './base.entity.service';\nimport { EntityManager, Repository } from 'typeorm';\nimport { UserProfileModelIdentity } from './user.profile.model.identity';\nimport { User } from '../generated/entities/User';\nimport { UserIdentity } from '../generated/entities/UserIdentity';\nimport { Injectable } from '@nestjs/common';\n\nexport const UserServiceKey = 'UserService';\n\nexport interface LoginHandler {\n  /**\n   * Handle successful user login and map to UserModel\n   * @param manager - entity manager\n   * @param login - a user profile of a successfully logged user\n   */\n  handleLogin(\n    manager: EntityManager,\n    login: UserProfileModel,\n  ): Promise<UserModel>;\n}\n\nexport const getTechnicalUser = (manager: EntityManager) =>\n  manager\n    .getRepository(User)\n    .findOne({ where: { email: process.env.TECHNICAL_USER_EMAIL } });\n\n/**\n * User service to handle possibly multiple user identities and automatic user creation on a successful login-\n */\n@Injectable()\nexport class UserService extends BaseEntityService<UserModel, UserSaveArgsModel>\n  implements LoginHandler {\n  createEntity(): UserModel {\n    return new User();\n  }\n\n  protected getRepository(transactionalEntityManager): Repository<UserModel> {\n    return transactionalEntityManager.getRepository(User);\n  }\n\n  async findUserByEmail(manager: EntityManager, email: string): Promise<User> {\n    if (!email) return null;\n    const found = await manager\n      .getRepository(User)\n      .findOne({ where: { email } });\n    return found || null;\n  }\n\n  async findUserIdentity(\n    manager: EntityManager,\n    userProfileIdentities: Array<UserProfileModelIdentity>,\n  ): Promise<UserIdentity> {\n    const userId = userProfileIdentities[0].user_id;\n    const provider = userProfileIdentities[0].provider;\n    if (!userId || !provider) return null;\n    const found = await manager\n      .getRepository(UserIdentity)\n      .findOne({ where: { externalUser: userId, provider } });\n    return found || null;\n  }\n  async findUser(\n    manager: EntityManager,\n    userProfileModel: UserProfileModel,\n  ): Promise<UserModel> {\n    const email = userProfileModel.email;\n    return await this.findUserByEmail(manager, email);\n  }\n  async convertProfileIdentities(\n    manager: EntityManager,\n    user: UserModel,\n    userProfileIdentities: Array<UserProfileModelIdentity>,\n  ): Promise<Array<UserIdentity>> {\n    const result: Array<UserIdentity> = [];\n    for (const userProfileIdentity of userProfileIdentities) {\n      const userIdentity = new UserIdentity();\n      userIdentity.externalUser = userProfileIdentity.user_id;\n      userIdentity.provider = userProfileIdentity.provider;\n      userIdentity.user = user;\n      userIdentity.updtOp = user;\n      try {\n        await manager.save(userIdentity);\n        result.push(userIdentity);\n      } catch (err) {\n        console.log('FAILED:', err);\n        throw err;\n      }\n    }\n    return result;\n  }\n  async createNewUser(\n    manager: EntityManager,\n    userProfileModel: UserProfileModel,\n    technicalUser: UserModel,\n  ): Promise<User> {\n    const result = new User();\n    result.email = userProfileModel.email;\n    result.name = userProfileModel.name;\n    result.updtOpId = technicalUser.id;\n    await manager.save(result);\n    const ident = userProfileModel.identities[0];\n    const userIdentity = new UserIdentity();\n    userIdentity.externalUser = ident.user_id;\n    userIdentity.provider = ident.provider;\n    userIdentity.user = result;\n    userIdentity.updtOp = result;\n    await manager.save(userIdentity);\n    result.identities = [userIdentity];\n    return result;\n  }\n\n  protected async doSave(\n    manager: EntityManager,\n    args: UserSaveArgsModel,\n    entity: UserModel,\n  ): Promise<UserModel> {\n    return manager && args && entity;\n  }\n\n  typeName(): string {\n    return UserServiceKey;\n  }\n\n  /**\n   * Handle successful user login and map to UserModel\n   * @param manager - entity manager\n   * @param login - a user profile of a successfully logged user\n   */\n  async handleLogin(\n    manager: EntityManager,\n    login: UserProfileModel,\n  ): Promise<UserModel> {\n    if (!login || !login.identities) return null;\n    const existingUserIdentity = await this.findUserIdentity(\n      manager,\n      login.identities,\n    );\n    if (existingUserIdentity) {\n      return existingUserIdentity.user;\n    } else {\n      // we do not have the identity; we must first try to find out if we have the same User already\n      const technicalUser = await getTechnicalUser(manager);\n      const existingUser = await this.findUser(manager, login);\n      if (existingUser) {\n        const converted = await this.convertProfileIdentities(\n          manager,\n          existingUser,\n          login.identities,\n        );\n        existingUser.identities.push(...converted);\n        return existingUser;\n      } else {\n        // this is a completely new user\n        return await this.createNewUser(manager, login, technicalUser);\n      }\n    }\n  }\n}\n",
    "apps/api/test/app.e2e-spec.ts": "import { Test, TestingModule } from '@nestjs/testing';\nimport * as request from 'supertest';\nimport { AppModule } from '../src/app/app.module';\n\ndescribe('AppController (e2e)', () => {\n  let app;\n\n  beforeEach(async () => {\n    const moduleFixture: TestingModule = await Test.createTestingModule({\n      imports: [AppModule],\n    }).compile();\n\n    app = moduleFixture.createNestApplication();\n    await app.init();\n  });\n\n  it('/ (GET)', () => {\n    return request(app.getHttpServer())\n      .get('/')\n      .expect(200)\n      .expect('Hello World!');\n  });\n});\n",
    "clients/admin/src/lib/core/attachment.ts": "import type {\n    AttachmentByIdQuery,\n    AttachmentDetailPartsFragment,\n    AttachmentListPartsFragment,\n    AttachmentsQuery,\n    SaveAttachmentMutation,\n    SaveAttachmentMutationVariables,\n} from '../../generated/graphql';\nimport { BaseEntityService } from './entityStore';\nimport type { DocumentNode } from '@apollo/client/core';\nimport { ATTACHMENTS } from '../queries/attachments';\nimport { GET_ATTACHMENT_BY_ID, SAVE_ATTACHMENT } from '../queries/attachment';\n\nclass AttachmentService extends BaseEntityService<\n    AttachmentDetailPartsFragment,\n    AttachmentListPartsFragment,\n    SaveAttachmentMutationVariables,\n    AttachmentByIdQuery,\n    AttachmentsQuery,\n    SaveAttachmentMutation\n> {\n    protected convertDetail(q: AttachmentByIdQuery): AttachmentDetailPartsFragment {\n        return q.attachment;\n    }\n\n    protected convertListItem(q: AttachmentsQuery): AttachmentListPartsFragment[] {\n        return q.attachments;\n    }\n\n    protected getDetailByIdGql(): DocumentNode {\n        return GET_ATTACHMENT_BY_ID;\n    }\n\n    getDetailSafeEntity(): AttachmentDetailPartsFragment {\n        return {} as any;\n    }\n\n    protected getListGql(): DocumentNode {\n        return ATTACHMENTS;\n    }\n\n    protected getSaveGql(): DocumentNode {\n        return SAVE_ATTACHMENT;\n    }\n\n    async download(baseUrl: string | undefined, token: string | undefined, id: string) {\n        if (!baseUrl) throw new Error('baseUrl must be specified');\n        const json = await (\n            await fetch(baseUrl + '/../file/attachment/' + id, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            })\n        ).json();\n        const a = document.createElement('a');\n        a.href = `data:application/octet-stream;base64,${json.data}`;\n        a.setAttribute('download', id);\n        a.click();\n    }\n}\n\nexport const attachmentService: AttachmentService = new AttachmentService();\n",
    "clients/admin/src/lib/core/customer.ts": "import type {\n    CustomerByIdQuery,\n    CustomersQuery,\n    SaveCustomerMutation,\n    SaveCustomerMutationVariables,\n} from '../../generated/graphql';\nimport { GET_CUSTOMER_BY_ID, SAVE_CUSTOMER } from '../queries/customer';\nimport { throwOnUndefined } from '../support/util';\nimport { BaseEntityService } from './entityStore';\nimport type { DocumentNode } from '@apollo/client/core';\nimport type { CustomerDetail, CustomerRow } from '../model/customer';\nimport { CUSTOMERS } from '../queries/customers';\nimport { addressService } from './address';\nimport { customerGroupService } from './customerGroup';\n\nclass CustomerService extends BaseEntityService<\n    CustomerDetail,\n    CustomerRow,\n    SaveCustomerMutationVariables,\n    CustomerByIdQuery,\n    CustomersQuery,\n    SaveCustomerMutation\n> {\n    protected convertDetail(q: CustomerByIdQuery): CustomerDetail {\n        return {\n            ...q.customer,\n            safeAddress: q.customer.address || addressService.getDetailSafeEntity(),\n            safeCustomerGroup:\n                q.customer.customerGroup || customerGroupService.getDetailSafeEntity(),\n        };\n    }\n\n    protected convertListItem(q: CustomersQuery): CustomerRow[] {\n        return q.customers;\n    }\n\n    protected getDetailByIdGql(): DocumentNode {\n        return GET_CUSTOMER_BY_ID;\n    }\n\n    getDetailSafeEntity(): CustomerDetail {\n        return {\n            address: addressService.getDetailSafeEntity(),\n            legalAddress: addressService.getDetailSafeEntity(),\n            safeAddress: addressService.getDetailSafeEntity(),\n            customerGroup: customerGroupService.getDetailSafeEntity(),\n            safeCustomerGroup: customerGroupService.getDetailSafeEntity(),\n        } as any;\n    }\n\n    protected getListGql(): DocumentNode {\n        return CUSTOMERS;\n    }\n\n    protected getSaveGql(): DocumentNode {\n        return SAVE_CUSTOMER;\n    }\n\n    loadCustomerPhotoContent = async (id: number): Promise<string> => {\n        const baseUrl = process.env.API_BASE_URL || throwOnUndefined();\n        const result = await fetch(baseUrl.replace('graphql', 'file/customer-photo/' + id), {\n            headers: {\n                Authorization: 'Bearer ' + (process.env.FAKE_TOKEN || (window as any).token),\n            },\n        });\n        const { data } = await result.json();\n        return data;\n    };\n\n    upload = async (files: any, customerId: number): Promise<void> => {\n        if (!files || files.length === 0) return;\n        const formData = new FormData();\n        formData.append('file', files[0]);\n        const baseUrl = process.env.API_BASE_URL || throwOnUndefined();\n        const upload = (\n            await fetch(baseUrl.replace('graphql', 'file/upload-customer-photo/' + customerId), {\n                method: 'POST',\n                body: formData,\n                headers: {\n                    Authorization: 'Bearer ' + (process.env.FAKE_TOKEN || (window as any).token),\n                },\n            })\n        ).json();\n    };\n}\n\nexport const customerService: CustomerService = new CustomerService();\n",
    "clients/admin/src/lib/core/salesInvoice.ts": "import type {\n    ConfirmSalesInvoiceMutation,\n    PublishSalesInvoiceMutation,\n    PublishSalesInvoiceMutationVariables,\n    SalesInvoiceByIdQuery,\n    SalesInvoicesQuery,\n    SaveSalesInvoiceMutation,\n    SaveSalesInvoiceMutationVariables,\n} from '../../generated/graphql';\nimport {\n    CONFIRM_SALES_INVOICE,\n    DUPLICATE_SALES_INVOICE,\n    GET_SALES_INVOICE_BY_ID,\n    PUBLISH_SALES_INVOICE,\n    SAVE_SALES_INVOICE,\n} from '../queries/salesInvoice';\nimport { mutation } from '../../absorb/svelte-apollo';\nimport { BaseEntityService, initDetail, invalidate } from './entityStore';\nimport type { DocumentNode } from '@apollo/client/core';\nimport type { SalesInvoiceDetail, SalesInvoiceRow } from '../model/salesInvoice';\nimport { SALES_INVOICES } from '../queries/salesInvoices';\n\nclass SalesInvoiceService extends BaseEntityService<\n    SalesInvoiceDetail,\n    SalesInvoiceRow,\n    SaveSalesInvoiceMutationVariables,\n    SalesInvoiceByIdQuery,\n    SalesInvoicesQuery,\n    SaveSalesInvoiceMutation\n> {\n    protected convertDetail(q: SalesInvoiceByIdQuery): SalesInvoiceDetail {\n        return q.salesInvoice;\n    }\n\n    protected convertListItem(q: SalesInvoicesQuery): SalesInvoiceRow[] {\n        return q.salesInvoices;\n    }\n\n    protected getDetailByIdGql(): DocumentNode {\n        return GET_SALES_INVOICE_BY_ID;\n    }\n\n    getDetailSafeEntity(): SalesInvoiceDetail {\n        return { currency: {} } as any;\n    }\n\n    protected getListGql(): DocumentNode {\n        return SALES_INVOICES;\n    }\n\n    protected getSaveGql(): DocumentNode {\n        return SAVE_SALES_INVOICE;\n    }\n\n    async makeSimpleCall<Q>(\n        id: number | string,\n        query: DocumentNode,\n    ): Promise<number | string | undefined> {\n        const refetchQueries = [\n            {\n                query: this.getListGql(),\n            },\n            {\n                query: this.getDetailByIdGql(),\n                variables: { id },\n            },\n        ];\n        const confirmSalesInvoice = mutation<Q>(query);\n\n        const result = await confirmSalesInvoice({\n            variables: {\n                id,\n            },\n            refetchQueries,\n        });\n        if (result.errors) invalidate(this.stores.list);\n        initDetail(this.stores.detail);\n        return (result?.data || ({} as any)).id;\n    }\n\n    /**\n     * Confirms the item, invalidates `stores.list`\n     * @params id - the invoice id\n     */\n    async confirm(id: number) {\n        return this.makeSimpleCall<ConfirmSalesInvoiceMutation>(id, CONFIRM_SALES_INVOICE);\n    }\n\n    /**\n     * Duplicates the item, invalidates `stores.list`\n     * @params id - the invoice id\n     */\n    async duplicate(id: number) {\n        return this.makeSimpleCall<ConfirmSalesInvoiceMutation>(id, DUPLICATE_SALES_INVOICE);\n    }\n\n    /**\n     * Duplicates the item, invalidates `stores.list`\n     * @params id - the invoice id\n     */\n    async publish(id: number, attachmentIds: string[]) {\n        const publishSalesInvoice = mutation<\n            PublishSalesInvoiceMutation,\n            PublishSalesInvoiceMutationVariables\n        >(PUBLISH_SALES_INVOICE);\n        await publishSalesInvoice({\n            variables: {\n                id,\n                attachmentIds,\n            },\n        });\n    }\n\n    async downloadInvoice(baseUrl: string | undefined, token: string | undefined, id: number) {\n        if (!baseUrl) throw new Error('baseUrl must be specified');\n        const json = await (\n            await fetch(baseUrl + '/../file/sales-invoice/' + id, {\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            })\n        ).json();\n        const a = document.createElement('a');\n        a.href = `data:application/pdf;base64,${json.data}`;\n        a.setAttribute('download', id + '.pdf');\n        a.click();\n    }\n}\n\nexport const salesInvoiceService: SalesInvoiceService = new SalesInvoiceService();\n",
    "clients/admin/src/lib/support/testHelpers.ts": "import { render, RenderOptions, RenderResult } from '@testing-library/svelte';\nimport type { SvelteComponent } from 'svelte';\n\nexport interface GetFormElementsResult {\n    elements: any;\n    renderResult: RenderResult;\n}\n\ntype SvelteComponentOptions = any;\n\nexport const getFormElements = async (\n    page: typeof SvelteComponent,\n    ids: string[],\n    componentOptions?: SvelteComponentOptions,\n    renderOptions?: Omit<RenderOptions, 'queries'>,\n): Promise<GetFormElementsResult> => {\n    const renderResult = render(page, componentOptions, renderOptions);\n    const { findByTestId } = renderResult;\n    const elements: any = {};\n    for (const id of ids) {\n        elements[id] = await findByTestId(id);\n    }\n    return {\n        elements,\n        renderResult,\n    };\n};\n",
    "clients/mobile/app/lib/apollo.ts": "import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloLink } from 'apollo-link';\n\nexport const apollo = (token, uri = process.env.API_BASE_URL) =>\n    new ApolloClient({\n        link: new ApolloLink((operation, forward) => {\n            operation.setContext({\n                headers: {\n                    authorization: `Bearer ${token}`,\n                },\n            });\n            return forward(operation);\n        }).concat(createHttpLink({ uri })),\n        cache: new InMemoryCache(),\n    });\n\nexport const gqlQuery = async (this_component, session, gql) => {\n    const { token } = session;\n\n    if (!token) {\n        return this_component.redirect(302, 'login');\n    }\n\n    try {\n        return {\n            token,\n            cache: await apollo(token).query({\n                query: gql,\n            }),\n        };\n    } catch (e) {\n        if (\n            e.graphQLErrors &&\n            e.message &&\n            e.message.indexOf('Request failed with status code 401') > 0\n        ) {\n            console.log('-> login');\n            return this_component.redirect(302, 'login');\n        }\n        throw e;\n    }\n};\n"
  }
}